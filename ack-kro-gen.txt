#-------------------------------------------------------------------------------------------------------------------------------------------------#
# graphs.yaml
#-------------------------------------------------------------------------------------------------------------------------------------------------#
graphs:
  - service: s3
    version: "1.1.1"
    releaseName: "__KRO_NAME__"
    namespace: "__KRO_NS__"
    image:
      repository: "__KRO_IMAGE_REPO__"
      tag: "__KRO_IMAGE_TAG__"
    serviceAccount:
      name: "__KRO_SA_NAME__"
      annotations:
        eks.amazonaws.com/role-arn: "__KRO_IRSA_ARN__"
    controller:
      logLevel: "__KRO_LOG_LEVEL__"
      logDev: "__KRO_LOG_DEV__"
      awsRegion: "__KRO_AWS_REGION__"
    extras:
      values: {}

  - service: ec2
    version: "1.7.0"
    releaseName: "__KRO_NAME__"
    namespace: "__KRO_NS__"
    image:
      repository: "__KRO_IMAGE_REPO__"
      tag: "__KRO_IMAGE_TAG__"
    serviceAccount:
      name: "__KRO_SA_NAME__"
      annotations:
        eks.amazonaws.com/role-arn: "__KRO_IRSA_ARN__"
    controller:
      logLevel: "__KRO_LOG_LEVEL__"
      logDev: "__KRO_LOG_DEV__"
      awsRegion: "__KRO_AWS_REGION__"
    extras:
      values: {}

  - service: rds
    version: "1.6.2"
    releaseName: "__KRO_NAME__"
    namespace: "__KRO_NS__"
    image:
      repository: "__KRO_IMAGE_REPO__"
      tag: "__KRO_IMAGE_TAG__"
    serviceAccount:
      name: "__KRO_SA_NAME__"
      annotations:
        eks.amazonaws.com/role-arn: "__KRO_IRSA_ARN__"
    controller:
      logLevel: "__KRO_LOG_LEVEL__"
      logDev: "__KRO_LOG_DEV__"
      awsRegion: "__KRO_AWS_REGION__"
    extras:
      values: {}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# README.md
#-------------------------------------------------------------------------------------------------------------------------------------------------#
# ack-kro-gen

A production-ready Go CLI that generates **KRO ResourceGraphDefinitions (RGDs)** for AWS ACK controllers. It automates the end-to-end process of pulling upstream ACK Helm charts via the Helm SDK, rendering them fully in-memory, performing placeholder substitution, classifying objects by type, and emitting deterministic graph definitions under `out/<service>.rgd.yaml`.

## Goal
The project bridges **AWS ACK controllers** (delivered as Helm charts) with **KRO ResourceGraphDefinitions**, enabling:
- Automated generation of consistent KRO RGDs for ~39 AWS services.
- Deterministic and reproducible manifests, with CRDs always ordered before workloads.
- Schema-driven placeholders for account IDs, regions, IRSA providers, and other deployment parameters.
- Offline reproducibility for CI/CD and air‑gapped environments.

This allows DevOps and platform engineers to model, version, and deploy ACK controllers declaratively via KRO without manually maintaining YAML for each service.

## Features
- Go 1.22
- Pure Helm SDK usage (no shelling out)
- OCI chart support
- Offline mode with a local chart cache
- Deterministic output ordering and formatting
- Strict error handling and logging
- Modular design (`config`, `helmfetch`, `render`, `classify`, `placeholders`, `kro`)
- Unit tests with no network access

## Install
Build the CLI from the `cmd` directory:

```bash
go build -o ack-kro-gen ./cmd/ack-kro-gen
```

## Usage
Generate RGDs online (charts pulled into cache if missing):

- Full run (6 concurrency, info logging):
```bash
./ack-kro-gen --charts-cache .cache/charts --offline=false --graphs graphs.yaml --out out --concurrency 6 --log-level info 
```

Run in offline mode (charts must already exist in the cache):
```bash
./ack-kro-gen --charts-cache .cache/charts --offline=true --graphs graphs.yaml --out out
```

### Notes
- `go build ./...` only checks that all packages compile; it discards binaries. Use `go build ./cmd/ack-kro-gen` or add `-o ack-kro-gen` to produce the CLI executable.
- Install globally with:
  ```bash
  go install ./cmd/ack-kro-gen
  ```
  which drops the binary into `$GOBIN` or `$GOPATH/bin` so you can run `ack-kro-gen` anywhere.

## graphs.yaml schema
Each service entry defines the chart version, release parameters, and overrides. Example:

```yaml
graphs:
  - service: s3
    version: "1.2.27"
    releaseName: "__KRO_NAME__"
    namespace: "__KRO_NS__"
    image:
      repository: "__KRO_IMAGE_REPO__"
      tag: "__KRO_IMAGE_TAG__"
    serviceAccount:
      name: "__KRO_SA_NAME__"
      annotations:
        eks.amazonaws.com/role-arn: "__KRO_IRSA_ARN__"
    controller:
      logLevel: "__KRO_LOG_LEVEL__"
      logDev: "__KRO_LOG_DEV__"
      awsRegion: "__KRO_AWS_REGION__"
    extras:
      values: {}
```

## Adding a service
1. Append a new entry in `graphs.yaml` with `service`, `version`, `releaseName`, and `namespace`. Optional fields allow overriding image, service account, and controller flags.
2. Run the CLI with your cache and output paths.

## Offline mode
- Pre-populate `--charts-cache` with the required ACK charts (either from a prior online run or manual download).
- Use `--offline=true` to render without network calls.

## Determinism
- Objects ordered: CRDs → core resources (SA, ConfigMap, Service, Namespace) → RBAC → Deployments → others.
- Stable resource IDs: `<kind>-<name>` kebab‑cased and deduplicated.
- Canonical YAML encoding ensures reproducible diffs.

## Tests
- Placeholder substitution only modifies scalar strings, preserving structure.
- Classification ensures objects are grouped and ordered consistently.
- End-to-end offline render validated with a local dummy chart in `internal/render/testdata/dummychart`.


#-------------------------------------------------------------------------------------------------------------------------------------------------#
# .cache/charts/ec2-chart-1.7.0.tgz
#-------------------------------------------------------------------------------------------------------------------------------------------------#
[Error reading file: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte]

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# .cache/charts/rds-chart-1.6.2.tgz
#-------------------------------------------------------------------------------------------------------------------------------------------------#
[Error reading file: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte]

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# .cache/charts/s3-chart-1.1.1.tgz
#-------------------------------------------------------------------------------------------------------------------------------------------------#
[Error reading file: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte]

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# cmd/ack-kro-gen/main.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package main

import (
	"context"
	"errors"
	"fmt"
	"log"
	"os"
	"path/filepath"
	"runtime"
	"strings"
	"time"

	"github.com/spf13/cobra"
	"golang.org/x/sync/errgroup"

	"github.com/example/ack-kro-gen/internal/config"
	"github.com/example/ack-kro-gen/internal/helmfetch"
	"github.com/example/ack-kro-gen/internal/kro"
	"github.com/example/ack-kro-gen/internal/render"
)

var (
	flagGraphs      string
	flagOut         string
	flagCache       string
	flagOffline     bool
	flagConcurrency int
	flagLogLevel    string
)

func main() {
	root := &cobra.Command{
		Use:   "ack-kro-gen",
		Short: "Generate KRO RGDs for AWS ACK controllers",
		RunE: func(cmd *cobra.Command, args []string) error {
			if flagGraphs == "" || flagOut == "" || flagCache == "" {
				return errors.New("--graphs, --out, and --charts-cache are required")
			}

			absOut, err := filepath.Abs(flagOut)
			if err != nil {
				return err
			}
			if err := os.MkdirAll(absOut, 0o755); err != nil {
				return fmt.Errorf("create out dir: %w", err)
			}

			cfg, err := config.Load(flagGraphs)
			if err != nil {
				return err
			}

			ctx, cancel := context.WithTimeout(context.Background(), 60*time.Minute)
			defer cancel()

			sem := make(chan struct{}, flagConcurrency)
			g, ctx := errgroup.WithContext(ctx)

			for _, gspec := range cfg.Graphs {
				gs := gspec // capture
				g.Go(func() error {
					sem <- struct{}{}
					defer func() { <-sem }()

					chartRef := fmt.Sprintf("oci://public.ecr.aws/aws-controllers-k8s/%s-chart:%s", gs.Service, gs.Version)
					chartPath, err := helmfetch.EnsureChart(ctx, chartRef, flagCache, flagOffline)
					if err != nil {
						return fmt.Errorf("fetch chart for %s: %w", gs.Service, err)
					}

					r, err := render.RenderChart(ctx, chartPath, gs)
					if err != nil {
						return fmt.Errorf("render %s: %w", gs.Service, err)
					}

					// Build RGD and write
					file := filepath.Join(absOut, fmt.Sprintf("%s.rgd.yaml", gs.Service))
					if err := kro.EmitRGD(gs, r, file, absOut); err != nil {
						return fmt.Errorf("emit rgd for %s: %w", gs.Service, err)
					}
					log.Printf("wrote %s", file)
					return nil
				})
			}
			return g.Wait()
		},
	}

	root.Flags().StringVar(&flagGraphs, "graphs", "graphs.yaml", "graphs.yaml path")
	root.Flags().StringVar(&flagOut, "out", "out", "output directory")
	root.Flags().StringVar(&flagCache, "charts-cache", ".cache/charts", "local chart cache directory")
	root.Flags().BoolVar(&flagOffline, "offline", false, "offline mode, read charts only from cache")
	root.Flags().IntVar(&flagConcurrency, "concurrency", max(2, runtime.NumCPU()), "parallel services")
	root.Flags().StringVar(&flagLogLevel, "log-level", "info", "log level: info|debug")

	if err := root.Execute(); err != nil {
		if !strings.HasSuffix(err.Error(), "help requested") {
			log.Fatal(err)
		}
	}
}

func max(a, b int) int { if a > b { return a }; return b }

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/classify/classify.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package classify

import (
	"fmt"
	"sort"
	"strings"

	"gopkg.in/yaml.v3"
)

type Obj struct {
	APIVersion string
	Kind       string
	Name       string
	Namespace  string
	RawYAML    string
}

type Groups struct {
	CRDs        []Obj
	Core        []Obj // ServiceAccount, Service, ConfigMap, Namespace
	RBAC        []Obj // ClusterRole, Role, ClusterRoleBinding, RoleBinding
	Deployments []Obj // Deployments
	Others      []Obj // any leftover kinds
}

func Parse(doc string) (Obj, error) {
	var m map[string]any
	if err := yaml.Unmarshal([]byte(doc), &m); err != nil {
		return Obj{}, err
	}
	apiv, _ := m["apiVersion"].(string)
	kind, _ := m["kind"].(string)
	md, _ := m["metadata"].(map[string]any)
	name, _ := md["name"].(string)
	ns, _ := md["namespace"].(string)
	return Obj{APIVersion: apiv, Kind: kind, Name: name, Namespace: ns, RawYAML: strings.TrimSpace(doc) + "\n"}, nil
}

func Classify(objs []Obj) Groups {
	g := Groups{}
	for _, o := range objs {
		if strings.HasPrefix(o.APIVersion, "apiextensions.k8s.io/") && o.Kind == "CustomResourceDefinition" {
			g.CRDs = append(g.CRDs, o); continue
		}
		switch o.Kind {
		case "ServiceAccount", "Service", "ConfigMap", "Namespace":
			g.Core = append(g.Core, o)
		case "ClusterRole", "Role", "ClusterRoleBinding", "RoleBinding":
			g.RBAC = append(g.RBAC, o)
		case "Deployment":
			g.Deployments = append(g.Deployments, o)
		default:
			g.Others = append(g.Others, o)
		}
	}
	// Deterministic order within groups
	less := func(a, b Obj) bool {
		ka := fmt.Sprintf("%s/%s/%s", a.Kind, a.Namespace, a.Name)
		kb := fmt.Sprintf("%s/%s/%s", b.Kind, b.Namespace, b.Name)
		return ka < kb
	}
	sort.Slice(g.CRDs, func(i, j int) bool { return less(g.CRDs[i], g.CRDs[j]) })
	sort.Slice(g.Core, func(i, j int) bool { return less(g.Core[i], g.Core[j]) })
	sort.Slice(g.RBAC, func(i, j int) bool { return less(g.RBAC[i], g.RBAC[j]) })
	sort.Slice(g.Deployments, func(i, j int) bool { return less(g.Deployments[i], g.Deployments[j]) })
	sort.Slice(g.Others, func(i, j int) bool { return less(g.Others[i], g.Others[j]) })
	return g
}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/classify/classify_test.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package classify

import "testing"

func TestClassifyOrder(t *testing.T) {
	crd := `apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: a.example.com
`
	sa := `apiVersion: v1
kind: ServiceAccount
metadata:
  name: s
`
	rb := `apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: r
`
	dep := `apiVersion: apps/v1
kind: Deployment
metadata:
  name: d
`

	objs := []Obj{}
	for _, d := range []string{crd, sa, rb, dep} {
		o, err := Parse(d)
		if err != nil { t.Fatal(err) }
		objs = append(objs, o)
	}
	g := Classify(objs)
	if len(g.CRDs) != 1 || len(g.Core) != 1 || len(g.RBAC) != 1 || len(g.Deployments) != 1 {
		t.Fatalf("unexpected grouping: %+v", g)
	}
}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/config/config.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package config

import (
	"errors"
	"fmt"
	"os"

	"gopkg.in/yaml.v3"
)

type Root struct {
	Graphs []GraphSpec `yaml:"graphs"`
}

type GraphSpec struct {
	Service       string         `yaml:"service"`
	Version       string         `yaml:"version"`
	ReleaseName   string         `yaml:"releaseName"`
	Namespace     string         `yaml:"namespace"`
	Image         ImageSpec      `yaml:"image"`
	ServiceAccount SASpec        `yaml:"serviceAccount"`
	Controller    ControllerSpec `yaml:"controller"`
	Extras        ExtrasSpec     `yaml:"extras"`
}

type ImageSpec struct {
	Repository string `yaml:"repository"`
	Tag        string `yaml:"tag"`
}

type SASpec struct {
	Name        string            `yaml:"name"`
	Annotations map[string]string `yaml:"annotations"`
}

type ControllerSpec struct {
	LogLevel  string `yaml:"logLevel"`
	LogDev    string `yaml:"logDev"`
	AWSRegion string `yaml:"awsRegion"`
}

type ExtrasSpec struct {
	Values map[string]any `yaml:"values"`
}

func Load(path string) (*Root, error) {
	b, err := os.ReadFile(path)
	if err != nil { return nil, err }
	var r Root
	if err := yaml.Unmarshal(b, &r); err != nil { return nil, err }
	if len(r.Graphs) == 0 { return nil, errors.New("graphs: at least one service is required") }
	for i, g := range r.Graphs {
		if g.Service == "" || g.Version == "" { return nil, fmt.Errorf("graphs[%d]: service and version are required", i) }
		if g.ReleaseName == "" || g.Namespace == "" { return nil, fmt.Errorf("graphs[%d]: releaseName and namespace are required", i) }
	}
	return &r, nil
}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/helmfetch/fetch.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package helmfetch

import (
	"context"
	"errors"
	"fmt"
	"net/url"
	"os"
	"path/filepath"
	"strings"

	"helm.sh/helm/v3/pkg/cli"
	"helm.sh/helm/v3/pkg/downloader"
	"helm.sh/helm/v3/pkg/getter"
	"helm.sh/helm/v3/pkg/registry"
)

// EnsureChart downloads the chart into cache if not present and returns the local path to a chart archive.
// chartRef must include version, e.g. oci://.../ack-ec2-controller-chart:1.2.27
func EnsureChart(ctx context.Context, chartRef, cacheDir string, offline bool) (string, error) {
	if !strings.HasPrefix(chartRef, "oci://") {
		return "", errors.New("only OCI chart refs are supported")
	}
	if _, err := url.Parse(chartRef); err != nil { return "", fmt.Errorf("invalid chart ref: %w", err) }
	if err := os.MkdirAll(cacheDir, 0o755); err != nil { return "", err }

	settings := cli.New()
	settings.RepositoryCache = filepath.Join(cacheDir, "repo-cache")
	settings.RepositoryConfig = filepath.Join(cacheDir, "repositories.yaml")
	settings.RegistryConfig = filepath.Join(cacheDir, "registry.json")

	rc, err := registry.NewClient(registry.ClientOptDebug(false))
	if err != nil { return "", fmt.Errorf("registry client: %w", err) }

	providers := getter.All(settings)
	cd := downloader.ChartDownloader{
		Out:              os.Stdout,
		Getters:          providers,
		Options:          []getter.Option{},
		RegistryClient:   rc,
		RepositoryConfig: settings.RepositoryConfig,
		RepositoryCache:  settings.RepositoryCache,
	}

	// Helm downloader will write into current cwd by default. Force cacheDir.
	pwd := cacheDir
	name, version := splitOCI(chartRef)
	if name == "" || version == "" { return "", errors.New("oci ref must include :version") }
	archive := filepath.Join(pwd, fmt.Sprintf("%s-%s.tgz", sanitize(filepath.Base(name)), version))

	if fi, err := os.Stat(archive); err == nil && fi.Size() > 0 {
		return archive, nil
	}
	if offline {
		return "", fmt.Errorf("offline mode and chart not cached: %s", archive)
	}
	if _, _, err := cd.DownloadTo(name, version, pwd); err != nil {
		return "", fmt.Errorf("download: %w", err)
	}
	if _, err := os.Stat(archive); err != nil {
		return "", fmt.Errorf("downloaded chart archive missing: %s", archive)
	}
	return archive, nil
}

func splitOCI(ref string) (string, string) {
	// oci://host/path:tag
	i := strings.LastIndex(ref, ":")
	if i < 0 { return ref, "" }
	return ref[:i], ref[i+1:]
}

func sanitize(s string) string { return strings.Map(func(r rune) rune {
	if r == '/' || r == ':' { return '_' }
	return r
}, s) }

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/kro/rgd.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package kro

import (
	"errors"
	"fmt"
	"os"
	"path/filepath"
	"regexp"
	"strings"

	"github.com/example/ack-kro-gen/internal/classify"
	"github.com/example/ack-kro-gen/internal/config"
	"github.com/example/ack-kro-gen/internal/placeholders"
	"github.com/example/ack-kro-gen/internal/render"
	"github.com/example/ack-kro-gen/internal/util"
	"gopkg.in/yaml.v3"
)

type RGD struct {
	APIVersion string        `yaml:"apiVersion"`
	Kind       string        `yaml:"kind"`
	Metadata   Metadata      `yaml:"metadata"`
	Spec       RGDSpec       `yaml:"spec"`
}

type Metadata struct {
	Name      string            `yaml:"name"`
	Namespace string            `yaml:"namespace"`
	Labels    map[string]string `yaml:"labels,omitempty"`
}

type RGDSpec struct {
	Schema    Schema                  `yaml:"schema"`
	Resources []Resource              `yaml:"resources"`
}

type Schema struct {
	APIVersion string      `yaml:"apiVersion"`
	Kind       string      `yaml:"kind"`
	Spec       SchemaSpec  `yaml:"spec"`
}

type SchemaSpec struct {
	Name        string                 `yaml:"name"`
	Namespace   string                 `yaml:"namespace"`
	Values      map[string]any         `yaml:"values"`
}

type Resource struct {
	ID       string                 `yaml:"id"`
	Template map[string]any         `yaml:"template"`
}

func EmitRGD(gs config.GraphSpec, r *render.Result, outPath string, outDir string) error {
	absOutDir, _ := filepath.Abs(outDir)
	absFile, _ := filepath.Abs(outPath)
	if !strings.HasPrefix(absFile, absOutDir+string(filepath.Separator)) {
		return errors.New("refusing to write outside the output directory")
	}

	// Build object list: CRDs first, then templates
	var objs []classify.Obj
	for _, crd := range r.CRDs {
		crd2, err := placeholders.ReplaceYAMLScalars(crd)
		if err != nil { return fmt.Errorf("placeholder on CRD: %w", err) }
		o, err := classify.Parse(crd2)
		if err != nil { return fmt.Errorf("parse CRD: %w", err) }
		objs = append(objs, o)
	}
	for _, body := range r.RenderedFiles {
		for _, doc := range util.SplitYAML(body) {
			if strings.TrimSpace(doc) == "" { continue }
			repl, err := placeholders.ReplaceYAMLScalars(doc)
			if err != nil { return fmt.Errorf("placeholder replace: %w", err) }
			o, err := classify.Parse(repl)
			if err != nil { return fmt.Errorf("parse manifest: %w", err) }
			objs = append(objs, o)
		}
	}

	g := classify.Classify(objs)

	ordered := append([]classify.Obj{}, g.CRDs...)
	ordered = append(ordered, g.Core...)
	ordered = append(ordered, g.RBAC...)
	ordered = append(ordered, g.Deployments...)
	ordered = append(ordered, g.Others...)

	resources := make([]Resource, 0, len(ordered))
	seen := map[string]struct{}{}
	for _, o := range ordered {
		var m map[string]any
		if err := yaml.Unmarshal([]byte(o.RawYAML), &m); err != nil { return err }
		id := makeID(o.Kind + "-" + o.Name)
		if _, ok := seen[id]; ok {
			for i := 2; ; i++ {
				alt := fmt.Sprintf("%s-%d", id, i)
				if _, ok := seen[alt]; !ok { id = alt; break }
			}
		}
		seen[id] = struct{}{}
		resources = append(resources, Resource{ID: id, Template: m})
	}

	serviceUpper := strings.ToUpper(gs.Service[:1]) + gs.Service[1:]

	s := Schema{
		APIVersion: "v1alpha1",
		Kind:       serviceUpper + "controller",
		Spec: SchemaSpec{
			Name:      "${schema.spec.name}",
			Namespace: "${schema.spec.namespace}",
			Values: map[string]any{
				"aws": map[string]any{
					"accountID":          "${schema.spec.values.aws.accountID}", // required
					"region":             "${schema.spec.values.aws.region}",
				},
				"deployment": map[string]any{
					"containerPort": 8080,
					"replicas":      1,
				},
				"iamRole": map[string]any{
					"oidcProvider":       "${schema.spec.values.iamRole.oidcProvider}", // required
					"maxSessionDuration": 3600,
				},
				"image": map[string]any{
					"repository":  "${schema.spec.values.image.repository}",
					"tag":         "${schema.spec.values.image.tag}",
					"deletePolicy": "${schema.spec.values.image.deletePolicy}",
					"resources": map[string]any{
						"requests": map[string]any{"memory": "64Mi", "cpu": "50m"},
						"limits":   map[string]any{"memory": "128Mi", "cpu": "100m"},
					},
				},
				"log": map[string]any{
					"enabled": "${schema.spec.values.log.enabled}",
					"level":   "${schema.spec.values.log.level}",
				},
				"serviceAccount": map[string]any{
					"name": "${schema.spec.values.serviceAccount.name}",
				},
			},
		},
	}

	rgd := RGD{
		APIVersion: "kro.run/v1alpha1",
		Kind:       "ResourceGraphDefinition",
		Metadata: Metadata{
			Name:      fmt.Sprintf("ack-%s-ctrl.kro.run", gs.Service),
			Namespace: "kro",
		},
		Spec: RGDSpec{
			Schema:    s,
			Resources: resources,
		},
	}

	b, err := marshalYAML(rgd)
	if err != nil { return err }
	if err := os.WriteFile(outPath, b, 0o644); err != nil { return err }
	return nil
}

func marshalYAML(v any) ([]byte, error) {
	var buf strings.Builder
	enc := yaml.NewEncoder(&buf)
	enc.SetIndent(2)
	if err := enc.Encode(v); err != nil { return nil, err }
	_ = enc.Close()
	return []byte(buf.String()), nil
}

var nonAlnum = regexp.MustCompile(`[^a-z0-9-]`)

func makeID(s string) string {
	s = strings.ToLower(s)
	s = strings.ReplaceAll(s, " ", "-")
	s = nonAlnum.ReplaceAllString(s, "-")
	s = strings.Trim(s, "-")
	if s == "" { s = "res" }
	return s
}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/placeholders/replace.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package placeholders

import (
	"bytes"
	"strings"

	"gopkg.in/yaml.v3"
)

var sentinelToSchema = map[string]string{
	"__KRO_NAME__":       "${schema.spec.name}",
	"__KRO_NS__":         "${schema.spec.namespace}",
	"__KRO_IMAGE_REPO__": "${schema.spec.values.image.repository}",
	"__KRO_IMAGE_TAG__":  "${schema.spec.values.image.tag}",
	"__KRO_SA_NAME__":    "${schema.spec.values.serviceAccount.name}",
	"__KRO_IRSA_ARN__":   "${ackIamRole.status.ackResourceMetadata.arn}",
	"__KRO_AWS_REGION__": "${schema.spec.values.aws.region}",
	"__KRO_LOG_LEVEL__":  "${schema.spec.values.log.level}",
	"__KRO_LOG_DEV__":    "${schema.spec.values.log.enabled}",
}

// ReplaceYAMLScalars walks the YAML AST and replaces sentinel strings inside scalar nodes only.
func ReplaceYAMLScalars(in string) (string, error) {
	var root yaml.Node
	if err := yaml.Unmarshal([]byte(in), &root); err != nil { return "", err }
	walk(&root)
	var buf bytes.Buffer
	enc := yaml.NewEncoder(&buf)
	enc.SetIndent(2)
	if err := enc.Encode(&root); err != nil { return "", err }
	_ = enc.Close()
	return buf.String(), nil
}

func walk(n *yaml.Node) {
	if n == nil { return }
	if n.Kind == yaml.ScalarNode && n.Tag == "!!str" {
		for k, v := range sentinelToSchema {
			if strings.Contains(n.Value, k) {
				n.Value = strings.ReplaceAll(n.Value, k, v)
			}
		}
	}
	for _, c := range n.Content { walk(c) }
}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/placeholders/replace_test.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package placeholders

import (
	"strings"
	"testing"
)

const sample = `apiVersion: v1
kind: ServiceAccount
metadata:
  name: __KRO_SA_NAME__
  namespace: __KRO_NS__
  annotations:
    eks.amazonaws.com/role-arn: "__KRO_IRSA_ARN__"
`

func TestReplaceYAMLScalars(t *testing.T) {
	out, err := ReplaceYAMLScalars(sample)
	if err != nil { t.Fatal(err) }
	checks := []string{
		"${schema.spec.values.serviceAccount.name}",
		"${schema.spec.namespace}",
		"${ackIamRole.status.ackResourceMetadata.arn}",
	}
	for _, want := range checks {
		if !strings.Contains(out, want) {
			t.Fatalf("missing %q in output: %s", want, out)
		}
	}
}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/render/render.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package render

import (
	"context"
	"fmt"
	// "maps"
	"path/filepath"
	"sort"
	"strings"

	"github.com/example/ack-kro-gen/internal/config"
	"github.com/example/ack-kro-gen/internal/util"
	// "gopkg.in/yaml.v3"
	"helm.sh/helm/v3/pkg/chart/loader"
	"helm.sh/helm/v3/pkg/chartutil"
	"helm.sh/helm/v3/pkg/engine"
)

type Result struct {
	RenderedFiles map[string]string // filename -> YAML text (multi-doc allowed)
	CRDs          []string          // YAML docs for CRDs
}

func RenderChart(ctx context.Context, chartArchivePath string, gs config.GraphSpec) (*Result, error) {
	ch, err := loader.Load(chartArchivePath)
	if err != nil { return nil, fmt.Errorf("load chart: %w", err) }

	vals := buildValues(gs)
	rel := chartutil.ReleaseOptions{
		Name:      "__KRO_NAME__",
		Namespace: "__KRO_NS__",
		IsInstall: true,
		Revision:  1,
	}
	caps := chartutil.DefaultCapabilities
	caps.KubeVersion.Version = "v1.27.0"

	rvals, err := chartutil.ToRenderValues(ch, vals, rel, caps)
	if err != nil { return nil, fmt.Errorf("render values: %w", err) }

	renderer := engine.Engine{}
	files, err := renderer.Render(ch, rvals.AsMap())
	if err != nil { return nil, fmt.Errorf("engine render: %w", err) }

	// Collect CRDs separately for ordering.
	var crds []string
	for _, obj := range ch.CRDObjects() {
		crds = append(crds, string(obj.File.Data))
	}

	// Keep only YAML manifests from templates
	out := map[string]string{}
	for name, body := range files {
		if !strings.HasSuffix(name, ".yaml") && !strings.HasSuffix(name, ".yml") { continue }
		// Normalize path for determinism
		out[filepath.ToSlash(name)] = strings.TrimSpace(body) + "\n"
	}

	// Deterministic file order not strictly needed since we classify later. Sort keys so tests stable.
	ordered := map[string]string{}
	keys := make([]string, 0, len(out))
	for k := range out { keys = append(keys, k) }
	sort.Strings(keys)
	for _, k := range keys { ordered[k] = out[k] }

	return &Result{RenderedFiles: ordered, CRDs: crds}, nil
}

func buildValues(gs config.GraphSpec) map[string]any {
  base := map[string]any{
    "image": map[string]any{
      "repository": gs.Image.Repository,
      "tag":        gs.Image.Tag,
    },
    "serviceAccount": map[string]any{
      "name":        gs.ServiceAccount.Name,
      "annotations": map[string]any{},
    },
    "logLevel": gs.Controller.LogLevel,
    "logDev":   gs.Controller.LogDev,
    "aws": map[string]any{
      "region": gs.Controller.AWSRegion,
    },
  }

  if len(gs.ServiceAccount.Annotations) > 0 {
    ann := make(map[string]any, len(gs.ServiceAccount.Annotations))
    for k, v := range gs.ServiceAccount.Annotations {
      ann[k] = v
    }
    base["serviceAccount"].(map[string]any)["annotations"] = ann
  }

  if gs.Extras.Values != nil {
    svcKey := gs.Service + "-chart"
    if v, ok := gs.Extras.Values[svcKey]; ok {
      if mv, ok := v.(map[string]any); ok {
        deepMerge(base, mv)
      }
    }
    if v, ok := gs.Extras.Values["ack-chart"]; ok {
      if mv, ok := v.(map[string]any); ok {
        deepMerge(base, mv)
      }
    }
    for k, v := range gs.Extras.Values {
      if k == svcKey || k == "ack-chart" {
        continue
      }
      if mv, ok := v.(map[string]any); ok {
        if cur, ok := base[k].(map[string]any); ok {
          deepMerge(cur, mv)
          base[k] = cur
        } else {
          base[k] = cloneMap(mv)
        }
      } else {
        base[k] = v
      }
    }
  }

  if name, ok := base["serviceAccount"].(string); ok {
    base["serviceAccount"] = map[string]any{
      "create":      false,
      "name":        name,
      "annotations": map[string]any{},
    }
  }
  sa, ok := base["serviceAccount"].(map[string]any)
  if !ok {
    sa = map[string]any{"name": gs.ServiceAccount.Name}
  }
  base["serviceAccount"] = sa

  switch a := sa["annotations"].(type) {
  case map[string]any:
  case map[string]string:
    m := make(map[string]any, len(a))
    for k, v := range a {
      m[k] = v
    }
    sa["annotations"] = m
  default:
    sa["annotations"] = map[string]any{}
  }

  return base
}

func deepMerge(dst, src map[string]any) {
  for k, v := range src {
    if vmap, ok := v.(map[string]any); ok {
      if dmap, ok := dst[k].(map[string]any); ok {
        deepMerge(dmap, vmap)
        dst[k] = dmap
      } else {
        dst[k] = cloneMap(vmap)
      }
    } else {
      dst[k] = v
    }
  }
}

func cloneMap(m map[string]any) map[string]any {
  out := make(map[string]any, len(m))
  for k, v := range m {
    if mv, ok := v.(map[string]any); ok {
      out[k] = cloneMap(mv)
    } else {
      out[k] = v
    }
  }
  return out
}


// SplitYAML converts multi-doc strings into individual docs. Re-exported for tests.
func SplitYAML(s string) []string { return util.SplitYAML(s) }

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/render/render_offline_test.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package render

import (
	"context"
	"testing"

	"github.com/example/ack-kro-gen/internal/config"
)

func TestRenderDummyChart(t *testing.T) {
	ctx := context.Background()
	res, err := RenderChart(ctx, "internal/render/testdata/dummychart", config.GraphSpec{
		Service:     "dummy",
		Version:     "0.1.0",
		ReleaseName: "__KRO_NAME__",
		Namespace:   "__KRO_NS__",
		Image:       config.ImageSpec{Repository: "__KRO_IMAGE_REPO__", Tag: "__KRO_IMAGE_TAG__"},
		ServiceAccount: config.SASpec{
			Name:        "__KRO_SA_NAME__",
			Annotations: map[string]string{"eks.amazonaws.com/role-arn": "__KRO_IRSA_ARN__"},
		},
		Controller: config.ControllerSpec{
			LogLevel:  "__KRO_LOG_LEVEL__",
			LogDev:    "__KRO_LOG_DEV__",
			AWSRegion: "__KRO_AWS_REGION__",
		},
	})
	if err != nil { t.Fatal(err) }
	if len(res.RenderedFiles) == 0 { t.Fatal("no rendered files") }
}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/render/testdata/dummychart/Chart.yaml
#-------------------------------------------------------------------------------------------------------------------------------------------------#
apiVersion: v2
name: dummy
version: 0.1.0
appVersion: "1.0.0"

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/render/testdata/dummychart/values.yaml
#-------------------------------------------------------------------------------------------------------------------------------------------------#
image:
  repository: "__KRO_IMAGE_REPO__"
  tag: "__KRO_IMAGE_TAG__"
serviceAccount:
  name: "__KRO_SA_NAME__"
  annotations:
    eks.amazonaws.com/role-arn: "__KRO_IRSA_ARN__"
logLevel: "__KRO_LOG_LEVEL__"
logDev: "__KRO_LOG_DEV__"
aws:
  region: "__KRO_AWS_REGION__"

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/render/testdata/dummychart/crds/dummy.example.com_dummyresources.yaml
#-------------------------------------------------------------------------------------------------------------------------------------------------#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dummyresources.dummy.example.com
spec:
  group: dummy.example.com
  names:
    kind: DummyResource
    plural: dummyresources
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/render/testdata/dummychart/templates/deployment.yaml
#-------------------------------------------------------------------------------------------------------------------------------------------------#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dummy.fullname" . | default (printf "%s-controller" .Release.Name) }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ack-controller
  template:
    metadata:
      labels:
        app: ack-controller
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: controller
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          args:
            - "--aws-region={{ .Values.aws.region }}"
            - "--log-level={{ .Values.logLevel }}"
            - "--log-dev={{ .Values.logDev }}"
          ports:
            - containerPort: 8080

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/render/testdata/dummychart/templates/rbac.yaml
#-------------------------------------------------------------------------------------------------------------------------------------------------#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Name }}-role
subjects:
  - kind: ServiceAccount
    name: {{ .Values.serviceAccount.name }}
    namespace: {{ .Release.Namespace }}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/render/testdata/dummychart/templates/serviceaccount.yaml
#-------------------------------------------------------------------------------------------------------------------------------------------------#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccount.name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    eks.amazonaws.com/role-arn: {{ .Values.serviceAccount.annotations."eks.amazonaws.com/role-arn" }}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# internal/util/yamlsplit.go
#-------------------------------------------------------------------------------------------------------------------------------------------------#
package util

import "strings"

// SplitYAML splits a YAML multi-document string into individual docs, trimming empties.
func SplitYAML(s string) []string {
	parts := []string{}
	for _, p := range strings.Split(s, "\n---") {
		t := strings.TrimSpace(p)
		if t == "" { continue }
		// Ensure trailing newline for deterministic encoding later
		if !strings.HasSuffix(t, "\n") { t += "\n" }
		parts = append(parts, t)
	}
	return parts
}

#-------------------------------------------------------------------------------------------------------------------------------------------------#
# out/.gitkeep
#-------------------------------------------------------------------------------------------------------------------------------------------------#


#-------------------------------------------------------------------------------------------------------------------------------------------------#
# out/ec2.rgd.yaml
#-------------------------------------------------------------------------------------------------------------------------------------------------#
apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: ack-ec2-ctrl.kro.run
  namespace: kro
spec:
  schema:
    apiVersion: v1alpha1
    kind: Ec2controller
    spec:
      name: ${schema.spec.name}
      namespace: ${schema.spec.namespace}
      values:
        aws:
          accountID: ${schema.spec.values.aws.accountID}
          region: ${schema.spec.values.aws.region}
        deployment:
          containerPort: 8080
          replicas: 1
        iamRole:
          maxSessionDuration: 3600
          oidcProvider: ${schema.spec.values.iamRole.oidcProvider}
        image:
          deletePolicy: ${schema.spec.values.image.deletePolicy}
          repository: ${schema.spec.values.image.repository}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          tag: ${schema.spec.values.image.tag}
        log:
          enabled: ${schema.spec.values.log.enabled}
          level: ${schema.spec.values.log.level}
        serviceAccount:
          name: ${schema.spec.values.serviceAccount.name}
  resources:
    - id: customresourcedefinition-adoptedresources-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: adoptedresources.services.k8s.aws
        spec:
          group: services.k8s.aws
          names:
            kind: AdoptedResource
            listKind: AdoptedResourceList
            plural: adoptedresources
            singular: adoptedresource
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: AdoptedResource is the schema for the AdoptedResource API.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: AdoptedResourceSpec defines the desired state of the AdoptedResource.
                      properties:
                        aws:
                          description: AWSIdentifiers provide all unique ways to reference an AWS resource.
                          properties:
                            additionalKeys:
                              additionalProperties:
                                type: string
                              description: |-
                                AdditionalKeys represents any additional arbitrary identifiers used when
                                describing the target resource.
                              type: object
                            arn:
                              description: |-
                                ARN is the AWS Resource Name for the resource. It is a globally
                                unique identifier.
                              type: string
                            nameOrID:
                              description: |-
                                NameOrId is a user-supplied string identifier for the resource. It may
                                or may not be globally unique, depending on the type of resource.
                              type: string
                          type: object
                        kubernetes:
                          description: |-
                            ResourceWithMetadata provides the values necessary to create a
                            Kubernetes resource and override any of its metadata values.
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            metadata:
                              description: |-
                                ObjectMeta is metadata that all persisted resources must have, which includes all objects
                                users must create.
                                It is not possible to use `metav1.ObjectMeta` inside spec, as the controller-gen
                                automatically converts this to an arbitrary string-string map.
                                https://github.com/kubernetes-sigs/controller-tools/issues/385

                                Active discussion about inclusion of this field in the spec is happening in this PR:
                                https://github.com/kubernetes-sigs/controller-tools/pull/395

                                Until this is allowed, or if it never is, we will produce a subset of the object meta
                                that contains only the fields which the user is allowed to modify in the metadata.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    Annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                generateName:
                                  description: |-
                                    GenerateName is an optional prefix, used by the server, to generate a unique
                                    name ONLY IF the Name field has not been provided.
                                    If this field is used, the name returned to the client will be different
                                    than the name passed. This value will also be combined with a unique suffix.
                                    The provided value has the same validation rules as the Name field,
                                    and may be truncated by the length of the suffix required to make the value
                                    unique on the server.

                                    If this field is specified and the generated name exists, the server will
                                    NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
                                    ServerTimeout indicating a unique name could not be found in the time allotted, and the client
                                    should retry (optionally after the time indicated in the Retry-After header).

                                    Applied only if Name is not specified.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                                  type: string
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    Map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                                name:
                                  description: |-
                                    Name must be unique within a namespace. Is required when creating resources, although
                                    some resources may allow a client to request the generation of an appropriate name
                                    automatically. Name is primarily intended for creation idempotence and configuration
                                    definition.
                                    Cannot be updated.
                                    More info: http://kubernetes.io/docs/user-guide/identifiers#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace defines the space within each name must be unique. An empty namespace is
                                    equivalent to the "default" namespace, but "default" is the canonical representation.
                                    Not all objects are required to be scoped to a namespace - the value of this field for
                                    those objects will be empty.

                                    Must be a DNS_LABEL.
                                    Cannot be updated.
                                    More info: http://kubernetes.io/docs/user-guide/namespaces
                                  type: string
                                ownerReferences:
                                  description: |-
                                    List of objects depended by this object. If ALL objects in the list have
                                    been deleted, this object will be garbage collected. If this object is managed by a controller,
                                    then an entry in this list will point to this controller, with the controller field set to true.
                                    There cannot be more than one managing controller.
                                  items:
                                    description: |-
                                      OwnerReference contains enough information to let you identify an owning
                                      object. An owning object must be in the same namespace as the dependent, or
                                      be cluster-scoped, so there is no namespace field.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      blockOwnerDeletion:
                                        description: |-
                                          If true, AND if the owner has the "foregroundDeletion" finalizer, then
                                          the owner cannot be deleted from the key-value store until this
                                          reference is removed.
                                          See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                                          for how the garbage collector interacts with this field and enforces the foreground deletion.
                                          Defaults to false.
                                          To set this field, a user needs "delete" permission of the owner,
                                          otherwise 422 (Unprocessable Entity) will be returned.
                                        type: boolean
                                      controller:
                                        description: If true, this reference points to the managing controller.
                                        type: boolean
                                      kind:
                                        description: |-
                                          Kind of the referent.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                                        type: string
                                      uid:
                                        description: |-
                                          UID of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
                                        type: string
                                    required:
                                      - apiVersion
                                      - kind
                                      - name
                                      - uid
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                          required:
                            - group
                            - kind
                          type: object
                      required:
                        - aws
                        - kubernetes
                      type: object
                    status:
                      description: AdoptedResourceStatus defines the observed status of the AdoptedResource.
                      properties:
                        conditions:
                          description: |-
                            A collection of `ackv1alpha1.Condition` objects that describe the various
                            terminal states of the adopted resource CR and its target custom resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                      required:
                        - conditions
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-capacityreservations-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: capacityreservations.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: CapacityReservation
            listKind: CapacityReservationList
            plural: capacityreservations
            singular: capacityreservation
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.capacityReservationID
                  name: ID
                  type: string
                - jsonPath: .spec.startDate
                  name: START_DATE
                  type: date
                - jsonPath: .status.state
                  name: STATE
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: CapacityReservation is the Schema for the CapacityReservations API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        CapacityReservationSpec defines the desired state of CapacityReservation.

                        Describes a Capacity Reservation.
                      properties:
                        additionalInfo:
                          description: Reserved for future use.
                          type: string
                        availabilityZone:
                          description: The Availability Zone in which to create the Capacity Reservation.
                          type: string
                        availabilityZoneID:
                          description: The ID of the Availability Zone in which to create the Capacity Reservation.
                          type: string
                        commitmentDuration:
                          description: |-
                            Required for future-dated Capacity Reservations only. To create a Capacity
                            Reservation for immediate use, omit this parameter.

                            Specify a commitment duration, in seconds, for the future-dated Capacity
                            Reservation.

                            The commitment duration is a minimum duration for which you commit to having
                            the future-dated Capacity Reservation in the active state in your account
                            after it has been delivered.

                            For more information, see Commitment duration (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-concepts.html#cr-commitment-duration).
                          format: int64
                          type: integer
                        deliveryPreference:
                          description: |-
                            Required for future-dated Capacity Reservations only. To create a Capacity
                            Reservation for immediate use, omit this parameter.

                            Indicates that the requested capacity will be delivered in addition to any
                            running instances or reserved capacity that you have in your account at the
                            requested date and time.

                            The only supported value is incremental.
                          type: string
                        ebsOptimized:
                          description: |-
                            Indicates whether the Capacity Reservation supports EBS-optimized instances.
                            This optimization provides dedicated throughput to Amazon EBS and an optimized
                            configuration stack to provide optimal I/O performance. This optimization
                            isn't available with all instance types. Additional usage charges apply when
                            using an EBS- optimized instance.
                          type: boolean
                        endDate:
                          description: |-
                            The date and time at which the Capacity Reservation expires. When a Capacity
                            Reservation expires, the reserved capacity is released and you can no longer
                            launch instances into it. The Capacity Reservation's state changes to expired
                            when it reaches its end date and time.

                            You must provide an EndDate value if EndDateType is limited. Omit EndDate
                            if EndDateType is unlimited.

                            If the EndDateType is limited, the Capacity Reservation is cancelled within
                            an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55,
                            the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55
                            on 5/31/2019.

                            If you are requesting a future-dated Capacity Reservation, you can't specify
                            an end date and time that is within the commitment duration.
                          format: date-time
                          type: string
                        endDateType:
                          description: |-
                            Indicates the way in which the Capacity Reservation ends. A Capacity Reservation
                            can have one of the following end types:

                              - unlimited - The Capacity Reservation remains active until you explicitly
                                cancel it. Do not provide an EndDate if the EndDateType is unlimited.

                              - limited - The Capacity Reservation expires automatically at a specified
                                date and time. You must provide an EndDate value if the EndDateType value
                                is limited.
                          type: string
                        ephemeralStorage:
                          description: Deprecated.
                          type: boolean
                        instanceCount:
                          description: |-
                            The number of instances for which to reserve capacity.

                            You can request future-dated Capacity Reservations for an instance count
                            with a minimum of 100 VPUs. For example, if you request a future-dated Capacity
                            Reservation for m5.xlarge instances, you must request at least 25 instances
                            (25 * m5.xlarge = 100 vCPUs).

                            Valid range: 1 - 1000
                          format: int64
                          type: integer
                        instanceMatchCriteria:
                          description: |-
                            Indicates the type of instance launches that the Capacity Reservation accepts.
                            The options include:

                              - open - The Capacity Reservation automatically matches all instances
                                that have matching attributes (instance type, platform, and Availability
                                Zone). Instances that have matching attributes run in the Capacity Reservation
                                automatically without specifying any additional parameters.

                              - targeted - The Capacity Reservation only accepts instances that have
                                matching attributes (instance type, platform, and Availability Zone),
                                and explicitly target the Capacity Reservation. This ensures that only
                                permitted instances can use the reserved capacity.

                            If you are requesting a future-dated Capacity Reservation, you must specify
                            targeted.

                            Default: open
                          type: string
                        instancePlatform:
                          description: The type of operating system for which to reserve capacity.
                          type: string
                        instanceType:
                          description: |-
                            The instance type for which to reserve capacity.

                            You can request future-dated Capacity Reservations for instance types in
                            the C, M, R, I, and T instance families only.

                            For more information, see Instance types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        outpostARN:
                          description: |-
                            Not supported for future-dated Capacity Reservations.

                            The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity
                            Reservation.

                            Regex Pattern: `^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/op-[a-f0-9]{17}$`
                          type: string
                        placementGroupARN:
                          description: |-
                            Not supported for future-dated Capacity Reservations.

                            The Amazon Resource Name (ARN) of the cluster placement group in which to
                            create the Capacity Reservation. For more information, see Capacity Reservations
                            for cluster placement groups (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html)
                            in the Amazon EC2 User Guide.

                            Regex Pattern: `^arn:aws([a-z-]+)?:ec2:[a-z\d-]+:\d{12}:placement-group/^.{1,255}$`
                          type: string
                        startDate:
                          description: |-
                            Required for future-dated Capacity Reservations only. To create a Capacity
                            Reservation for immediate use, omit this parameter.

                            The date and time at which the future-dated Capacity Reservation should become
                            available for use, in the ISO8601 format in the UTC time zone (YYYY-MM-DDThh:mm:ss.sssZ).

                            You can request a future-dated Capacity Reservation between 5 and 120 days
                            in advance.
                          format: date-time
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        tenancy:
                          description: |-
                            Indicates the tenancy of the Capacity Reservation. A Capacity Reservation
                            can have one of the following tenancy settings:

                              - default - The Capacity Reservation is created on hardware that is shared
                                with other Amazon Web Services accounts.

                              - dedicated - The Capacity Reservation is created on single-tenant hardware
                                that is dedicated to a single Amazon Web Services account.
                          type: string
                      required:
                        - instanceCount
                        - instancePlatform
                        - instanceType
                      type: object
                    status:
                      description: CapacityReservationStatus defines the observed state of CapacityReservation
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        availableInstanceCount:
                          description: |-
                            The remaining capacity. Indicates the number of instances that can be launched
                            in the Capacity Reservation.
                          format: int64
                          type: integer
                        capacityAllocations:
                          description: Information about instance capacity usage.
                          items:
                            description: Information about instance capacity usage for a Capacity Reservation.
                            properties:
                              allocationType:
                                type: string
                              count:
                                format: int64
                                type: integer
                            type: object
                          type: array
                        capacityReservationFleetID:
                          description: |-
                            The ID of the Capacity Reservation Fleet to which the Capacity Reservation
                            belongs. Only valid for Capacity Reservations that were created by a Capacity
                            Reservation Fleet.
                          type: string
                        capacityReservationID:
                          description: The ID of the Capacity Reservation.
                          type: string
                        commitmentInfo:
                          description: Information about your commitment for a future-dated Capacity Reservation.
                          properties:
                            commitmentEndDate:
                              format: date-time
                              type: string
                            committedInstanceCount:
                              format: int64
                              type: integer
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        createDate:
                          description: The date and time at which the Capacity Reservation was created.
                          format: date-time
                          type: string
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the Capacity Reservation.
                          type: string
                        reservationType:
                          description: The type of Capacity Reservation.
                          type: string
                        state:
                          description: |-
                            The current state of the Capacity Reservation. A Capacity Reservation can
                            be in one of the following states:

                               * active - The capacity is available for use.

                               * expired - The Capacity Reservation expired automatically at the date
                               and time specified in your reservation request. The reserved capacity
                               is no longer available for your use.

                               * cancelled - The Capacity Reservation was canceled. The reserved capacity
                               is no longer available for your use.

                               * pending - The Capacity Reservation request was successful but the capacity
                               provisioning is still pending.

                               * failed - The Capacity Reservation request has failed. A request can
                               fail due to request parameters that are not valid, capacity constraints,
                               or instance limit constraints. You can view a failed request for 60 minutes.

                               * scheduled - (Future-dated Capacity Reservations only) The future-dated
                               Capacity Reservation request was approved and the Capacity Reservation
                               is scheduled for delivery on the requested start date.

                               * assessing - (Future-dated Capacity Reservations only) Amazon EC2 is
                               assessing your request for a future-dated Capacity Reservation.

                               * delayed - (Future-dated Capacity Reservations only) Amazon EC2 encountered
                               a delay in provisioning the requested future-dated Capacity Reservation.
                               Amazon EC2 is unable to deliver the requested capacity by the requested
                               start date and time.

                               * unsupported - (Future-dated Capacity Reservations only) Amazon EC2 can't
                               support the future-dated Capacity Reservation request due to capacity
                               constraints. You can view unsupported requests for 30 days. The Capacity
                               Reservation will not be delivered.
                          type: string
                        totalInstanceCount:
                          description: |-
                            The total number of instances for which the Capacity Reservation reserves
                            capacity.
                          format: int64
                          type: integer
                        unusedReservationBillingOwnerID:
                          description: |-
                            The ID of the Amazon Web Services account to which billing of the unused
                            capacity of the Capacity Reservation is assigned.

                            Regex Pattern: `^[0-9]{12}$`
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dhcpoptions-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dhcpoptions.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: DHCPOptions
            listKind: DHCPOptionsList
            plural: dhcpoptions
            singular: dhcpoptions
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.dhcpOptionsID
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DHCPOptions is the Schema for the DHCPOptions API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DhcpOptionsSpec defines the desired state of DhcpOptions.

                        The set of DHCP options.
                      properties:
                        dhcpConfigurations:
                          description: A DHCP configuration option.
                          items:
                            description: Describes a DHCP configuration option.
                            properties:
                              key:
                                type: string
                              values:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpc:
                          items:
                            type: string
                          type: array
                        vpcRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                      required:
                        - dhcpConfigurations
                      type: object
                    status:
                      description: DHCPOptionsStatus defines the observed state of DHCPOptions
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        dhcpOptionsID:
                          description: The ID of the set of DHCP options.
                          type: string
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the DHCP options set.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-elasticipaddresses-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: elasticipaddresses.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: ElasticIPAddress
            listKind: ElasticIPAddressList
            plural: elasticipaddresses
            singular: elasticipaddress
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.allocationID
                  name: ALLOCATION-ID
                  type: string
                - jsonPath: .status.publicIP
                  name: PUBLIC-IP
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: ElasticIPAddress is the Schema for the ElasticIPAddresses API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: ElasticIPAddressSpec defines the desired state of ElasticIPAddress.
                      properties:
                        address:
                          description: The Elastic IP address to recover or an IPv4 address from an address pool.
                          type: string
                        customerOwnedIPv4Pool:
                          description: |-
                            The ID of a customer-owned address pool. Use this parameter to let Amazon
                            EC2 select an address from the address pool. Alternatively, specify a specific
                            address from the address pool.
                          type: string
                        networkBorderGroup:
                          description: |-
                            A unique set of Availability Zones, Local Zones, or Wavelength Zones from
                            which Amazon Web Services advertises IP addresses. Use this parameter to
                            limit the IP address to this location. IP addresses cannot move between network
                            border groups.
                          type: string
                        publicIPv4Pool:
                          description: |-
                            The ID of an address pool that you own. Use this parameter to let Amazon
                            EC2 select an address from the address pool. To specify a specific address
                            from the address pool, use the Address parameter instead.
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    status:
                      description: ElasticIPAddressStatus defines the observed state of ElasticIPAddress
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        allocationID:
                          description: The ID that represents the allocation of the Elastic IP address.
                          type: string
                        carrierIP:
                          description: |-
                            The carrier IP address. This option is only available for network interfaces
                            that reside in a subnet in a Wavelength Zone.
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        customerOwnedIP:
                          description: The customer-owned IP address.
                          type: string
                        publicIP:
                          description: The Elastic IP address.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-fieldexports-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: fieldexports.services.k8s.aws
        spec:
          group: services.k8s.aws
          names:
            kind: FieldExport
            listKind: FieldExportList
            plural: fieldexports
            singular: fieldexport
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: FieldExport is the schema for the FieldExport API.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: FieldExportSpec defines the desired state of the FieldExport.
                      properties:
                        from:
                          description: |-
                            ResourceFieldSelector provides the values necessary to identify an individual
                            field on an individual K8s resource.
                          properties:
                            path:
                              type: string
                            resource:
                              description: |-
                                NamespacedResource provides all the values necessary to identify an ACK
                                resource of a given type (within the same namespace as the custom resource
                                containing this type).
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                name:
                                  type: string
                              required:
                                - group
                                - kind
                                - name
                              type: object
                          required:
                            - path
                            - resource
                          type: object
                        to:
                          description: |-
                            FieldExportTarget provides the values necessary to identify the
                            output path for a field export.
                          properties:
                            key:
                              description: Key overrides the default value (`<namespace>.<FieldExport-resource-name>`) for the FieldExport target
                              type: string
                            kind:
                              description: |-
                                FieldExportOutputType represents all types that can be produced by a field
                                export operation
                              enum:
                                - configmap
                                - secret
                              type: string
                            name:
                              type: string
                            namespace:
                              description: Namespace is marked as optional, so we cannot compose `NamespacedName`
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                      required:
                        - from
                        - to
                      type: object
                    status:
                      description: FieldExportStatus defines the observed status of the FieldExport.
                      properties:
                        conditions:
                          description: |-
                            A collection of `ackv1alpha1.Condition` objects that describe the various
                            recoverable states of the field CR
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                      required:
                        - conditions
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-flowlogs-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: flowlogs.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: FlowLog
            listKind: FlowLogList
            plural: flowlogs
            singular: flowlog
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: FlowLog is the Schema for the FlowLogs API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        FlowLogSpec defines the desired state of FlowLog.

                        Describes a flow log.
                      properties:
                        deliverLogsPermissionARN:
                          description: |-
                            The ARN of the IAM role that allows Amazon EC2 to publish flow logs to the
                            log destination.

                            This parameter is required if the destination type is cloud-watch-logs, or
                            if the destination type is kinesis-data-firehose and the delivery stream
                            and the resources to monitor are in different accounts.
                          type: string
                        destinationOptions:
                          description: The destination options.
                          properties:
                            fileFormat:
                              type: string
                            hiveCompatiblePartitions:
                              type: boolean
                            perHourPartition:
                              type: boolean
                          type: object
                        logDestination:
                          description: |-
                            The destination for the flow log data. The meaning of this parameter depends
                            on the destination type.

                              - If the destination type is cloud-watch-logs, specify the ARN of a CloudWatch
                                Logs log group. For example: arn:aws:logs:region:account_id:log-group:my_group
                                Alternatively, use the LogGroupName parameter.

                              - If the destination type is s3, specify the ARN of an S3 bucket. For
                                example: arn:aws:s3:::my_bucket/my_subfolder/ The subfolder is optional.
                                Note that you can't use AWSLogs as a subfolder name.

                              - If the destination type is kinesis-data-firehose, specify the ARN of
                                a Kinesis Data Firehose delivery stream. For example: arn:aws:firehose:region:account_id:deliverystream:my_stream
                          type: string
                        logDestinationType:
                          description: |-
                            The type of destination for the flow log data.

                            Default: cloud-watch-logs
                          type: string
                        logFormat:
                          description: |-
                            The fields to include in the flow log record. List the fields in the order
                            in which they should appear. If you omit this parameter, the flow log is
                            created using the default format. If you specify this parameter, you must
                            include at least one field. For more information about the available fields,
                            see Flow log records (https://docs.aws.amazon.com/vpc/latest/userguide/flow-log-records.html)
                            in the Amazon VPC User Guide or Transit Gateway Flow Log records (https://docs.aws.amazon.com/vpc/latest/tgw/tgw-flow-logs.html#flow-log-records)
                            in the Amazon Web Services Transit Gateway Guide.

                            Specify the fields using the ${field-id} format, separated by spaces.
                          type: string
                        logGroupName:
                          description: |-
                            The name of a new or existing CloudWatch Logs log group where Amazon EC2
                            publishes your flow logs.

                            This parameter is valid only if the destination type is cloud-watch-logs.
                          type: string
                        maxAggregationInterval:
                          description: |-
                            The maximum interval of time during which a flow of packets is captured and
                            aggregated into a flow log record. The possible values are 60 seconds (1
                            minute) or 600 seconds (10 minutes). This parameter must be 60 seconds for
                            transit gateway resource types.

                            When a network interface is attached to a Nitro-based instance (https://docs.aws.amazon.com/ec2/latest/instancetypes/ec2-nitro-instances.html),
                            the aggregation interval is always 60 seconds or less, regardless of the
                            value that you specify.

                            Default: 600
                          format: int64
                          type: integer
                        resourceID:
                          type: string
                        resourceType:
                          description: The type of resource to monitor.
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        trafficType:
                          description: |-
                            The type of traffic to monitor (accepted traffic, rejected traffic, or all
                            traffic). This parameter is not supported for transit gateway resource types.
                            It is required for the other resource types.
                          type: string
                      required:
                        - resourceID
                        - resourceType
                      type: object
                    status:
                      description: FlowLogStatus defines the observed state of FlowLog
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        clientToken:
                          description: |-
                            Unique, case-sensitive identifier that you provide to ensure the idempotency
                            of the request.
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        flowLogID:
                          type: string
                        unsuccessful:
                          description: Information about the flow logs that could not be created successfully.
                          items:
                            description: Information about items that were not successfully processed in a batch call.
                            properties:
                              error:
                                description: |-
                                  Information about the error that occurred. For more information about errors,
                                  see Error codes (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html).
                                properties:
                                  code:
                                    type: string
                                  message:
                                    type: string
                                type: object
                              resourceID:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-instances-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: instances.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: Instance
            listKind: InstanceList
            plural: instances
            singular: instance
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.instanceID
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: Instance is the Schema for the Instances API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        InstanceSpec defines the desired state of Instance.

                        Describes an instance.
                      properties:
                        blockDeviceMappings:
                          description: |-
                            The block device mapping, which defines the EBS volumes and instance store
                            volumes to attach to the instance at launch. For more information, see Block
                            device mappings (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)
                            in the Amazon EC2 User Guide.
                          items:
                            description: |-
                              Describes a block device mapping, which defines the EBS volumes and instance
                              store volumes to attach to an instance at launch.
                            properties:
                              deviceName:
                                type: string
                              ebs:
                                description: Describes a block device for an EBS volume.
                                properties:
                                  deleteOnTermination:
                                    type: boolean
                                  encrypted:
                                    type: boolean
                                  iops:
                                    format: int64
                                    type: integer
                                  kmsKeyID:
                                    type: string
                                  outpostARN:
                                    type: string
                                  snapshotID:
                                    type: string
                                  throughput:
                                    format: int64
                                    type: integer
                                  volumeSize:
                                    format: int64
                                    type: integer
                                  volumeType:
                                    type: string
                                type: object
                              noDevice:
                                type: string
                              virtualName:
                                type: string
                            type: object
                          type: array
                        capacityReservationSpecification:
                          description: |-
                            Information about the Capacity Reservation targeting option. If you do not
                            specify this parameter, the instance's Capacity Reservation preference defaults
                            to open, which enables it to run in any open Capacity Reservation that has
                            matching attributes (instance type, platform, Availability Zone, and tenancy).
                          properties:
                            capacityReservationPreference:
                              type: string
                            capacityReservationTarget:
                              description: Describes a target Capacity Reservation or Capacity Reservation group.
                              properties:
                                capacityReservationID:
                                  type: string
                                capacityReservationResourceGroupARN:
                                  type: string
                              type: object
                          type: object
                        cpuOptions:
                          description: |-
                            The CPU options for the instance. For more information, see Optimize CPU
                            options (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html)
                            in the Amazon EC2 User Guide.
                          properties:
                            coreCount:
                              format: int64
                              type: integer
                            threadsPerCore:
                              format: int64
                              type: integer
                          type: object
                        creditSpecification:
                          description: |-
                            The credit option for CPU usage of the burstable performance instance. Valid
                            values are standard and unlimited. To change this attribute after launch,
                            use ModifyInstanceCreditSpecification (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html).
                            For more information, see Burstable performance instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html)
                            in the Amazon EC2 User Guide.

                            Default: standard (T2 instances) or unlimited (T3/T3a/T4g instances)

                            For T3 instances with host tenancy, only standard is supported.
                          properties:
                            cpuCredits:
                              type: string
                          type: object
                        disableAPIStop:
                          description: |-
                            Indicates whether an instance is enabled for stop protection. For more information,
                            see Stop protection (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
                          type: boolean
                        disableAPITermination:
                          description: |-
                            If you set this parameter to true, you can't terminate the instance using
                            the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute
                            after launch, use ModifyInstanceAttribute (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html).
                            Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate,
                            you can terminate the instance by running the shutdown command from the instance.

                            Default: false
                          type: boolean
                        ebsOptimized:
                          description: |-
                            Indicates whether the instance is optimized for Amazon EBS I/O. This optimization
                            provides dedicated throughput to Amazon EBS and an optimized configuration
                            stack to provide optimal Amazon EBS I/O performance. This optimization isn't
                            available with all instance types. Additional usage charges apply when using
                            an EBS-optimized instance.

                            Default: false
                          type: boolean
                        elasticGPUSpecification:
                          description: |-
                            An elastic GPU to associate with the instance.

                            Amazon Elastic Graphics reached end of life on January 8, 2024.
                          items:
                            description: |-
                              Amazon Elastic Graphics reached end of life on January 8, 2024.

                              A specification for an Elastic Graphics accelerator.
                            properties:
                              type:
                                type: string
                            type: object
                          type: array
                        elasticInferenceAccelerators:
                          description: |-
                            An elastic inference accelerator to associate with the instance.

                            Amazon Elastic Inference is no longer available.
                          items:
                            description: |-
                              Amazon Elastic Inference is no longer available.

                              Describes an elastic inference accelerator.
                            properties:
                              count:
                                format: int64
                                type: integer
                              type_:
                                type: string
                            type: object
                          type: array
                        enclaveOptions:
                          description: |-
                            Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
                            For more information, see What is Amazon Web Services Nitro Enclaves? (https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html)
                            in the Amazon Web Services Nitro Enclaves User Guide.

                            You can't enable Amazon Web Services Nitro Enclaves and hibernation on the
                            same instance.
                          properties:
                            enabled:
                              type: boolean
                          type: object
                        hibernationOptions:
                          description: |-
                            Indicates whether an instance is enabled for hibernation. This parameter
                            is valid only if the instance meets the hibernation prerequisites (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-prerequisites.html).
                            For more information, see Hibernate your Amazon EC2 instance (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html)
                            in the Amazon EC2 User Guide.

                            You can't enable hibernation and Amazon Web Services Nitro Enclaves on the
                            same instance.
                          properties:
                            configured:
                              type: boolean
                          type: object
                        iamInstanceProfile:
                          description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
                          properties:
                            arn:
                              type: string
                            name:
                              type: string
                          type: object
                        imageID:
                          description: |-
                            The ID of the AMI. An AMI ID is required to launch an instance and must be
                            specified here or in a launch template.
                          type: string
                        instanceInitiatedShutdownBehavior:
                          description: |-
                            Indicates whether an instance stops or terminates when you initiate shutdown
                            from the instance (using the operating system command for system shutdown).

                            Default: stop
                          type: string
                        instanceMarketOptions:
                          description: |-
                            The market (purchasing) option for the instances.

                            For RunInstances, persistent Spot Instance requests are only supported when
                            InstanceInterruptionBehavior is set to either hibernate or stop.
                          properties:
                            marketType:
                              type: string
                            spotOptions:
                              description: The options for Spot Instances.
                              properties:
                                blockDurationMinutes:
                                  format: int64
                                  type: integer
                                instanceInterruptionBehavior:
                                  type: string
                                maxPrice:
                                  type: string
                                spotInstanceType:
                                  type: string
                                validUntil:
                                  format: date-time
                                  type: string
                              type: object
                          type: object
                        instanceType:
                          description: |-
                            The instance type. For more information, see Amazon EC2 instance types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        ipv6AddressCount:
                          description: |-
                            The number of IPv6 addresses to associate with the primary network interface.
                            Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You
                            cannot specify this option and the option to assign specific IPv6 addresses
                            in the same request. You can specify this option if you've specified a minimum
                            number of instances to launch.

                            You cannot specify this option and the network interfaces option in the same
                            request.
                          format: int64
                          type: integer
                        ipv6Addresses:
                          description: |-
                            The IPv6 addresses from the range of the subnet to associate with the primary
                            network interface. You cannot specify this option and the option to assign
                            a number of IPv6 addresses in the same request. You cannot specify this option
                            if you've specified a minimum number of instances to launch.

                            You cannot specify this option and the network interfaces option in the same
                            request.
                          items:
                            description: Describes an IPv6 address.
                            properties:
                              ipv6Address:
                                type: string
                            type: object
                          type: array
                        kernelID:
                          description: |-
                            The ID of the kernel.

                            We recommend that you use PV-GRUB instead of kernels and RAM disks. For more
                            information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        keyName:
                          description: |-
                            The name of the key pair. You can create a key pair using CreateKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html)
                            or ImportKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html).

                            If you do not specify a key pair, you can't connect to the instance unless
                            you choose an AMI that is configured to allow users another way to log in.
                          type: string
                        launchTemplate:
                          description: |-
                            The launch template. Any additional parameters that you specify for the new
                            instance overwrite the corresponding parameters included in the launch template.
                          properties:
                            launchTemplateID:
                              type: string
                            launchTemplateName:
                              type: string
                            launchTemplateRef:
                              description: Reference field for LaunchTemplateID
                              properties:
                                from:
                                  description: |-
                                    AWSResourceReference provides all the values necessary to reference another
                                    k8s resource for finding the identifier(Id/ARN/Name)
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                              type: object
                            version:
                              type: string
                          type: object
                        licenseSpecifications:
                          description: The license configurations.
                          items:
                            description: Describes a license configuration.
                            properties:
                              licenseConfigurationARN:
                                type: string
                            type: object
                          type: array
                        maintenanceOptions:
                          description: The maintenance and recovery options for the instance.
                          properties:
                            autoRecovery:
                              type: string
                          type: object
                        maxCount:
                          description: |-
                            The maximum number of instances to launch. If you specify a value that is
                            more capacity than Amazon EC2 can launch in the target Availability Zone,
                            Amazon EC2 launches the largest possible number of instances above the specified
                            minimum count.

                            Constraints: Between 1 and the quota for the specified instance type for
                            your account for this Region. For more information, see Amazon EC2 instance
                            type quotas (https://docs.aws.amazon.com/ec2/latest/instancetypes/ec2-instance-quotas.html).
                          format: int64
                          type: integer
                        metadataOptions:
                          description: |-
                            The metadata options for the instance. For more information, see Instance
                            metadata and user data (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
                          properties:
                            httpEndpoint:
                              type: string
                            httpProtocolIPv6:
                              type: string
                            httpPutResponseHopLimit:
                              format: int64
                              type: integer
                            httpTokens:
                              type: string
                            instanceMetadataTags:
                              type: string
                          type: object
                        minCount:
                          description: |-
                            The minimum number of instances to launch. If you specify a value that is
                            more capacity than Amazon EC2 can provide in the target Availability Zone,
                            Amazon EC2 does not launch any instances.

                            Constraints: Between 1 and the quota for the specified instance type for
                            your account for this Region. For more information, see Amazon EC2 instance
                            type quotas (https://docs.aws.amazon.com/ec2/latest/instancetypes/ec2-instance-quotas.html).
                          format: int64
                          type: integer
                        monitoring:
                          description: Specifies whether detailed monitoring is enabled for the instance.
                          properties:
                            enabled:
                              type: boolean
                          type: object
                        networkInterfaces:
                          description: The network interfaces to associate with the instance.
                          items:
                            description: Describes a network interface.
                            properties:
                              associateCarrierIPAddress:
                                type: boolean
                              associatePublicIPAddress:
                                type: boolean
                              deleteOnTermination:
                                type: boolean
                              description:
                                type: string
                              deviceIndex:
                                format: int64
                                type: integer
                              interfaceType:
                                type: string
                              ipv4PrefixCount:
                                format: int64
                                type: integer
                              ipv4Prefixes:
                                items:
                                  description: Describes the IPv4 prefix option for a network interface.
                                  properties:
                                    ipv4Prefix:
                                      type: string
                                  type: object
                                type: array
                              ipv6AddressCount:
                                format: int64
                                type: integer
                              ipv6Addresses:
                                items:
                                  description: Describes an IPv6 address.
                                  properties:
                                    ipv6Address:
                                      type: string
                                  type: object
                                type: array
                              ipv6PrefixCount:
                                format: int64
                                type: integer
                              ipv6Prefixes:
                                items:
                                  description: Describes the IPv4 prefix option for a network interface.
                                  properties:
                                    ipv6Prefix:
                                      type: string
                                  type: object
                                type: array
                              networkCardIndex:
                                format: int64
                                type: integer
                              networkInterfaceID:
                                type: string
                              privateIPAddress:
                                type: string
                              privateIPAddresses:
                                items:
                                  description: Describes a secondary private IPv4 address for a network interface.
                                  properties:
                                    primary:
                                      type: boolean
                                    privateIPAddress:
                                      type: string
                                  type: object
                                type: array
                              secondaryPrivateIPAddressCount:
                                format: int64
                                type: integer
                              subnetID:
                                type: string
                            type: object
                          type: array
                        placement:
                          description: The placement for the instance.
                          properties:
                            affinity:
                              type: string
                            availabilityZone:
                              type: string
                            groupName:
                              type: string
                            hostID:
                              type: string
                            hostResourceGroupARN:
                              type: string
                            partitionNumber:
                              format: int64
                              type: integer
                            spreadDomain:
                              type: string
                            tenancy:
                              type: string
                          type: object
                        privateDNSNameOptions:
                          description: |-
                            The options for the instance hostname. The default values are inherited from
                            the subnet. Applies only if creating a network interface, not attaching an
                            existing one.
                          properties:
                            enableResourceNameDNSAAAARecord:
                              type: boolean
                            enableResourceNameDNSARecord:
                              type: boolean
                            hostnameType:
                              type: string
                          type: object
                        privateIPAddress:
                          description: |-
                            The primary IPv4 address. You must specify a value from the IPv4 address
                            range of the subnet.

                            Only one private IP address can be designated as primary. You can't specify
                            this option if you've specified the option to designate a private IP address
                            as the primary IP address in a network interface specification. You cannot
                            specify this option if you're launching more than one instance in the request.

                            You cannot specify this option and the network interfaces option in the same
                            request.
                          type: string
                        ramDiskID:
                          description: |-
                            The ID of the RAM disk to select. Some kernels require additional drivers
                            at launch. Check the kernel requirements for information about whether you
                            need to specify a RAM disk. To find kernel requirements, go to the Amazon
                            Web Services Resource Center and search for the kernel ID.

                            We recommend that you use PV-GRUB instead of kernels and RAM disks. For more
                            information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        securityGroupIDs:
                          description: |-
                            The IDs of the security groups. You can create a security group using CreateSecurityGroup
                            (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html).

                            If you specify a network interface, you must specify any security groups
                            as part of the network interface instead of using this parameter.
                          items:
                            type: string
                          type: array
                        securityGroups:
                          description: |-
                            [Default VPC] The names of the security groups.

                            If you specify a network interface, you must specify any security groups
                            as part of the network interface instead of using this parameter.

                            Default: Amazon EC2 uses the default security group.
                          items:
                            type: string
                          type: array
                        subnetID:
                          description: |-
                            The ID of the subnet to launch the instance into.

                            If you specify a network interface, you must specify any subnets as part
                            of the network interface instead of using this parameter.
                          type: string
                        subnetRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        userData:
                          description: |-
                            The user data to make available to the instance. User data must be base64-encoded.
                            Depending on the tool or SDK that you're using, the base64-encoding might
                            be performed for you. For more information, see Work with instance user data
                            (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html).
                          type: string
                      type: object
                    status:
                      description: InstanceStatus defines the observed state of Instance
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        amiLaunchIndex:
                          description: |-
                            The AMI launch index, which can be used to find this instance in the launch
                            group.
                          format: int64
                          type: integer
                        architecture:
                          description: The architecture of the image.
                          type: string
                        bootMode:
                          description: |-
                            The boot mode that was specified by the AMI. If the value is uefi-preferred,
                            the AMI supports both UEFI and Legacy BIOS. The currentInstanceBootMode parameter
                            is the boot mode that is used to boot the instance at launch or start.

                            The operating system contained in the AMI must be configured to support the
                            specified boot mode.

                            For more information, see Boot modes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        capacityReservationID:
                          description: The ID of the Capacity Reservation.
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        elasticGPUAssociations:
                          description: |-
                            Deprecated.

                            Amazon Elastic Graphics reached end of life on January 8, 2024.
                          items:
                            description: |-
                              Amazon Elastic Graphics reached end of life on January 8, 2024.

                              Describes the association between an instance and an Elastic Graphics accelerator.
                            properties:
                              elasticGPUAssociationID:
                                type: string
                              elasticGPUAssociationState:
                                type: string
                              elasticGPUAssociationTime:
                                type: string
                              elasticGPUID:
                                type: string
                            type: object
                          type: array
                        elasticInferenceAcceleratorAssociations:
                          description: |-
                            Deprecated

                            Amazon Elastic Inference is no longer available.
                          items:
                            description: |-
                              Amazon Elastic Inference is no longer available.

                              Describes the association between an instance and an elastic inference accelerator.
                            properties:
                              elasticInferenceAcceleratorARN:
                                type: string
                              elasticInferenceAcceleratorAssociationID:
                                type: string
                              elasticInferenceAcceleratorAssociationState:
                                type: string
                              elasticInferenceAcceleratorAssociationTime:
                                format: date-time
                                type: string
                            type: object
                          type: array
                        enaSupport:
                          description: Specifies whether enhanced networking with ENA is enabled.
                          type: boolean
                        hypervisor:
                          description: |-
                            The hypervisor type of the instance. The value xen is used for both Xen and
                            Nitro hypervisors.
                          type: string
                        instanceID:
                          description: The ID of the instance.
                          type: string
                        instanceLifecycle:
                          description: Indicates whether this is a Spot Instance or a Scheduled Instance.
                          type: string
                        ipv6Address:
                          description: The IPv6 address assigned to the instance.
                          type: string
                        launchTime:
                          description: |-
                            The time that the instance was last launched. To determine the time that
                            instance was first launched, see the attachment time for the primary network
                            interface.
                          format: date-time
                          type: string
                        licenses:
                          description: The license configurations for the instance.
                          items:
                            description: Describes a license configuration.
                            properties:
                              licenseConfigurationARN:
                                type: string
                            type: object
                          type: array
                        outpostARN:
                          description: The Amazon Resource Name (ARN) of the Outpost.
                          type: string
                        platform:
                          description: |-
                            The platform. This value is windows for Windows instances; otherwise, it
                            is empty.
                          type: string
                        platformDetails:
                          description: |-
                            The platform details value for the instance. For more information, see AMI
                            billing information fields (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        privateDNSName:
                          description: |-
                            [IPv4 only] The private DNS hostname name assigned to the instance. This
                            DNS hostname can only be used inside the Amazon EC2 network. This name is
                            not available until the instance enters the running state.

                            The Amazon-provided DNS server resolves Amazon-provided private DNS hostnames
                            if you've enabled DNS resolution and DNS hostnames in your VPC. If you are
                            not using the Amazon-provided DNS server in your VPC, your custom domain
                            name servers must resolve the hostname as appropriate.
                          type: string
                        productCodes:
                          description: The product codes attached to this instance, if applicable.
                          items:
                            description: Describes a product code.
                            properties:
                              productCodeID:
                                type: string
                              productCodeType:
                                type: string
                            type: object
                          type: array
                        publicDNSName:
                          description: |-
                            [IPv4 only] The public DNS name assigned to the instance. This name is not
                            available until the instance enters the running state. This name is only
                            available if you've enabled DNS hostnames for your VPC.
                          type: string
                        publicIPAddress:
                          description: |-
                            The public IPv4 address, or the Carrier IP address assigned to the instance,
                            if applicable.

                            A Carrier IP address only applies to an instance launched in a subnet associated
                            with a Wavelength Zone.
                          type: string
                        rootDeviceName:
                          description: The device name of the root device volume (for example, /dev/sda1).
                          type: string
                        rootDeviceType:
                          description: |-
                            The root device type used by the AMI. The AMI can use an EBS volume or an
                            instance store volume.
                          type: string
                        sourceDestCheck:
                          description: Indicates whether source/destination checking is enabled.
                          type: boolean
                        spotInstanceRequestID:
                          description: If the request is a Spot Instance request, the ID of the request.
                          type: string
                        sriovNetSupport:
                          description: |-
                            Specifies whether enhanced networking with the Intel 82599 Virtual Function
                            interface is enabled.
                          type: string
                        state:
                          description: The current state of the instance.
                          properties:
                            code:
                              format: int64
                              type: integer
                            name:
                              type: string
                          type: object
                        stateReason:
                          description: The reason for the most recent state transition.
                          properties:
                            code:
                              type: string
                            message:
                              type: string
                          type: object
                        stateTransitionReason:
                          description: The reason for the most recent state transition. This might be an empty string.
                          type: string
                        tpmSupport:
                          description: |-
                            If the instance is configured for NitroTPM support, the value is v2.0. For
                            more information, see NitroTPM (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        usageOperation:
                          description: |-
                            The usage operation value for the instance. For more information, see AMI
                            billing information fields (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        usageOperationUpdateTime:
                          description: The time that the usage operation was last updated.
                          format: date-time
                          type: string
                        virtualizationType:
                          description: The virtualization type of the instance.
                          type: string
                        vpcID:
                          description: The ID of the VPC in which the instance is running.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-internetgateways-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: internetgateways.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: InternetGateway
            listKind: InternetGatewayList
            plural: internetgateways
            singular: internetgateway
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.internetGatewayID
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: InternetGateway is the Schema for the InternetGateways API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        InternetGatewaySpec defines the desired state of InternetGateway.

                        Describes an internet gateway.
                      properties:
                        routeTableRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        routeTables:
                          items:
                            type: string
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpc:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: InternetGatewayStatus defines the observed state of InternetGateway
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        attachments:
                          description: Any VPCs attached to the internet gateway.
                          items:
                            description: |-
                              Describes the attachment of a VPC to an internet gateway or an egress-only
                              internet gateway.
                            properties:
                              state:
                                type: string
                              vpcID:
                                type: string
                            type: object
                          type: array
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        internetGatewayID:
                          description: The ID of the internet gateway.
                          type: string
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the internet gateway.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-launchtemplates-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: launchtemplates.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: LaunchTemplate
            listKind: LaunchTemplateList
            plural: launchtemplates
            singular: launchtemplate
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.id
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: LaunchTemplate is the Schema for the LaunchTemplates API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        LaunchTemplateSpec defines the desired state of LaunchTemplate.

                        Describes a launch template.
                      properties:
                        data:
                          description: The information for the launch template.
                          properties:
                            blockDeviceMappings:
                              items:
                                description: Describes a block device mapping.
                                properties:
                                  deviceName:
                                    type: string
                                  ebs:
                                    description: The parameters for a block device for an EBS volume.
                                    properties:
                                      deleteOnTermination:
                                        type: boolean
                                      encrypted:
                                        type: boolean
                                      iops:
                                        format: int64
                                        type: integer
                                      kmsKeyID:
                                        type: string
                                      snapshotID:
                                        type: string
                                      throughput:
                                        format: int64
                                        type: integer
                                      volumeSize:
                                        format: int64
                                        type: integer
                                      volumeType:
                                        type: string
                                    type: object
                                  noDevice:
                                    type: string
                                  virtualName:
                                    type: string
                                type: object
                              type: array
                            capacityReservationSpecification:
                              description: |-
                                Describes an instance's Capacity Reservation targeting option. You can specify
                                only one option at a time. Use the CapacityReservationPreference parameter
                                to configure the instance to run in On-Demand capacity or to run in any open
                                Capacity Reservation that has matching attributes (instance type, platform,
                                Availability Zone). Use the CapacityReservationTarget parameter to explicitly
                                target a specific Capacity Reservation or a Capacity Reservation group.
                              properties:
                                capacityReservationPreference:
                                  type: string
                                capacityReservationTarget:
                                  description: Describes a target Capacity Reservation or Capacity Reservation group.
                                  properties:
                                    capacityReservationID:
                                      type: string
                                    capacityReservationResourceGroupARN:
                                      type: string
                                  type: object
                              type: object
                            cpuOptions:
                              description: |-
                                The CPU options for the instance. Both the core count and threads per core
                                must be specified in the request.
                              properties:
                                amdSevSnp:
                                  type: string
                                coreCount:
                                  format: int64
                                  type: integer
                                threadsPerCore:
                                  format: int64
                                  type: integer
                              type: object
                            creditSpecification:
                              description: The credit option for CPU usage of a T instance.
                              properties:
                                cpuCredits:
                                  type: string
                              type: object
                            disableAPIStop:
                              type: boolean
                            disableAPITermination:
                              type: boolean
                            ebsOptimized:
                              type: boolean
                            elasticGPUSpecifications:
                              items:
                                description: |-
                                  Amazon Elastic Graphics reached end of life on January 8, 2024.

                                  A specification for an Elastic Graphics accelerator.
                                properties:
                                  type:
                                    type: string
                                type: object
                              type: array
                            elasticInferenceAccelerators:
                              items:
                                description: |-
                                  Amazon Elastic Inference is no longer available.

                                  Describes an elastic inference accelerator.
                                properties:
                                  count:
                                    format: int64
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                            enclaveOptions:
                              description: |-
                                Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
                                For more information, see What is Amazon Web Services Nitro Enclaves? (https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html)
                                in the Amazon Web Services Nitro Enclaves User Guide.
                              properties:
                                enabled:
                                  type: boolean
                              type: object
                            hibernationOptions:
                              description: |-
                                Indicates whether the instance is configured for hibernation. This parameter
                                is valid only if the instance meets the hibernation prerequisites (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-prerequisites.html).
                              properties:
                                configured:
                                  type: boolean
                              type: object
                            iamInstanceProfile:
                              description: An IAM instance profile.
                              properties:
                                arn:
                                  type: string
                                name:
                                  type: string
                              type: object
                            imageID:
                              type: string
                            instanceInitiatedShutdownBehavior:
                              type: string
                            instanceMarketOptions:
                              description: The market (purchasing) option for the instances.
                              properties:
                                marketType:
                                  type: string
                                spotOptions:
                                  description: The options for Spot Instances.
                                  properties:
                                    blockDurationMinutes:
                                      format: int64
                                      type: integer
                                    instanceInterruptionBehavior:
                                      type: string
                                    maxPrice:
                                      type: string
                                    spotInstanceType:
                                      type: string
                                    validUntil:
                                      format: date-time
                                      type: string
                                  type: object
                              type: object
                            instanceRequirements:
                              description: |-
                                The attributes for the instance types. When you specify instance attributes,
                                Amazon EC2 will identify instance types with these attributes.

                                You must specify VCpuCount and MemoryMiB. All other attributes are optional.
                                Any unspecified optional attribute is set to its default.

                                When you specify multiple attributes, you get instance types that satisfy
                                all of the specified attributes. If you specify multiple values for an attribute,
                                you get instance types that satisfy any of the specified values.

                                To limit the list of instance types from which Amazon EC2 can identify matching
                                instance types, you can use one of the following parameters, but not both
                                in the same request:

                                   * AllowedInstanceTypes - The instance types to include in the list. All
                                   other instance types are ignored, even if they match your specified attributes.

                                   * ExcludedInstanceTypes - The instance types to exclude from the list,
                                   even if they match your specified attributes.

                                If you specify InstanceRequirements, you can't specify InstanceType.

                                Attribute-based instance type selection is only supported when using Auto
                                Scaling groups, EC2 Fleet, and Spot Fleet to launch instances. If you plan
                                to use the launch template in the launch instance wizard (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-instance-wizard.html),
                                or with the RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html)
                                API or AWS::EC2::Instance (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html)
                                Amazon Web Services CloudFormation resource, you can't specify InstanceRequirements.

                                For more information, see Specify attributes for instance type selection
                                for EC2 Fleet or Spot Fleet (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html)
                                and Spot placement score (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html)
                                in the Amazon EC2 User Guide.
                              properties:
                                acceleratorCount:
                                  description: |-
                                    The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web
                                    Services Inferentia chips) on an instance. To exclude accelerator-enabled
                                    instance types, set Max to 0.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                                acceleratorManufacturers:
                                  items:
                                    type: string
                                  type: array
                                acceleratorNames:
                                  items:
                                    type: string
                                  type: array
                                acceleratorTotalMemoryMiB:
                                  description: The minimum and maximum amount of total accelerator memory, in MiB.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                                acceleratorTypes:
                                  items:
                                    type: string
                                  type: array
                                allowedInstanceTypes:
                                  items:
                                    type: string
                                  type: array
                                bareMetal:
                                  type: string
                                baselineEBSBandwidthMbps:
                                  description: |-
                                    The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more
                                    information, see Amazon EBS–optimized instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html)
                                    in the Amazon EC2 User Guide.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                                baselinePerformanceFactors:
                                  description: |-
                                    The baseline performance to consider, using an instance family as a baseline
                                    reference. The instance family establishes the lowest acceptable level of
                                    performance. Amazon EC2 uses this baseline to guide instance type selection,
                                    but there is no guarantee that the selected instance types will always exceed
                                    the baseline for every application.

                                    Currently, this parameter only supports CPU performance as a baseline performance
                                    factor. For example, specifying c6i would use the CPU performance of the
                                    c6i family as the baseline reference.
                                  properties:
                                    cpu:
                                      description: |-
                                        The CPU performance to consider, using an instance family as the baseline
                                        reference.
                                      properties:
                                        references:
                                          items:
                                            description: |-
                                              Specify an instance family to use as the baseline reference for CPU performance.
                                              All instance types that match your specified attributes will be compared
                                              against the CPU performance of the referenced instance family, regardless
                                              of CPU manufacturer or architecture.

                                              Currently, only one instance family can be specified in the list.
                                            properties:
                                              instanceFamily:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                burstablePerformance:
                                  type: string
                                cpuManufacturers:
                                  items:
                                    type: string
                                  type: array
                                excludedInstanceTypes:
                                  items:
                                    type: string
                                  type: array
                                instanceGenerations:
                                  items:
                                    type: string
                                  type: array
                                localStorage:
                                  type: string
                                localStorageTypes:
                                  items:
                                    type: string
                                  type: array
                                maxSpotPriceAsPercentageOfOptimalOnDemandPrice:
                                  format: int64
                                  type: integer
                                memoryGiBPerVCPU:
                                  description: The minimum and maximum amount of memory per vCPU, in GiB.
                                  properties:
                                    max:
                                      type: number
                                    min:
                                      type: number
                                  type: object
                                memoryMiB:
                                  description: The minimum and maximum amount of memory, in MiB.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                                networkBandwidthGbps:
                                  description: |-
                                    The minimum and maximum amount of network bandwidth, in gigabits per second
                                    (Gbps).

                                    Setting the minimum bandwidth does not guarantee that your instance will
                                    achieve the minimum bandwidth. Amazon EC2 will identify instance types that
                                    support the specified minimum bandwidth, but the actual bandwidth of your
                                    instance might go below the specified minimum at times. For more information,
                                    see Available instance bandwidth (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth)
                                    in the Amazon EC2 User Guide.
                                  properties:
                                    max:
                                      type: number
                                    min:
                                      type: number
                                  type: object
                                networkInterfaceCount:
                                  description: The minimum and maximum number of network interfaces.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                                onDemandMaxPricePercentageOverLowestPrice:
                                  format: int64
                                  type: integer
                                requireHibernateSupport:
                                  type: boolean
                                spotMaxPricePercentageOverLowestPrice:
                                  format: int64
                                  type: integer
                                totalLocalStorageGB:
                                  description: The minimum and maximum amount of total local storage, in GB.
                                  properties:
                                    max:
                                      type: number
                                    min:
                                      type: number
                                  type: object
                                vCPUCount:
                                  description: The minimum and maximum number of vCPUs.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                              type: object
                            instanceType:
                              type: string
                            kernelID:
                              type: string
                            keyName:
                              type: string
                            licenseSpecifications:
                              items:
                                description: Describes a license configuration.
                                properties:
                                  licenseConfigurationARN:
                                    type: string
                                type: object
                              type: array
                            maintenanceOptions:
                              description: The maintenance options of your instance.
                              properties:
                                autoRecovery:
                                  type: string
                              type: object
                            metadataOptions:
                              description: |-
                                The metadata options for the instance. For more information, see Instance
                                metadata and user data (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)
                                in the Amazon EC2 User Guide.
                              properties:
                                httpEndpoint:
                                  type: string
                                httpProtocolIPv6:
                                  type: string
                                httpPutResponseHopLimit:
                                  format: int64
                                  type: integer
                                httpTokens:
                                  type: string
                                instanceMetadataTags:
                                  type: string
                              type: object
                            monitoring:
                              description: Describes the monitoring for the instance.
                              properties:
                                enabled:
                                  type: boolean
                              type: object
                            networkInterfaces:
                              items:
                                description: The parameters for a network interface.
                                properties:
                                  associateCarrierIPAddress:
                                    type: boolean
                                  associatePublicIPAddress:
                                    type: boolean
                                  deleteOnTermination:
                                    type: boolean
                                  description:
                                    type: string
                                  deviceIndex:
                                    format: int64
                                    type: integer
                                  groups:
                                    items:
                                      type: string
                                    type: array
                                  interfaceType:
                                    type: string
                                  ipv4PrefixCount:
                                    format: int64
                                    type: integer
                                  ipv4Prefixes:
                                    items:
                                      description: Describes the IPv4 prefix option for a network interface.
                                      properties:
                                        ipv4Prefix:
                                          type: string
                                      type: object
                                    type: array
                                  ipv6AddressCount:
                                    format: int64
                                    type: integer
                                  ipv6Addresses:
                                    items:
                                      description: Describes an IPv6 address.
                                      properties:
                                        ipv6Address:
                                          type: string
                                      type: object
                                    type: array
                                  ipv6PrefixCount:
                                    format: int64
                                    type: integer
                                  ipv6Prefixes:
                                    items:
                                      description: Describes the IPv4 prefix option for a network interface.
                                      properties:
                                        ipv6Prefix:
                                          type: string
                                      type: object
                                    type: array
                                  networkCardIndex:
                                    format: int64
                                    type: integer
                                  networkInterfaceID:
                                    type: string
                                  primaryIPv6:
                                    type: boolean
                                  privateIPAddress:
                                    type: string
                                  privateIPAddresses:
                                    items:
                                      description: Describes a secondary private IPv4 address for a network interface.
                                      properties:
                                        primary:
                                          type: boolean
                                        privateIPAddress:
                                          type: string
                                      type: object
                                    type: array
                                  secondaryPrivateIPAddressCount:
                                    format: int64
                                    type: integer
                                  subnetID:
                                    type: string
                                type: object
                              type: array
                            placement:
                              description: Describes the placement of an instance.
                              properties:
                                affinity:
                                  type: string
                                availabilityZone:
                                  type: string
                                groupID:
                                  type: string
                                groupName:
                                  type: string
                                hostID:
                                  type: string
                                hostResourceGroupARN:
                                  type: string
                                partitionNumber:
                                  format: int64
                                  type: integer
                                spreadDomain:
                                  type: string
                                tenancy:
                                  type: string
                              type: object
                            privateDNSNameOptions:
                              description: Describes the options for instance hostnames.
                              properties:
                                enableResourceNameDNSAAAARecord:
                                  type: boolean
                                enableResourceNameDNSARecord:
                                  type: boolean
                                hostnameType:
                                  type: string
                              type: object
                            ramDiskID:
                              type: string
                            securityGroupIDs:
                              items:
                                type: string
                              type: array
                            securityGroups:
                              items:
                                type: string
                              type: array
                            userData:
                              type: string
                          type: object
                        defaultVersion:
                          description: The version number of the default version of the launch template.
                          format: int64
                          type: integer
                        name:
                          description: |-
                            A name for the launch template.

                            Regex Pattern: `^[a-zA-Z0-9\(\)\.\-/_]+$`
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        versionDescription:
                          description: A description for the first version of the launch template.
                          type: string
                      required:
                        - data
                        - name
                      type: object
                    status:
                      description: LaunchTemplateStatus defines the observed state of LaunchTemplate
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        createTime:
                          description: The time launch template was created.
                          format: date-time
                          type: string
                        createdBy:
                          description: The principal that created the launch template.
                          type: string
                        id:
                          description: The ID of the launch template.
                          type: string
                        latestVersion:
                          description: The version number of the latest version of the launch template.
                          format: int64
                          type: integer
                        operator:
                          description: The entity that manages the launch template.
                          properties:
                            managed:
                              type: boolean
                            principal:
                              type: string
                          type: object
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-natgateways-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: natgateways.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: NATGateway
            listKind: NATGatewayList
            plural: natgateways
            singular: natgateway
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.natGatewayID
                  name: ID
                  type: string
                - jsonPath: .status.state
                  name: state
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: NATGateway is the Schema for the NATGateways API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        NatGatewaySpec defines the desired state of NatGateway.

                        Describes a NAT gateway.
                      properties:
                        allocationID:
                          description: |-
                            [Public NAT gateways only] The allocation ID of an Elastic IP address to
                            associate with the NAT gateway. You cannot specify an Elastic IP address
                            with a private NAT gateway. If the Elastic IP address is associated with
                            another resource, you must first disassociate it.
                          type: string
                        allocationRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        connectivityType:
                          description: |-
                            Indicates whether the NAT gateway supports public or private connectivity.
                            The default is public connectivity.
                          type: string
                        subnetID:
                          description: The ID of the subnet in which to create the NAT gateway.
                          type: string
                        subnetRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    status:
                      description: NATGatewayStatus defines the observed state of NATGateway
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        createTime:
                          description: The date and time the NAT gateway was created.
                          format: date-time
                          type: string
                        deleteTime:
                          description: The date and time the NAT gateway was deleted, if applicable.
                          format: date-time
                          type: string
                        failureCode:
                          description: |-
                            If the NAT gateway could not be created, specifies the error code for the
                            failure. (InsufficientFreeAddressesInSubnet | Gateway.NotAttached | InvalidAllocationID.NotFound
                            | Resource.AlreadyAssociated | InternalError | InvalidSubnetID.NotFound)
                          type: string
                        failureMessage:
                          description: |-
                            If the NAT gateway could not be created, specifies the error message for
                            the failure, that corresponds to the error code.

                               * For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free
                               addresses to create this NAT gateway"

                               * For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway
                               attached"

                               * For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx
                               could not be associated with this NAT gateway"

                               * For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx
                               is already associated"

                               * For InternalError: "Network interface eni-xxxxxxxx, created and used
                               internally by this NAT gateway is in an invalid state. Please try again."

                               * For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx
                               does not exist or could not be found."
                          type: string
                        natGatewayAddresses:
                          description: |-
                            Information about the IP addresses and network interface associated with
                            the NAT gateway.
                          items:
                            description: Describes the IP addresses and network interface associated with a NAT gateway.
                            properties:
                              allocationID:
                                type: string
                              networkInterfaceID:
                                type: string
                              privateIP:
                                type: string
                              publicIP:
                                type: string
                            type: object
                          type: array
                        natGatewayID:
                          description: The ID of the NAT gateway.
                          type: string
                        provisionedBandwidth:
                          description: |-
                            Reserved. If you need to sustain traffic greater than the documented limits
                            (https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html#vpc-limits-gateways),
                            contact Amazon Web Services Support.
                          properties:
                            provisionTime:
                              format: date-time
                              type: string
                            provisioned:
                              type: string
                            requestTime:
                              format: date-time
                              type: string
                            requested:
                              type: string
                            status:
                              type: string
                          type: object
                        state:
                          description: |-
                            The state of the NAT gateway.

                               * pending: The NAT gateway is being created and is not ready to process
                               traffic.

                               * failed: The NAT gateway could not be created. Check the failureCode
                               and failureMessage fields for the reason.

                               * available: The NAT gateway is able to process traffic. This status remains
                               until you delete the NAT gateway, and does not indicate the health of
                               the NAT gateway.

                               * deleting: The NAT gateway is in the process of being terminated and
                               may still be processing traffic.

                               * deleted: The NAT gateway has been terminated and is no longer processing
                               traffic.
                          type: string
                        vpcID:
                          description: The ID of the VPC in which the NAT gateway is located.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-networkacls-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: networkacls.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: NetworkACL
            listKind: NetworkACLList
            plural: networkacls
            singular: networkacl
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.id
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: NetworkACL is the Schema for the NetworkACLS API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        NetworkAclSpec defines the desired state of NetworkAcl.

                        Describes a network ACL.
                      properties:
                        associations:
                          items:
                            description: Describes an association between a network ACL and a subnet.
                            properties:
                              networkACLAssociationID:
                                type: string
                              networkACLID:
                                type: string
                              subnetID:
                                type: string
                              subnetRef:
                                description: Reference field for SubnetID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        entries:
                          items:
                            description: Describes an entry in a network ACL.
                            properties:
                              cidrBlock:
                                type: string
                              egress:
                                type: boolean
                              icmpTypeCode:
                                description: Describes the ICMP type and code.
                                properties:
                                  code:
                                    format: int64
                                    type: integer
                                  type_:
                                    format: int64
                                    type: integer
                                type: object
                              ipv6CIDRBlock:
                                type: string
                              portRange:
                                description: Describes a range of ports.
                                properties:
                                  from:
                                    format: int64
                                    type: integer
                                  to:
                                    format: int64
                                    type: integer
                                type: object
                              protocol:
                                type: string
                              ruleAction:
                                type: string
                              ruleNumber:
                                format: int64
                                type: integer
                            type: object
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: NetworkACLStatus defines the observed state of NetworkACL
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        id:
                          description: The ID of the network ACL.
                          type: string
                        isDefault:
                          description: Indicates whether this is the default network ACL for the VPC.
                          type: boolean
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the network ACL.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-routetables-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: routetables.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: RouteTable
            listKind: RouteTableList
            plural: routetables
            singular: routetable
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.routeTableID
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: RouteTable is the Schema for the RouteTables API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        RouteTableSpec defines the desired state of RouteTable.

                        Describes a route table.
                      properties:
                        routes:
                          items:
                            properties:
                              carrierGatewayID:
                                type: string
                              coreNetworkARN:
                                type: string
                              destinationCIDRBlock:
                                type: string
                              destinationIPv6CIDRBlock:
                                type: string
                              destinationPrefixListID:
                                type: string
                              egressOnlyInternetGatewayID:
                                type: string
                              gatewayID:
                                type: string
                              gatewayRef:
                                description: Reference field for GatewayID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                              instanceID:
                                type: string
                              localGatewayID:
                                type: string
                              natGatewayID:
                                type: string
                              natGatewayRef:
                                description: Reference field for NATGatewayID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                              networkInterfaceID:
                                type: string
                              transitGatewayID:
                                type: string
                              transitGatewayRef:
                                description: Reference field for TransitGatewayID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                              vpcEndpointID:
                                type: string
                              vpcEndpointRef:
                                description: Reference field for VPCEndpointID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                              vpcPeeringConnectionID:
                                type: string
                              vpcPeeringConnectionRef:
                                description: Reference field for VPCPeeringConnectionID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: RouteTableStatus defines the observed state of RouteTable
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        associations:
                          description: The associations between the route table and your subnets or gateways.
                          items:
                            description: Describes an association between a route table and a subnet or gateway.
                            properties:
                              associationState:
                                description: |-
                                  Describes the state of an association between a route table and a subnet
                                  or gateway.
                                properties:
                                  state:
                                    type: string
                                  statusMessage:
                                    type: string
                                type: object
                              gatewayID:
                                type: string
                              main:
                                type: boolean
                              routeTableAssociationID:
                                type: string
                              routeTableID:
                                type: string
                              subnetID:
                                type: string
                            type: object
                          type: array
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the route table.
                          type: string
                        propagatingVGWs:
                          description: Any virtual private gateway (VGW) propagating routes.
                          items:
                            description: Describes a virtual private gateway propagating route.
                            properties:
                              gatewayID:
                                type: string
                            type: object
                          type: array
                        routeStatuses:
                          description: The routes in the route table.
                          items:
                            description: Describes a route in a route table.
                            properties:
                              carrierGatewayID:
                                type: string
                              coreNetworkARN:
                                type: string
                              destinationCIDRBlock:
                                type: string
                              destinationIPv6CIDRBlock:
                                type: string
                              destinationPrefixListID:
                                type: string
                              egressOnlyInternetGatewayID:
                                type: string
                              gatewayID:
                                type: string
                              instanceID:
                                type: string
                              instanceOwnerID:
                                type: string
                              localGatewayID:
                                type: string
                              natGatewayID:
                                type: string
                              networkInterfaceID:
                                type: string
                              origin:
                                type: string
                              state:
                                type: string
                              transitGatewayID:
                                type: string
                              vpcPeeringConnectionID:
                                type: string
                            type: object
                          type: array
                        routeTableID:
                          description: The ID of the route table.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-securitygroups-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: securitygroups.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: SecurityGroup
            listKind: SecurityGroupList
            plural: securitygroups
            singular: securitygroup
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.id
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: SecurityGroup is the Schema for the SecurityGroups API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        SecurityGroupSpec defines the desired state of SecurityGroup.

                        Describes a security group.
                      properties:
                        description:
                          description: |-
                            A description for the security group.

                            Constraints: Up to 255 characters in length

                            Valid characters: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
                          type: string
                        egressRules:
                          items:
                            description: Describes the permissions for a security group rule.
                            properties:
                              fromPort:
                                format: int64
                                type: integer
                              ipProtocol:
                                type: string
                              ipRanges:
                                items:
                                  description: Describes an IPv4 address range.
                                  properties:
                                    cidrIP:
                                      type: string
                                    description:
                                      type: string
                                  type: object
                                type: array
                              ipv6Ranges:
                                items:
                                  description: Describes an IPv6 address range.
                                  properties:
                                    cidrIPv6:
                                      type: string
                                    description:
                                      type: string
                                  type: object
                                type: array
                              prefixListIDs:
                                items:
                                  description: Describes a prefix list ID.
                                  properties:
                                    description:
                                      type: string
                                    prefixListID:
                                      type: string
                                  type: object
                                type: array
                              toPort:
                                format: int64
                                type: integer
                              userIDGroupPairs:
                                items:
                                  description: Describes a security group and Amazon Web Services account ID pair.
                                  properties:
                                    description:
                                      type: string
                                    groupID:
                                      type: string
                                    groupName:
                                      type: string
                                    groupRef:
                                      description: Reference field for GroupID
                                      properties:
                                        from:
                                          description: |-
                                            AWSResourceReference provides all the values necessary to reference another
                                            k8s resource for finding the identifier(Id/ARN/Name)
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                      type: object
                                    peeringStatus:
                                      type: string
                                    userID:
                                      type: string
                                    vpcID:
                                      type: string
                                    vpcPeeringConnectionID:
                                      type: string
                                    vpcRef:
                                      description: Reference field for VPCID
                                      properties:
                                        from:
                                          description: |-
                                            AWSResourceReference provides all the values necessary to reference another
                                            k8s resource for finding the identifier(Id/ARN/Name)
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                          type: array
                        ingressRules:
                          items:
                            description: Describes the permissions for a security group rule.
                            properties:
                              fromPort:
                                format: int64
                                type: integer
                              ipProtocol:
                                type: string
                              ipRanges:
                                items:
                                  description: Describes an IPv4 address range.
                                  properties:
                                    cidrIP:
                                      type: string
                                    description:
                                      type: string
                                  type: object
                                type: array
                              ipv6Ranges:
                                items:
                                  description: Describes an IPv6 address range.
                                  properties:
                                    cidrIPv6:
                                      type: string
                                    description:
                                      type: string
                                  type: object
                                type: array
                              prefixListIDs:
                                items:
                                  description: Describes a prefix list ID.
                                  properties:
                                    description:
                                      type: string
                                    prefixListID:
                                      type: string
                                  type: object
                                type: array
                              toPort:
                                format: int64
                                type: integer
                              userIDGroupPairs:
                                items:
                                  description: Describes a security group and Amazon Web Services account ID pair.
                                  properties:
                                    description:
                                      type: string
                                    groupID:
                                      type: string
                                    groupName:
                                      type: string
                                    groupRef:
                                      description: Reference field for GroupID
                                      properties:
                                        from:
                                          description: |-
                                            AWSResourceReference provides all the values necessary to reference another
                                            k8s resource for finding the identifier(Id/ARN/Name)
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                      type: object
                                    peeringStatus:
                                      type: string
                                    userID:
                                      type: string
                                    vpcID:
                                      type: string
                                    vpcPeeringConnectionID:
                                      type: string
                                    vpcRef:
                                      description: Reference field for VPCID
                                      properties:
                                        from:
                                          description: |-
                                            AWSResourceReference provides all the values necessary to reference another
                                            k8s resource for finding the identifier(Id/ARN/Name)
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                          type: array
                        name:
                          description: |-
                            The name of the security group.

                            Constraints: Up to 255 characters in length. Cannot start with sg-.

                            Valid characters: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The ID of the VPC. Required for a nondefault VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      required:
                        - description
                        - name
                      type: object
                    status:
                      description: SecurityGroupStatus defines the observed state of SecurityGroup
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        id:
                          description: The ID of the security group.
                          type: string
                        rules:
                          description: Information about security group rules.
                          items:
                            description: Describes a security group rule.
                            properties:
                              cidrIPv4:
                                type: string
                              cidrIPv6:
                                type: string
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              ipProtocol:
                                type: string
                              isEgress:
                                type: boolean
                              prefixListID:
                                type: string
                              securityGroupRuleID:
                                type: string
                              tags:
                                items:
                                  description: Describes a tag.
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                              toPort:
                                format: int64
                                type: integer
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-subnets-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: subnets.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: Subnet
            listKind: SubnetList
            plural: subnets
            singular: subnet
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.subnetID
                  name: ID
                  type: string
                - jsonPath: .status.state
                  name: state
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: Subnet is the Schema for the Subnets API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        SubnetSpec defines the desired state of Subnet.

                        Describes a subnet.
                      properties:
                        assignIPv6AddressOnCreation:
                          type: boolean
                        availabilityZone:
                          description: |-
                            The Availability Zone or Local Zone for the subnet.

                            Default: Amazon Web Services selects one for you. If you create more than
                            one subnet in your VPC, we do not necessarily select a different zone for
                            each subnet.

                            To create a subnet in a Local Zone, set this value to the Local Zone ID,
                            for example us-west-2-lax-1a. For information about the Regions that support
                            Local Zones, see Available Local Zones (https://docs.aws.amazon.com/local-zones/latest/ug/available-local-zones.html).

                            To create a subnet in an Outpost, set this value to the Availability Zone
                            for the Outpost and specify the Outpost ARN.
                          type: string
                        availabilityZoneID:
                          description: The AZ ID or the Local Zone ID of the subnet.
                          type: string
                        cidrBlock:
                          description: |-
                            The IPv4 network range for the subnet, in CIDR notation. For example, 10.0.0.0/24.
                            We modify the specified CIDR block to its canonical form; for example, if
                            you specify 100.68.0.18/18, we modify it to 100.68.0.0/18.

                            This parameter is not supported for an IPv6 only subnet.
                          type: string
                        customerOwnedIPv4Pool:
                          type: string
                        enableDNS64:
                          type: boolean
                        enableResourceNameDNSAAAARecord:
                          type: boolean
                        enableResourceNameDNSARecord:
                          type: boolean
                        hostnameType:
                          type: string
                        ipv6CIDRBlock:
                          description: |-
                            The IPv6 network range for the subnet, in CIDR notation. This parameter is
                            required for an IPv6 only subnet.
                          type: string
                        ipv6Native:
                          description: Indicates whether to create an IPv6 only subnet.
                          type: boolean
                        mapPublicIPOnLaunch:
                          type: boolean
                        outpostARN:
                          description: |-
                            The Amazon Resource Name (ARN) of the Outpost. If you specify an Outpost
                            ARN, you must also specify the Availability Zone of the Outpost subnet.
                          type: string
                        routeTableRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        routeTables:
                          items:
                            type: string
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: SubnetStatus defines the observed state of Subnet
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        availableIPAddressCount:
                          description: |-
                            The number of unused private IPv4 addresses in the subnet. The IPv4 addresses
                            for any stopped instances are considered unavailable.
                          format: int64
                          type: integer
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        defaultForAZ:
                          description: Indicates whether this is the default subnet for the Availability Zone.
                          type: boolean
                        enableLniAtDeviceIndex:
                          description: |-
                            Indicates the device position for local network interfaces in this subnet.
                            For example, 1 indicates local network interfaces in this subnet are the
                            secondary network interface (eth1).
                          format: int64
                          type: integer
                        ipv6CIDRBlockAssociationSet:
                          description: Information about the IPv6 CIDR blocks associated with the subnet.
                          items:
                            description: Describes an association between a subnet and an IPv6 CIDR block.
                            properties:
                              associationID:
                                type: string
                              ipv6CIDRBlock:
                                type: string
                              ipv6CIDRBlockState:
                                description: Describes the state of a CIDR block.
                                properties:
                                  state:
                                    type: string
                                  statusMessage:
                                    type: string
                                type: object
                            type: object
                          type: array
                        mapCustomerOwnedIPOnLaunch:
                          description: |-
                            Indicates whether a network interface created in this subnet (including a
                            network interface created by RunInstances) receives a customer-owned IPv4
                            address.
                          type: boolean
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the subnet.
                          type: string
                        privateDNSNameOptionsOnLaunch:
                          description: |-
                            The type of hostnames to assign to instances in the subnet at launch. An
                            instance hostname is based on the IPv4 address or ID of the instance.
                          properties:
                            enableResourceNameDNSAAAARecord:
                              type: boolean
                            enableResourceNameDNSARecord:
                              type: boolean
                            hostnameType:
                              type: string
                          type: object
                        state:
                          description: The current state of the subnet.
                          type: string
                        subnetID:
                          description: The ID of the subnet.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-transitgateways-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: transitgateways.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: TransitGateway
            listKind: TransitGatewayList
            plural: transitgateways
            singular: transitgateway
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.transitGatewayID
                  name: ID
                  type: string
                - jsonPath: .status.state
                  name: state
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: TransitGateway is the Schema for the TransitGateways API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        TransitGatewaySpec defines the desired state of TransitGateway.

                        Describes a transit gateway.
                      properties:
                        description:
                          description: A description of the transit gateway.
                          type: string
                        options:
                          description: The transit gateway options.
                          properties:
                            amazonSideASN:
                              format: int64
                              type: integer
                            autoAcceptSharedAttachments:
                              type: string
                            defaultRouteTableAssociation:
                              type: string
                            defaultRouteTablePropagation:
                              type: string
                            dnsSupport:
                              type: string
                            multicastSupport:
                              type: string
                            transitGatewayCIDRBlocks:
                              items:
                                type: string
                              type: array
                            vpnECMPSupport:
                              type: string
                          type: object
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    status:
                      description: TransitGatewayStatus defines the observed state of TransitGateway
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        creationTime:
                          description: The creation time.
                          format: date-time
                          type: string
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the transit gateway.
                          type: string
                        state:
                          description: The state of the transit gateway.
                          type: string
                        transitGatewayID:
                          description: The ID of the transit gateway.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-transitgatewayvpcattachments-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: transitgatewayvpcattachments.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: TransitGatewayVPCAttachment
            listKind: TransitGatewayVPCAttachmentList
            plural: transitgatewayvpcattachments
            singular: transitgatewayvpcattachment
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.id
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: TransitGatewayVPCAttachment is the Schema for the TransitGatewayVPCAttachments API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        TransitGatewayVpcAttachmentSpec defines the desired state of TransitGatewayVpcAttachment.

                        Describes a VPC attachment.
                      properties:
                        options:
                          description: The VPC attachment options.
                          properties:
                            applianceModeSupport:
                              type: string
                            dnsSupport:
                              type: string
                            ipv6Support:
                              type: string
                            securityGroupReferencingSupport:
                              type: string
                          type: object
                        subnetIDs:
                          description: |-
                            The IDs of one or more subnets. You can specify only one subnet per Availability
                            Zone. You must specify at least one subnet, but we recommend that you specify
                            two subnets for better availability. The transit gateway uses one IP address
                            from each specified subnet.
                          items:
                            type: string
                          type: array
                        subnetRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        transitGatewayID:
                          description: The ID of the transit gateway.
                          type: string
                        transitGatewayRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: TransitGatewayVPCAttachmentStatus defines the observed state of TransitGatewayVPCAttachment
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        creationTime:
                          description: The creation time.
                          format: date-time
                          type: string
                        id:
                          description: The ID of the attachment.
                          type: string
                        state:
                          description: |-
                            The state of the VPC attachment. Note that the initiating state has been
                            deprecated.
                          type: string
                        vpcOwnerID:
                          description: The ID of the Amazon Web Services account that owns the VPC.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-vpcendpoints-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: vpcendpoints.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: VPCEndpoint
            listKind: VPCEndpointList
            plural: vpcendpoints
            singular: vpcendpoint
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.vpcEndpointID
                  name: ID
                  type: string
                - jsonPath: .status.state
                  name: state
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: VPCEndpoint is the Schema for the VPCEndpoints API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        VpcEndpointSpec defines the desired state of VpcEndpoint.

                        Describes a VPC endpoint.
                      properties:
                        dnsOptions:
                          description: The DNS options for the endpoint.
                          properties:
                            dnsRecordIPType:
                              type: string
                          type: object
                        ipAddressType:
                          description: The IP address type for the endpoint.
                          type: string
                        policyDocument:
                          description: |-
                            (Interface and gateway endpoints) A policy to attach to the endpoint that
                            controls access to the service. The policy must be in valid JSON format.
                            If this parameter is not specified, we attach a default policy that allows
                            full access to the service.
                          type: string
                        privateDNSEnabled:
                          description: |-
                            (Interface endpoint) Indicates whether to associate a private hosted zone
                            with the specified VPC. The private hosted zone contains a record set for
                            the default public DNS name for the service for the Region (for example,
                            kinesis.us-east-1.amazonaws.com), which resolves to the private IP addresses
                            of the endpoint network interfaces in the VPC. This enables you to make requests
                            to the default public DNS name for the service instead of the public DNS
                            names that are automatically generated by the VPC endpoint service.

                            To use a private hosted zone, you must set the following VPC attributes to
                            true: enableDnsHostnames and enableDnsSupport. Use ModifyVpcAttribute to
                            set the VPC attributes.

                            Default: true
                          type: boolean
                        routeTableIDs:
                          description: (Gateway endpoint) The route table IDs.
                          items:
                            type: string
                          type: array
                        routeTableRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        securityGroupIDs:
                          description: |-
                            (Interface endpoint) The IDs of the security groups to associate with the
                            endpoint network interfaces. If this parameter is not specified, we use the
                            default security group for the VPC.
                          items:
                            type: string
                          type: array
                        securityGroupRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        serviceName:
                          description: The name of the endpoint service.
                          type: string
                        serviceNetworkARN:
                          description: |-
                            The Amazon Resource Name (ARN) of a service network that will be associated
                            with the VPC endpoint of type service-network.
                          type: string
                          x-kubernetes-validations:
                            - message: Value is immutable once set
                              rule: self == oldSelf
                        serviceRegion:
                          description: The Region where the service is hosted. The default is the current Region.
                          type: string
                          x-kubernetes-validations:
                            - message: Value is immutable once set
                              rule: self == oldSelf
                        subnetIDs:
                          description: |-
                            (Interface and Gateway Load Balancer endpoints) The IDs of the subnets in
                            which to create endpoint network interfaces. For a Gateway Load Balancer
                            endpoint, you can specify only one subnet.
                          items:
                            type: string
                          type: array
                        subnetRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcEndpointType:
                          description: |-
                            The type of endpoint.

                            Default: Gateway
                          type: string
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: VPCEndpointStatus defines the observed state of VPCEndpoint
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        creationTimestamp:
                          description: The date and time that the endpoint was created.
                          format: date-time
                          type: string
                        dnsEntries:
                          description: (Interface endpoint) The DNS entries for the endpoint.
                          items:
                            description: Describes a DNS entry.
                            properties:
                              dnsName:
                                type: string
                              hostedZoneID:
                                type: string
                            type: object
                          type: array
                        groups:
                          description: |-
                            (Interface endpoint) Information about the security groups that are associated
                            with the network interface.
                          items:
                            description: Describes a security group.
                            properties:
                              groupID:
                                type: string
                              groupName:
                                type: string
                            type: object
                          type: array
                        lastError:
                          description: The last error that occurred for endpoint.
                          properties:
                            code:
                              type: string
                            message:
                              type: string
                          type: object
                        networkInterfaceIDs:
                          description: (Interface endpoint) The network interfaces for the endpoint.
                          items:
                            type: string
                          type: array
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the endpoint.
                          type: string
                        requesterManaged:
                          description: Indicates whether the endpoint is being managed by its service.
                          type: boolean
                        state:
                          description: The state of the endpoint.
                          type: string
                        vpcEndpointID:
                          description: The ID of the endpoint.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-vpcendpointserviceconfigurations-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: vpcendpointserviceconfigurations.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: VPCEndpointServiceConfiguration
            listKind: VPCEndpointServiceConfigurationList
            plural: vpcendpointserviceconfigurations
            singular: vpcendpointserviceconfiguration
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.serviceID
                  name: ServiceID
                  type: string
                - jsonPath: .status.serviceState
                  name: ServiceState
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: VPCEndpointServiceConfiguration is the Schema for the VPCEndpointServiceConfigurations API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: VpcEndpointServiceConfigurationSpec defines the desired state of VpcEndpointServiceConfiguration.
                      properties:
                        acceptanceRequired:
                          description: |-
                            Indicates whether requests from service consumers to create an endpoint to
                            your service must be accepted manually.
                          type: boolean
                        allowedPrincipals:
                          description: |-
                            The Amazon Resource Names (ARN) of the principals. Permissions are granted
                            to the principals in this list. To grant permissions to all principals, specify
                            an asterisk (*).
                          items:
                            type: string
                          type: array
                        gatewayLoadBalancerARNs:
                          description: The Amazon Resource Names (ARNs) of the Gateway Load Balancers.
                          items:
                            type: string
                          type: array
                        networkLoadBalancerARNs:
                          description: The Amazon Resource Names (ARNs) of the Network Load Balancers.
                          items:
                            type: string
                          type: array
                        privateDNSName:
                          description: |-
                            (Interface endpoint configuration) The private DNS name to assign to the
                            VPC endpoint service.
                          type: string
                        supportedIPAddressTypes:
                          description: The supported IP address types. The possible values are ipv4 and ipv6.
                          items:
                            type: string
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    status:
                      description: VPCEndpointServiceConfigurationStatus defines the observed state of VPCEndpointServiceConfiguration
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        availabilityZones:
                          description: The Availability Zones in which the service is available.
                          items:
                            type: string
                          type: array
                        baseEndpointDNSNames:
                          description: The DNS names for the service.
                          items:
                            type: string
                          type: array
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        managesVPCEndpoints:
                          description: |-
                            Indicates whether the service manages its VPC endpoints. Management of the
                            service VPC endpoints using the VPC endpoint API is restricted.
                          type: boolean
                        payerResponsibility:
                          description: The payer responsibility.
                          type: string
                        privateDNSNameConfiguration:
                          description: Information about the endpoint service private DNS name configuration.
                          properties:
                            name:
                              type: string
                            state:
                              type: string
                            type_:
                              type: string
                            value:
                              type: string
                          type: object
                        serviceID:
                          description: The ID of the service.
                          type: string
                        serviceName:
                          description: The name of the service.
                          type: string
                        serviceState:
                          description: The service state.
                          type: string
                        serviceType:
                          description: The type of service.
                          items:
                            description: Describes the type of service for a VPC endpoint.
                            properties:
                              serviceType:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-vpcpeeringconnections-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: vpcpeeringconnections.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: VPCPeeringConnection
            listKind: VPCPeeringConnectionList
            plural: vpcpeeringconnections
            singular: vpcpeeringconnection
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: VPCPeeringConnection is the Schema for the VPCPeeringConnections API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        VpcPeeringConnectionSpec defines the desired state of VpcPeeringConnection.

                        Describes a VPC peering connection.
                      properties:
                        acceptRequest:
                          type: boolean
                        accepterPeeringConnectionOptions:
                          description: The VPC peering connection options for the accepter VPC.
                          properties:
                            allowDNSResolutionFromRemoteVPC:
                              type: boolean
                            allowEgressFromLocalClassicLinkToRemoteVPC:
                              type: boolean
                            allowEgressFromLocalVPCToRemoteClassicLink:
                              type: boolean
                          type: object
                        peerOwnerID:
                          description: |-
                            The Amazon Web Services account ID of the owner of the accepter VPC.

                            Default: Your Amazon Web Services account ID
                          type: string
                        peerRegion:
                          description: |-
                            The Region code for the accepter VPC, if the accepter VPC is located in a
                            Region other than the Region in which you make the request.

                            Default: The Region in which you make the request.
                          type: string
                        peerVPCID:
                          description: |-
                            The ID of the VPC with which you are creating the VPC peering connection.
                            You must specify this parameter in the request.
                          type: string
                        peerVPCRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        requesterPeeringConnectionOptions:
                          description: The VPC peering connection options for the requester VPC.
                          properties:
                            allowDNSResolutionFromRemoteVPC:
                              type: boolean
                            allowEgressFromLocalClassicLinkToRemoteVPC:
                              type: boolean
                            allowEgressFromLocalVPCToRemoteClassicLink:
                              type: boolean
                          type: object
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The ID of the requester VPC. You must specify this parameter in the request.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: VPCPeeringConnectionStatus defines the observed state of VPCPeeringConnection
                      properties:
                        accepterVPCInfo:
                          description: |-
                            Information about the accepter VPC. CIDR block information is only returned
                            when describing an active VPC peering connection.
                          properties:
                            cidrBlock:
                              type: string
                            cidrBlockSet:
                              items:
                                description: Describes an IPv4 CIDR block.
                                properties:
                                  cidrBlock:
                                    type: string
                                type: object
                              type: array
                            ipv6CIDRBlockSet:
                              items:
                                description: Describes an IPv6 CIDR block.
                                properties:
                                  ipv6CIDRBlock:
                                    type: string
                                type: object
                              type: array
                            ownerID:
                              type: string
                            peeringOptions:
                              description: Describes the VPC peering connection options.
                              properties:
                                allowDNSResolutionFromRemoteVPC:
                                  type: boolean
                                allowEgressFromLocalClassicLinkToRemoteVPC:
                                  type: boolean
                                allowEgressFromLocalVPCToRemoteClassicLink:
                                  type: boolean
                              type: object
                            region:
                              type: string
                            vpcID:
                              type: string
                          type: object
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        expirationTime:
                          description: The time that an unaccepted VPC peering connection will expire.
                          format: date-time
                          type: string
                        requesterVPCInfo:
                          description: |-
                            Information about the requester VPC. CIDR block information is only returned
                            when describing an active VPC peering connection.
                          properties:
                            cidrBlock:
                              type: string
                            cidrBlockSet:
                              items:
                                description: Describes an IPv4 CIDR block.
                                properties:
                                  cidrBlock:
                                    type: string
                                type: object
                              type: array
                            ipv6CIDRBlockSet:
                              items:
                                description: Describes an IPv6 CIDR block.
                                properties:
                                  ipv6CIDRBlock:
                                    type: string
                                type: object
                              type: array
                            ownerID:
                              type: string
                            peeringOptions:
                              description: Describes the VPC peering connection options.
                              properties:
                                allowDNSResolutionFromRemoteVPC:
                                  type: boolean
                                allowEgressFromLocalClassicLinkToRemoteVPC:
                                  type: boolean
                                allowEgressFromLocalVPCToRemoteClassicLink:
                                  type: boolean
                              type: object
                            region:
                              type: string
                            vpcID:
                              type: string
                          type: object
                        status:
                          description: The status of the VPC peering connection.
                          properties:
                            code:
                              type: string
                            message:
                              type: string
                          type: object
                        vpcPeeringConnectionID:
                          description: The ID of the VPC peering connection.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-vpcs-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: vpcs.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: VPC
            listKind: VPCList
            plural: vpcs
            singular: vpc
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.vpcID
                  name: ID
                  type: string
                - jsonPath: .status.state
                  name: state
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: VPC is the Schema for the VPCS API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        VpcSpec defines the desired state of Vpc.

                        Describes a VPC.
                      properties:
                        amazonProvidedIPv6CIDRBlock:
                          description: |-
                            Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for
                            the VPC. You cannot specify the range of IP addresses, or the size of the
                            CIDR block.
                          type: boolean
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                        disallowSecurityGroupDefaultRules:
                          type: boolean
                        enableDNSHostnames:
                          description: The attribute value. The valid values are true or false.
                          type: boolean
                        enableDNSSupport:
                          description: The attribute value. The valid values are true or false.
                          type: boolean
                        instanceTenancy:
                          description: |-
                            The tenancy options for instances launched into the VPC. For default, instances
                            are launched with shared tenancy by default. You can launch instances with
                            any tenancy into a shared tenancy VPC. For dedicated, instances are launched
                            as dedicated tenancy instances by default. You can only launch instances
                            with a tenancy of dedicated or host into a dedicated tenancy VPC.

                            Important: The host value cannot be used with this parameter. Use the default
                            or dedicated values only.

                            Default: default
                          type: string
                        ipv4IPAMPoolID:
                          description: |-
                            The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR.
                            For more information, see What is IPAM? (https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html)
                            in the Amazon VPC IPAM User Guide.
                          type: string
                        ipv4NetmaskLength:
                          description: |-
                            The netmask length of the IPv4 CIDR you want to allocate to this VPC from
                            an Amazon VPC IP Address Manager (IPAM) pool. For more information about
                            IPAM, see What is IPAM? (https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html)
                            in the Amazon VPC IPAM User Guide.
                          format: int64
                          type: integer
                        ipv6CIDRBlock:
                          description: |-
                            The IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool
                            in the request.

                            To let Amazon choose the IPv6 CIDR block for you, omit this parameter.
                          type: string
                        ipv6CIDRBlockNetworkBorderGroup:
                          description: |-
                            The name of the location from which we advertise the IPV6 CIDR block. Use
                            this parameter to limit the address to this location.

                            You must set AmazonProvidedIpv6CidrBlock to true to use this parameter.
                          type: string
                        ipv6IPAMPoolID:
                          description: |-
                            The ID of an IPv6 IPAM pool which will be used to allocate this VPC an IPv6
                            CIDR. IPAM is a VPC feature that you can use to automate your IP address
                            management workflows including assigning, tracking, troubleshooting, and
                            auditing IP addresses across Amazon Web Services Regions and accounts throughout
                            your Amazon Web Services Organization. For more information, see What is
                            IPAM? (https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html)
                            in the Amazon VPC IPAM User Guide.
                          type: string
                        ipv6NetmaskLength:
                          description: |-
                            The netmask length of the IPv6 CIDR you want to allocate to this VPC from
                            an Amazon VPC IP Address Manager (IPAM) pool. For more information about
                            IPAM, see What is IPAM? (https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html)
                            in the Amazon VPC IPAM User Guide.
                          format: int64
                          type: integer
                        ipv6Pool:
                          description: The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - cidrBlocks
                      type: object
                    status:
                      description: VPCStatus defines the observed state of VPC
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        cidrBlockAssociationSet:
                          description: Information about the IPv4 CIDR blocks associated with the VPC.
                          items:
                            description: Describes an IPv4 CIDR block associated with a VPC.
                            properties:
                              associationID:
                                type: string
                              cidrBlock:
                                type: string
                              cidrBlockState:
                                description: Describes the state of a CIDR block.
                                properties:
                                  state:
                                    type: string
                                  statusMessage:
                                    type: string
                                type: object
                            type: object
                          type: array
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        dhcpOptionsID:
                          description: The ID of the set of DHCP options you've associated with the VPC.
                          type: string
                        ipv6CIDRBlockAssociationSet:
                          description: Information about the IPv6 CIDR blocks associated with the VPC.
                          items:
                            description: Describes an IPv6 CIDR block associated with a VPC.
                            properties:
                              associationID:
                                type: string
                              ipv6CIDRBlock:
                                type: string
                              ipv6CIDRBlockState:
                                description: Describes the state of a CIDR block.
                                properties:
                                  state:
                                    type: string
                                  statusMessage:
                                    type: string
                                type: object
                              ipv6Pool:
                                type: string
                              networkBorderGroup:
                                type: string
                            type: object
                          type: array
                        isDefault:
                          description: Indicates whether the VPC is the default VPC.
                          type: boolean
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the VPC.
                          type: string
                        securityGroupDefaultRulesExist:
                          type: boolean
                        state:
                          description: The current state of the VPC.
                          type: string
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: serviceaccount---schema-spec-values-serviceaccount-name
      template:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          annotations:
            eks.amazonaws.com/role-arn: ${ackIamRole.status.ackResourceMetadata.arn}
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.values.serviceAccount.name}
          namespace: ${schema.spec.namespace}
    - id: clusterrole---schema-spec-name--ec2-chart
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart
        rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
              - secrets
            verbs:
              - get
              - list
              - patch
              - watch
          - apiGroups:
              - ""
            resources:
              - namespaces
            verbs:
              - get
              - list
              - watch
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - capacityreservations
              - dhcpoptions
              - elasticipaddresses
              - flowlogs
              - instances
              - internetgateways
              - launchtemplates
              - natgateways
              - networkacls
              - routetables
              - securitygroups
              - subnets
              - transitgateways
              - transitgatewayvpcattachments
              - vpcendpoints
              - vpcendpointserviceconfigurations
              - vpcpeeringconnections
              - vpcs
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - capacityreservations/status
              - dhcpoptions/status
              - elasticipaddresses/status
              - flowlogs/status
              - instances/status
              - internetgateways/status
              - launchtemplates/status
              - natgateways/status
              - networkacls/status
              - routetables/status
              - securitygroups/status
              - subnets/status
              - transitgateways/status
              - transitgatewayvpcattachments/status
              - vpcendpoints/status
              - vpcendpointserviceconfigurations/status
              - vpcpeeringconnections/status
              - vpcs/status
            verbs:
              - get
              - patch
              - update
          - apiGroups:
              - services.k8s.aws
            resources:
              - adoptedresources
              - fieldexports
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - services.k8s.aws
            resources:
              - adoptedresources/status
              - fieldexports/status
            verbs:
              - get
              - patch
              - update
    - id: clusterrole---schema-spec-name--ec2-chart-namespaces-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-namespaces-cache
        rules:
          - apiGroups:
              - ""
            resources:
              - namespaces
            verbs:
              - get
              - list
              - watch
    - id: clusterrolebinding---schema-spec-name--ec2-chart-namespaces-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-namespaces-cache
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: ${schema.spec.name}-ec2-chart-namespaces-cache
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: clusterrolebinding---schema-spec-name--ec2-chart-rolebinding
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-rolebinding
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: ${schema.spec.name}-ec2-chart
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: role---schema-spec-name--ec2-chart-configmaps-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-configmaps-cache
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
            verbs:
              - get
              - list
              - watch
    - id: role---schema-spec-name--ec2-chart-reader
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-reader
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - capacityreservations
              - dhcpoptions
              - elasticipaddresses
              - flowlogs
              - instances
              - internetgateways
              - launchtemplates
              - natgateways
              - networkacls
              - routetables
              - securitygroups
              - subnets
              - transitgateways
              - transitgatewayvpcattachments
              - vpcs
              - vpcendpoints
              - vpcendpointserviceconfigurations
              - vpcpeeringconnections
            verbs:
              - get
              - list
              - watch
    - id: role---schema-spec-name--ec2-chart-writer
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-writer
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - capacityreservations
              - dhcpoptions
              - elasticipaddresses
              - flowlogs
              - instances
              - internetgateways
              - launchtemplates
              - natgateways
              - networkacls
              - routetables
              - securitygroups
              - subnets
              - transitgateways
              - transitgatewayvpcattachments
              - vpcs
              - vpcendpoints
              - vpcendpointserviceconfigurations
              - vpcpeeringconnections
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - capacityreservations
              - dhcpoptions
              - elasticipaddresses
              - flowlogs
              - instances
              - internetgateways
              - launchtemplates
              - natgateways
              - networkacls
              - routetables
              - securitygroups
              - subnets
              - transitgateways
              - transitgatewayvpcattachments
              - vpcs
              - vpcendpoints
              - vpcendpointserviceconfigurations
              - vpcpeeringconnections
            verbs:
              - get
              - patch
              - update
    - id: rolebinding---schema-spec-name--ec2-chart-configmaps-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-configmaps-cache
          namespace: ${schema.spec.namespace}
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: ${schema.spec.name}-ec2-chart-configmaps-cache
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: deployment---schema-spec-name--ec2-chart
      template:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart
          namespace: ${schema.spec.namespace}
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: ${schema.spec.name}
              app.kubernetes.io/name: ec2-chart
          template:
            metadata:
              labels:
                app.kubernetes.io/instance: ${schema.spec.name}
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: ec2-chart
                k8s-app: ec2-chart
            spec:
              containers:
                - args:
                    - --aws-region
                    - $(AWS_REGION)
                    - --aws-endpoint-url
                    - $(AWS_ENDPOINT_URL)
                    - --log-level
                    - $(ACK_LOG_LEVEL)
                    - --resource-tags
                    - $(ACK_RESOURCE_TAGS)
                    - --watch-namespace
                    - $(ACK_WATCH_NAMESPACE)
                    - --watch-selectors
                    - $(ACK_WATCH_SELECTORS)
                    - --reconcile-resources
                    - $(RECONCILE_RESOURCES)
                    - --deletion-policy
                    - $(DELETION_POLICY)
                    - --reconcile-default-resync-seconds
                    - $(RECONCILE_DEFAULT_RESYNC_SECONDS)
                    - --reconcile-default-max-concurrent-syncs
                    - $(RECONCILE_DEFAULT_MAX_CONCURRENT_SYNCS)
                    - --feature-gates
                    - $(FEATURE_GATES)
                    - --enable-carm=true
                  command:
                    - ./bin/controller
                  env:
                    - name: ACK_SYSTEM_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: AWS_REGION
                      value: ${schema.spec.values.aws.region}
                    - name: AWS_ENDPOINT_URL
                      value: ""
                    - name: ACK_WATCH_NAMESPACE
                      value: null
                    - name: ACK_WATCH_SELECTORS
                      value: null
                    - name: RECONCILE_RESOURCES
                      value: CapacityReservation,DHCPOptions,ElasticIPAddress,FlowLog,Instance,InternetGateway,LaunchTemplate,NATGateway,NetworkACL,RouteTable,SecurityGroup,Subnet,TransitGateway,TransitGatewayVPCAttachment,VPC,VPCEndpoint,VPCEndpointServiceConfiguration,VPCPeeringConnection
                    - name: DELETION_POLICY
                      value: delete
                    - name: LEADER_ELECTION_NAMESPACE
                      value: ""
                    - name: ACK_LOG_LEVEL
                      value: info
                    - name: ACK_RESOURCE_TAGS
                      value: services.k8s.aws/controller-version=%CONTROLLER_SERVICE%-%CONTROLLER_VERSION%,services.k8s.aws/namespace=%K8S_NAMESPACE%
                    - name: RECONCILE_DEFAULT_RESYNC_SECONDS
                      value: "36000"
                    - name: RECONCILE_DEFAULT_MAX_CONCURRENT_SYNCS
                      value: "1"
                    - name: FEATURE_GATES
                      value: ReadOnlyResources=true,ResourceAdoption=true,ServiceLevelCARM=false,TeamLevelCARM=false
                  image: ${schema.spec.values.image.repository}:${schema.spec.values.image.tag}
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    httpGet:
                      path: /healthz
                      port: 8081
                    initialDelaySeconds: 15
                    periodSeconds: 20
                  name: controller
                  ports:
                    - containerPort: 8080
                      name: http
                  readinessProbe:
                    httpGet:
                      path: /readyz
                      port: 8081
                    initialDelaySeconds: 5
                    periodSeconds: 10
                  resources:
                    limits:
                      cpu: 100m
                      memory: 128Mi
                    requests:
                      cpu: 50m
                      memory: 64Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                        - ALL
                    privileged: false
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
              dnsPolicy: ClusterFirst
              hostIPC: false
              hostNetwork: false
              hostPID: false
              nodeSelector:
                kubernetes.io/os: linux
              securityContext:
                seccompProfile:
                  type: RuntimeDefault
              serviceAccountName: ${schema.spec.values.serviceAccount.name}
              terminationGracePeriodSeconds: 10


#-------------------------------------------------------------------------------------------------------------------------------------------------#
# out/rds.rgd.yaml
#-------------------------------------------------------------------------------------------------------------------------------------------------#
apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: ack-rds-ctrl.kro.run
  namespace: kro
spec:
  schema:
    apiVersion: v1alpha1
    kind: Rdscontroller
    spec:
      name: ${schema.spec.name}
      namespace: ${schema.spec.namespace}
      values:
        aws:
          accountID: ${schema.spec.values.aws.accountID}
          region: ${schema.spec.values.aws.region}
        deployment:
          containerPort: 8080
          replicas: 1
        iamRole:
          maxSessionDuration: 3600
          oidcProvider: ${schema.spec.values.iamRole.oidcProvider}
        image:
          deletePolicy: ${schema.spec.values.image.deletePolicy}
          repository: ${schema.spec.values.image.repository}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          tag: ${schema.spec.values.image.tag}
        log:
          enabled: ${schema.spec.values.log.enabled}
          level: ${schema.spec.values.log.level}
        serviceAccount:
          name: ${schema.spec.values.serviceAccount.name}
  resources:
    - id: customresourcedefinition-adoptedresources-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: adoptedresources.services.k8s.aws
        spec:
          group: services.k8s.aws
          names:
            kind: AdoptedResource
            listKind: AdoptedResourceList
            plural: adoptedresources
            singular: adoptedresource
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: AdoptedResource is the schema for the AdoptedResource API.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: AdoptedResourceSpec defines the desired state of the AdoptedResource.
                      properties:
                        aws:
                          description: AWSIdentifiers provide all unique ways to reference an AWS resource.
                          properties:
                            additionalKeys:
                              additionalProperties:
                                type: string
                              description: |-
                                AdditionalKeys represents any additional arbitrary identifiers used when
                                describing the target resource.
                              type: object
                            arn:
                              description: |-
                                ARN is the AWS Resource Name for the resource. It is a globally
                                unique identifier.
                              type: string
                            nameOrID:
                              description: |-
                                NameOrId is a user-supplied string identifier for the resource. It may
                                or may not be globally unique, depending on the type of resource.
                              type: string
                          type: object
                        kubernetes:
                          description: |-
                            ResourceWithMetadata provides the values necessary to create a
                            Kubernetes resource and override any of its metadata values.
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            metadata:
                              description: |-
                                ObjectMeta is metadata that all persisted resources must have, which includes all objects
                                users must create.
                                It is not possible to use `metav1.ObjectMeta` inside spec, as the controller-gen
                                automatically converts this to an arbitrary string-string map.
                                https://github.com/kubernetes-sigs/controller-tools/issues/385

                                Active discussion about inclusion of this field in the spec is happening in this PR:
                                https://github.com/kubernetes-sigs/controller-tools/pull/395

                                Until this is allowed, or if it never is, we will produce a subset of the object meta
                                that contains only the fields which the user is allowed to modify in the metadata.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    Annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                generateName:
                                  description: |-
                                    GenerateName is an optional prefix, used by the server, to generate a unique
                                    name ONLY IF the Name field has not been provided.
                                    If this field is used, the name returned to the client will be different
                                    than the name passed. This value will also be combined with a unique suffix.
                                    The provided value has the same validation rules as the Name field,
                                    and may be truncated by the length of the suffix required to make the value
                                    unique on the server.

                                    If this field is specified and the generated name exists, the server will
                                    NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
                                    ServerTimeout indicating a unique name could not be found in the time allotted, and the client
                                    should retry (optionally after the time indicated in the Retry-After header).

                                    Applied only if Name is not specified.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                                  type: string
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    Map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                                name:
                                  description: |-
                                    Name must be unique within a namespace. Is required when creating resources, although
                                    some resources may allow a client to request the generation of an appropriate name
                                    automatically. Name is primarily intended for creation idempotence and configuration
                                    definition.
                                    Cannot be updated.
                                    More info: http://kubernetes.io/docs/user-guide/identifiers#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace defines the space within each name must be unique. An empty namespace is
                                    equivalent to the "default" namespace, but "default" is the canonical representation.
                                    Not all objects are required to be scoped to a namespace - the value of this field for
                                    those objects will be empty.

                                    Must be a DNS_LABEL.
                                    Cannot be updated.
                                    More info: http://kubernetes.io/docs/user-guide/namespaces
                                  type: string
                                ownerReferences:
                                  description: |-
                                    List of objects depended by this object. If ALL objects in the list have
                                    been deleted, this object will be garbage collected. If this object is managed by a controller,
                                    then an entry in this list will point to this controller, with the controller field set to true.
                                    There cannot be more than one managing controller.
                                  items:
                                    description: |-
                                      OwnerReference contains enough information to let you identify an owning
                                      object. An owning object must be in the same namespace as the dependent, or
                                      be cluster-scoped, so there is no namespace field.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      blockOwnerDeletion:
                                        description: |-
                                          If true, AND if the owner has the "foregroundDeletion" finalizer, then
                                          the owner cannot be deleted from the key-value store until this
                                          reference is removed.
                                          See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                                          for how the garbage collector interacts with this field and enforces the foreground deletion.
                                          Defaults to false.
                                          To set this field, a user needs "delete" permission of the owner,
                                          otherwise 422 (Unprocessable Entity) will be returned.
                                        type: boolean
                                      controller:
                                        description: If true, this reference points to the managing controller.
                                        type: boolean
                                      kind:
                                        description: |-
                                          Kind of the referent.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                                        type: string
                                      uid:
                                        description: |-
                                          UID of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
                                        type: string
                                    required:
                                      - apiVersion
                                      - kind
                                      - name
                                      - uid
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                          required:
                            - group
                            - kind
                          type: object
                      required:
                        - aws
                        - kubernetes
                      type: object
                    status:
                      description: AdoptedResourceStatus defines the observed status of the AdoptedResource.
                      properties:
                        conditions:
                          description: |-
                            A collection of `ackv1alpha1.Condition` objects that describe the various
                            terminal states of the adopted resource CR and its target custom resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                      required:
                        - conditions
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbclusterendpoints-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbclusterendpoints.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBClusterEndpoint
            listKind: DBClusterEndpointList
            plural: dbclusterendpoints
            singular: dbclusterendpoint
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBClusterEndpoint is the Schema for the DBClusterEndpoints API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBClusterEndpointSpec defines the desired state of DBClusterEndpoint.

                        This data type represents the information you need to connect to an Amazon
                        Aurora DB cluster. This data type is used as a response element in the following
                        actions:

                          - CreateDBClusterEndpoint

                          - DescribeDBClusterEndpoints

                          - ModifyDBClusterEndpoint

                          - DeleteDBClusterEndpoint

                        For the data structure that represents Amazon RDS DB instance endpoints,
                        see Endpoint.
                      properties:
                        dbClusterEndpointIdentifier:
                          description: |-
                            The identifier to use for the new endpoint. This parameter is stored as a
                            lowercase string.
                          type: string
                        dbClusterIdentifier:
                          description: |-
                            The DB cluster identifier of the DB cluster associated with the endpoint.
                            This parameter is stored as a lowercase string.
                          type: string
                        dbClusterIdentifierRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        endpointType:
                          description: 'The type of the endpoint, one of: READER, WRITER, ANY.'
                          type: string
                        excludedMembers:
                          description: |-
                            List of DB instance identifiers that aren't part of the custom endpoint group.
                            All other eligible instances are reachable through the custom endpoint. This
                            parameter is relevant only if the list of static members is empty.
                          items:
                            type: string
                          type: array
                        staticMembers:
                          description: List of DB instance identifiers that are part of the custom endpoint group.
                          items:
                            type: string
                          type: array
                        tags:
                          description: The tags to be assigned to the Amazon RDS resource.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - dbClusterEndpointIdentifier
                      type: object
                    status:
                      description: DBClusterEndpointStatus defines the observed state of DBClusterEndpoint
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        dbClusterEndpointResourceIdentifier:
                          description: |-
                            A unique system-generated identifier for an endpoint. It remains the same
                            for the whole life of the endpoint.
                          type: string
                        endpoint:
                          description: The DNS address of the endpoint.
                          type: string
                        status:
                          description: |-
                            The current status of the endpoint. One of: creating, available, deleting,
                            inactive, modifying. The inactive state applies to an endpoint that can't
                            be used for a certain kind of cluster, such as a writer endpoint for a read-only
                            secondary cluster in a global database.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbclusterparametergroups-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbclusterparametergroups.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBClusterParameterGroup
            listKind: DBClusterParameterGroupList
            plural: dbclusterparametergroups
            singular: dbclusterparametergroup
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBClusterParameterGroup is the Schema for the DBClusterParameterGroups API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBClusterParameterGroupSpec defines the desired state of DBClusterParameterGroup.

                        Contains the details of an Amazon RDS DB cluster parameter group.

                        This data type is used as a response element in the DescribeDBClusterParameterGroups
                        action.
                      properties:
                        description:
                          description: The description for the DB cluster parameter group.
                          type: string
                        family:
                          description: |-
                            The DB cluster parameter group family name. A DB cluster parameter group
                            can be associated with one and only one DB cluster parameter group family,
                            and can be applied only to a DB cluster running a database engine and engine
                            version compatible with that DB cluster parameter group family.

                            # Aurora MySQL

                            Example: aurora-mysql5.7, aurora-mysql8.0

                            # Aurora PostgreSQL

                            Example: aurora-postgresql14

                            # RDS for MySQL

                            Example: mysql8.0

                            # RDS for PostgreSQL

                            Example: postgres13

                            To list all of the available parameter group families for a DB engine, use
                            the following command:

                            aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
                            --engine

                            For example, to list all of the available parameter group families for the
                            Aurora PostgreSQL DB engine, use the following command:

                            aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
                            --engine aurora-postgresql

                            The output contains duplicates.

                            The following are the valid DB engine values:

                              - aurora-mysql

                              - aurora-postgresql

                              - mysql

                              - postgres
                          type: string
                        name:
                          description: |-
                            The name of the DB cluster parameter group.

                            Constraints:

                              - Must not match the name of an existing DB cluster parameter group.

                            This value is stored as a lowercase string.
                          type: string
                        parameterOverrides:
                          additionalProperties:
                            type: string
                          type: object
                        parameters:
                          description: |-
                            A list of parameters in the DB cluster parameter group to modify.

                            Valid Values (for the application method): immediate | pending-reboot

                            You can use the immediate value with dynamic parameters only. You can use
                            the pending-reboot value for both dynamic and static parameters.

                            When the application method is immediate, changes to dynamic parameters are
                            applied immediately to the DB clusters associated with the parameter group.
                            When the application method is pending-reboot, changes to dynamic and static
                            parameters are applied after a reboot without failover to the DB clusters
                            associated with the parameter group.
                          items:
                            description: |-
                              This data type is used as a request parameter in the ModifyDBParameterGroup
                              and ResetDBParameterGroup actions.

                              This data type is used as a response element in the DescribeEngineDefaultParameters
                              and DescribeDBParameters actions.
                            properties:
                              allowedValues:
                                type: string
                              applyMethod:
                                type: string
                              applyType:
                                type: string
                              dataType:
                                type: string
                              description:
                                type: string
                              isModifiable:
                                type: boolean
                              minimumEngineVersion:
                                type: string
                              parameterName:
                                type: string
                              parameterValue:
                                type: string
                              source:
                                type: string
                              supportedEngineModes:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tags:
                          description: Tags to assign to the DB cluster parameter group.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - description
                        - family
                        - name
                      type: object
                    status:
                      description: DBClusterParameterGroupStatus defines the observed state of DBClusterParameterGroup
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        parameterOverrideStatuses:
                          description: Provides a list of parameters for the DB cluster parameter group.
                          items:
                            description: |-
                              This data type is used as a request parameter in the ModifyDBParameterGroup
                              and ResetDBParameterGroup actions.

                              This data type is used as a response element in the DescribeEngineDefaultParameters
                              and DescribeDBParameters actions.
                            properties:
                              allowedValues:
                                type: string
                              applyMethod:
                                type: string
                              applyType:
                                type: string
                              dataType:
                                type: string
                              description:
                                type: string
                              isModifiable:
                                type: boolean
                              minimumEngineVersion:
                                type: string
                              parameterName:
                                type: string
                              parameterValue:
                                type: string
                              source:
                                type: string
                              supportedEngineModes:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbclusters-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbclusters.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBCluster
            listKind: DBClusterList
            plural: dbclusters
            singular: dbcluster
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBCluster is the Schema for the DBClusters API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBClusterSpec defines the desired state of DBCluster.

                        Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.

                        For an Amazon Aurora DB cluster, this data type is used as a response element
                        in the operations CreateDBCluster, DeleteDBCluster, DescribeDBClusters, FailoverDBCluster,
                        ModifyDBCluster, PromoteReadReplicaDBCluster, RestoreDBClusterFromS3, RestoreDBClusterFromSnapshot,
                        RestoreDBClusterToPointInTime, StartDBCluster, and StopDBCluster.

                        For a Multi-AZ DB cluster, this data type is used as a response element in
                        the operations CreateDBCluster, DeleteDBCluster, DescribeDBClusters, FailoverDBCluster,
                        ModifyDBCluster, RebootDBCluster, RestoreDBClusterFromSnapshot, and RestoreDBClusterToPointInTime.

                        For more information on Amazon Aurora DB clusters, see What is Amazon Aurora?
                        (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html)
                        in the Amazon Aurora User Guide.

                        For more information on Multi-AZ DB clusters, see Multi-AZ deployments with
                        two readable standby DB instances (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html)
                        in the Amazon RDS User Guide.
                      properties:
                        allocatedStorage:
                          description: |-
                            The amount of storage in gibibytes (GiB) to allocate to each DB instance
                            in the Multi-AZ DB cluster.

                            Valid for Cluster Type: Multi-AZ DB clusters only

                            This setting is required to create a Multi-AZ DB cluster.
                          format: int64
                          type: integer
                        autoMinorVersionUpgrade:
                          description: |-
                            Specifies whether minor engine upgrades are applied automatically to the
                            DB cluster during the maintenance window. By default, minor engine upgrades
                            are applied automatically.

                            Valid for Cluster Type: Multi-AZ DB clusters only
                          type: boolean
                        availabilityZones:
                          description: |-
                            A list of Availability Zones (AZs) where you specifically want to create
                            DB instances in the DB cluster.

                            For information on AZs, see Availability Zones (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html#Concepts.RegionsAndAvailabilityZones.AvailabilityZones)
                            in the Amazon Aurora User Guide.

                            Valid for Cluster Type: Aurora DB clusters only

                            Constraints:

                              - Can't specify more than three AZs.
                          items:
                            type: string
                          type: array
                        backtrackWindow:
                          description: |-
                            The target backtrack window, in seconds. To disable backtracking, set this
                            value to 0.

                            Valid for Cluster Type: Aurora MySQL DB clusters only

                            Default: 0

                            Constraints:

                              - If specified, this value must be set to a number from 0 to 259,200 (72
                                hours).
                          format: int64
                          type: integer
                        backupRetentionPeriod:
                          description: |-
                            The number of days for which automated backups are retained.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Default: 1

                            Constraints:

                              - Must be a value from 1 to 35.
                          format: int64
                          type: integer
                        characterSetName:
                          description: |-
                            The name of the character set (CharacterSet) to associate the DB cluster
                            with.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        copyTagsToSnapshot:
                          description: |-
                            Specifies whether to copy all tags from the DB cluster to snapshots of the
                            DB cluster. The default is not to copy them.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: boolean
                        databaseInsightsMode:
                          description: Specifies the mode of Database Insights to enable for the cluster.
                          type: string
                        databaseName:
                          description: |-
                            The name for your database of up to 64 alphanumeric characters. A database
                            named postgres is always created. If this parameter is specified, an additional
                            database with this name is created.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        dbClusterIdentifier:
                          description: |-
                            The identifier for this DB cluster. This parameter is stored as a lowercase
                            string.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - Must contain from 1 to 63 (for Aurora DB clusters) or 1 to 52 (for Multi-AZ
                                DB clusters) letters, numbers, or hyphens.

                              - First character must be a letter.

                              - Can't end with a hyphen or contain two consecutive hyphens.

                            Example: my-cluster1
                          type: string
                        dbClusterInstanceClass:
                          description: |-
                            The compute and memory capacity of each DB instance in the Multi-AZ DB cluster,
                            for example db.m6gd.xlarge. Not all DB instance classes are available in
                            all Amazon Web Services Regions, or for all database engines.

                            For the full list of DB instance classes and availability for your engine,
                            see DB instance class (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
                            in the Amazon RDS User Guide.

                            This setting is required to create a Multi-AZ DB cluster.

                            Valid for Cluster Type: Multi-AZ DB clusters only
                          type: string
                        dbClusterParameterGroupName:
                          description: |-
                            The name of the DB cluster parameter group to associate with this DB cluster.
                            If you don't specify a value, then the default DB cluster parameter group
                            for the specified DB engine and version is used.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - If supplied, must match the name of an existing DB cluster parameter
                                group.
                          type: string
                        dbClusterParameterGroupRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        dbSubnetGroupName:
                          description: |-
                            A DB subnet group to associate with this DB cluster.

                            This setting is required to create a Multi-AZ DB cluster.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - Must match the name of an existing DB subnet group.

                            Example: mydbsubnetgroup
                          type: string
                        dbSubnetGroupRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        dbSystemID:
                          description: Reserved for future use.
                          type: string
                        deletionProtection:
                          description: |-
                            Specifies whether the DB cluster has deletion protection enabled. The database
                            can't be deleted when deletion protection is enabled. By default, deletion
                            protection isn't enabled.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: boolean
                        destinationRegion:
                          description: DestinationRegion is used for presigning the request to a given region.
                          type: string
                        domain:
                          description: |-
                            The Active Directory directory ID to create the DB cluster in.

                            For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication
                            to authenticate users that connect to the DB cluster.

                            For more information, see Kerberos authentication (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html)
                            in the Amazon Aurora User Guide.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        domainIAMRoleName:
                          description: |-
                            The name of the IAM role to use when making API calls to the Directory Service.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        enableCloudwatchLogsExports:
                          description: |-
                            The list of log types that need to be enabled for exporting to CloudWatch
                            Logs.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            The following values are valid for each DB engine:

                              - Aurora MySQL - audit | error | general | slowquery

                              - Aurora PostgreSQL - postgresql

                              - RDS for MySQL - error | general | slowquery

                              - RDS for PostgreSQL - postgresql | upgrade

                            For more information about exporting CloudWatch Logs for Amazon RDS, see
                            Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
                            in the Amazon RDS User Guide.

                            For more information about exporting CloudWatch Logs for Amazon Aurora, see
                            Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
                            in the Amazon Aurora User Guide.
                          items:
                            type: string
                          type: array
                        enableGlobalWriteForwarding:
                          description: |-
                            Specifies whether to enable this DB cluster to forward write operations to
                            the primary cluster of a global cluster (Aurora global database). By default,
                            write operations are not allowed on Aurora DB clusters that are secondary
                            clusters in an Aurora global database.

                            You can set this value only on Aurora DB clusters that are members of an
                            Aurora global database. With this parameter enabled, a secondary cluster
                            can forward writes to the current primary cluster, and the resulting changes
                            are replicated back to this cluster. For the primary DB cluster of an Aurora
                            global database, this value is used immediately if the primary is demoted
                            by a global cluster API operation, but it does nothing until then.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: boolean
                        enableHTTPEndpoint:
                          description: |-
                            Specifies whether to enable the HTTP endpoint for the DB cluster. By default,
                            the HTTP endpoint isn't enabled.

                            When enabled, the HTTP endpoint provides a connectionless web service API
                            (RDS Data API) for running SQL queries on the DB cluster. You can also query
                            your database from inside the RDS console with the RDS query editor.

                            RDS Data API is supported with the following DB clusters:

                              - Aurora PostgreSQL Serverless v2 and provisioned

                              - Aurora PostgreSQL and Aurora MySQL Serverless v1

                            For more information, see Using RDS Data API (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html)
                            in the Amazon Aurora User Guide.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: boolean
                        enableIAMDatabaseAuthentication:
                          description: |-
                            Specifies whether to enable mapping of Amazon Web Services Identity and Access
                            Management (IAM) accounts to database accounts. By default, mapping isn't
                            enabled.

                            For more information, see IAM Database Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html)
                            in the Amazon Aurora User Guide or IAM database authentication for MariaDB,
                            MySQL, and PostgreSQL (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html)
                            in the Amazon RDS User Guide.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: boolean
                        enablePerformanceInsights:
                          description: |-
                            Specifies whether to turn on Performance Insights for the DB cluster.

                            For more information, see Using Amazon Performance Insights (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)
                            in the Amazon RDS User Guide.

                            Valid for Cluster Type: Multi-AZ DB clusters only
                          type: boolean
                        engine:
                          description: |-
                            The database engine to use for this DB cluster.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Valid Values:

                              - aurora-mysql

                              - aurora-postgresql

                              - mysql

                              - postgres

                              - neptune - For information about using Amazon Neptune, see the Amazon
                                Neptune User Guide (https://docs.aws.amazon.com/neptune/latest/userguide/intro.html).
                          type: string
                        engineMode:
                          description: |-
                            The DB engine mode of the DB cluster, either provisioned or serverless.

                            The serverless engine mode only applies for Aurora Serverless v1 DB clusters.
                            Aurora Serverless v2 DB clusters use the provisioned engine mode.

                            For information about limitations and requirements for Serverless DB clusters,
                            see the following sections in the Amazon Aurora User Guide:

                              - Limitations of Aurora Serverless v1 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)

                              - Requirements for Aurora Serverless v2 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.requirements.html)

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        engineVersion:
                          description: |-
                            The version number of the database engine to use.

                            To list all of the available engine versions for Aurora MySQL version 2 (5.7-compatible)
                            and version 3 (MySQL 8.0-compatible), use the following command:

                            aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"

                            You can supply either 5.7 or 8.0 to use the default engine version for Aurora
                            MySQL version 2 or version 3, respectively.

                            To list all of the available engine versions for Aurora PostgreSQL, use the
                            following command:

                            aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"

                            To list all of the available engine versions for RDS for MySQL, use the following
                            command:

                            aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"

                            To list all of the available engine versions for RDS for PostgreSQL, use
                            the following command:

                            aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"

                            For information about a specific engine, see the following topics:

                              - Aurora MySQL - see Database engine updates for Amazon Aurora MySQL (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html)
                                in the Amazon Aurora User Guide.

                              - Aurora PostgreSQL - see Amazon Aurora PostgreSQL releases and engine
                                versions (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html)
                                in the Amazon Aurora User Guide.

                              - RDS for MySQL - see Amazon RDS for MySQL (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
                                in the Amazon RDS User Guide.

                              - RDS for PostgreSQL - see Amazon RDS for PostgreSQL (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts)
                                in the Amazon RDS User Guide.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        globalClusterIdentifier:
                          description: |-
                            The global cluster ID of an Aurora cluster that becomes the primary cluster
                            in the new global database cluster.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        iops:
                          description: |-
                            The amount of Provisioned IOPS (input/output operations per second) to be
                            initially allocated for each DB instance in the Multi-AZ DB cluster.

                            For information about valid IOPS values, see Provisioned IOPS storage (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS)
                            in the Amazon RDS User Guide.

                            This setting is required to create a Multi-AZ DB cluster.

                            Valid for Cluster Type: Multi-AZ DB clusters only

                            Constraints:

                              - Must be a multiple between .5 and 50 of the storage amount for the DB
                                cluster.
                          format: int64
                          type: integer
                        kmsKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier for an encrypted DB cluster.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
                            Web Services account, specify the key ARN or alias ARN.

                            When a KMS key isn't specified in KmsKeyId:

                              - If ReplicationSourceIdentifier identifies an encrypted source, then
                                Amazon RDS uses the KMS key used to encrypt the source. Otherwise, Amazon
                                RDS uses your default KMS key.

                              - If the StorageEncrypted parameter is enabled and ReplicationSourceIdentifier
                                isn't specified, then Amazon RDS uses your default KMS key.

                            There is a default KMS key for your Amazon Web Services account. Your Amazon
                            Web Services account has a different default KMS key for each Amazon Web
                            Services Region.

                            If you create a read replica of an encrypted DB cluster in another Amazon
                            Web Services Region, make sure to set KmsKeyId to a KMS key identifier that
                            is valid in the destination Amazon Web Services Region. This KMS key is used
                            to encrypt the read replica in that Amazon Web Services Region.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        kmsKeyRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        manageMasterUserPassword:
                          description: |-
                            Specifies whether to manage the master user password with Amazon Web Services
                            Secrets Manager.

                            For more information, see Password management with Amazon Web Services Secrets
                            Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
                            in the Amazon RDS User Guide and Password management with Amazon Web Services
                            Secrets Manager (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html)
                            in the Amazon Aurora User Guide.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - Can't manage the master user password with Amazon Web Services Secrets
                                Manager if MasterUserPassword is specified.
                          type: boolean
                        masterUserPassword:
                          description: |-
                            The password for the master database user.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - Must contain from 8 to 41 characters.

                              - Can contain any printable ASCII character except "/", """, or "@".

                              - Can't be specified if ManageMasterUserPassword is turned on.
                          properties:
                            key:
                              description: Key is the key within the secret
                              type: string
                            name:
                              description: name is unique within a namespace to reference a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which the secret name must be unique.
                              type: string
                          required:
                            - key
                          type: object
                          x-kubernetes-map-type: atomic
                        masterUserSecretKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier to encrypt a secret that is automatically
                            generated and managed in Amazon Web Services Secrets Manager.

                            This setting is valid only if the master user password is managed by RDS
                            in Amazon Web Services Secrets Manager for the DB cluster.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
                            Web Services account, specify the key ARN or alias ARN.

                            If you don't specify MasterUserSecretKmsKeyId, then the aws/secretsmanager
                            KMS key is used to encrypt the secret. If the secret is in a different Amazon
                            Web Services account, then you can't use the aws/secretsmanager KMS key to
                            encrypt the secret, and you must use a customer managed KMS key.

                            There is a default KMS key for your Amazon Web Services account. Your Amazon
                            Web Services account has a different default KMS key for each Amazon Web
                            Services Region.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        masterUserSecretKMSKeyRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        masterUsername:
                          description: |-
                            The name of the master user for the DB cluster.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - Must be 1 to 16 letters or numbers.

                              - First character must be a letter.

                              - Can't be a reserved word for the chosen database engine.
                          type: string
                        monitoringInterval:
                          description: |-
                            The interval, in seconds, between points when Enhanced Monitoring metrics
                            are collected for the DB cluster. To turn off collecting Enhanced Monitoring
                            metrics, specify 0.

                            If MonitoringRoleArn is specified, also set MonitoringInterval to a value
                            other than 0.

                            Valid for Cluster Type: Multi-AZ DB clusters only

                            Valid Values: 0 | 1 | 5 | 10 | 15 | 30 | 60

                            Default: 0
                          format: int64
                          type: integer
                        monitoringRoleARN:
                          description: |-
                            The Amazon Resource Name (ARN) for the IAM role that permits RDS to send
                            Enhanced Monitoring metrics to Amazon CloudWatch Logs. An example is arn:aws:iam:123456789012:role/emaccess.
                            For information on creating a monitoring role, see Setting up and enabling
                            Enhanced Monitoring (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
                            in the Amazon RDS User Guide.

                            If MonitoringInterval is set to a value other than 0, supply a MonitoringRoleArn
                            value.

                            Valid for Cluster Type: Multi-AZ DB clusters only
                          type: string
                        networkType:
                          description: |-
                            The network type of the DB cluster.

                            The network type is determined by the DBSubnetGroup specified for the DB
                            cluster. A DBSubnetGroup can support only the IPv4 protocol or the IPv4 and
                            the IPv6 protocols (DUAL).

                            For more information, see Working with a DB instance in a VPC (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html)
                            in the Amazon Aurora User Guide.

                            Valid for Cluster Type: Aurora DB clusters only

                            Valid Values: IPV4 | DUAL
                          type: string
                        optionGroupName:
                          description: |-
                            The option group to associate the DB cluster with.

                            DB clusters are associated with a default option group that can't be modified.
                          type: string
                        performanceInsightsKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier for encryption of Performance
                            Insights data.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key.

                            If you don't specify a value for PerformanceInsightsKMSKeyId, then Amazon
                            RDS uses your default KMS key. There is a default KMS key for your Amazon
                            Web Services account. Your Amazon Web Services account has a different default
                            KMS key for each Amazon Web Services Region.

                            Valid for Cluster Type: Multi-AZ DB clusters only
                          type: string
                        performanceInsightsRetentionPeriod:
                          description: |-
                            The number of days to retain Performance Insights data.

                            Valid for Cluster Type: Multi-AZ DB clusters only

                            Valid Values:

                              - 7

                              - month * 31, where month is a number of months from 1-23. Examples: 93
                                (3 months * 31), 341 (11 months * 31), 589 (19 months * 31)

                              - 731

                            Default: 7 days

                            If you specify a retention period that isn't valid, such as 94, Amazon RDS
                            issues an error.
                          format: int64
                          type: integer
                        port:
                          description: |-
                            The port number on which the instances in the DB cluster accept connections.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Valid Values: 1150-65535

                            Default:

                              - RDS for MySQL and Aurora MySQL - 3306

                              - RDS for PostgreSQL and Aurora PostgreSQL - 5432
                          format: int64
                          type: integer
                        preSignedURL:
                          description: |-
                            When you are replicating a DB cluster from one Amazon Web Services GovCloud
                            (US) Region to another, an URL that contains a Signature Version 4 signed
                            request for the CreateDBCluster operation to be called in the source Amazon
                            Web Services Region where the DB cluster is replicated from. Specify PreSignedUrl
                            only when you are performing cross-Region replication from an encrypted DB
                            cluster.

                            The presigned URL must be a valid request for the CreateDBCluster API operation
                            that can run in the source Amazon Web Services Region that contains the encrypted
                            DB cluster to copy.

                            The presigned URL request must contain the following parameter values:

                              - KmsKeyId - The KMS key identifier for the KMS key to use to encrypt
                                the copy of the DB cluster in the destination Amazon Web Services Region.
                                This should refer to the same KMS key for both the CreateDBCluster operation
                                that is called in the destination Amazon Web Services Region, and the
                                operation contained in the presigned URL.

                              - DestinationRegion - The name of the Amazon Web Services Region that
                                Aurora read replica will be created in.

                              - ReplicationSourceIdentifier - The DB cluster identifier for the encrypted
                                DB cluster to be copied. This identifier must be in the Amazon Resource
                                Name (ARN) format for the source Amazon Web Services Region. For example,
                                if you are copying an encrypted DB cluster from the us-west-2 Amazon Web
                                Services Region, then your ReplicationSourceIdentifier would look like
                                Example: arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1.

                            To learn how to generate a Signature Version 4 signed request, see Authenticating
                            Requests: Using Query Parameters (Amazon Web Services Signature Version 4)
                            (https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html)
                            and Signature Version 4 Signing Process (https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).

                            If you are using an Amazon Web Services SDK tool or the CLI, you can specify
                            SourceRegion (or --source-region for the CLI) instead of specifying PreSignedUrl
                            manually. Specifying SourceRegion autogenerates a presigned URL that is a
                            valid request for the operation that can run in the source Amazon Web Services
                            Region.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        preferredBackupWindow:
                          description: |-
                            The daily time range during which automated backups are created if automated
                            backups are enabled using the BackupRetentionPeriod parameter.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            The default is a 30-minute window selected at random from an 8-hour block
                            of time for each Amazon Web Services Region. To view the time blocks available,
                            see Backup window (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow)
                            in the Amazon Aurora User Guide.

                            Constraints:

                              - Must be in the format hh24:mi-hh24:mi.

                              - Must be in Universal Coordinated Time (UTC).

                              - Must not conflict with the preferred maintenance window.

                              - Must be at least 30 minutes.
                          type: string
                        preferredMaintenanceWindow:
                          description: |-
                            The weekly time range during which system maintenance can occur.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            The default is a 30-minute window selected at random from an 8-hour block
                            of time for each Amazon Web Services Region, occurring on a random day of
                            the week. To see the time blocks available, see Adjusting the Preferred DB
                            Cluster Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora)
                            in the Amazon Aurora User Guide.

                            Constraints:

                              - Must be in the format ddd:hh24:mi-ddd:hh24:mi.

                              - Days must be one of Mon | Tue | Wed | Thu | Fri | Sat | Sun.

                              - Must be in Universal Coordinated Time (UTC).

                              - Must be at least 30 minutes.
                          type: string
                        publiclyAccessible:
                          description: |-
                            Specifies whether the DB cluster is publicly accessible.

                            When the DB cluster is publicly accessible and you connect from outside of
                            the DB cluster's virtual private cloud (VPC), its Domain Name System (DNS)
                            endpoint resolves to the public IP address. When you connect from within
                            the same VPC as the DB cluster, the endpoint resolves to the private IP address.
                            Access to the DB cluster is ultimately controlled by the security group it
                            uses. That public access isn't permitted if the security group assigned to
                            the DB cluster doesn't permit it.

                            When the DB cluster isn't publicly accessible, it is an internal DB cluster
                            with a DNS name that resolves to a private IP address.

                            Valid for Cluster Type: Multi-AZ DB clusters only

                            Default: The default behavior varies depending on whether DBSubnetGroupName
                            is specified.

                            If DBSubnetGroupName isn't specified, and PubliclyAccessible isn't specified,
                            the following applies:

                              - If the default VPC in the target Region doesn’t have an internet gateway
                                attached to it, the DB cluster is private.

                              - If the default VPC in the target Region has an internet gateway attached
                                to it, the DB cluster is public.

                            If DBSubnetGroupName is specified, and PubliclyAccessible isn't specified,
                            the following applies:

                              - If the subnets are part of a VPC that doesn’t have an internet gateway
                                attached to it, the DB cluster is private.

                              - If the subnets are part of a VPC that has an internet gateway attached
                                to it, the DB cluster is public.
                          type: boolean
                        replicationSourceIdentifier:
                          description: |-
                            The Amazon Resource Name (ARN) of the source DB instance or DB cluster if
                            this DB cluster is created as a read replica.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        restoreToTime:
                          description: |-
                            The date and time to restore the DB cluster to.

                            Valid Values: Value must be a time in Universal Coordinated Time (UTC) format

                            Constraints:

                              - Must be before the latest restorable time for the DB instance

                              - Must be specified if UseLatestRestorableTime parameter isn't provided

                              - Can't be specified if the UseLatestRestorableTime parameter is enabled

                              - Can't be specified if the RestoreType parameter is copy-on-write

                            Example: 2015-03-07T23:45:00Z

                            Valid for: Aurora DB clusters and Multi-AZ DB clusters
                          format: date-time
                          type: string
                        restoreType:
                          description: |-
                            The type of restore to be performed. You can specify one of the following
                            values:

                              - full-copy - The new DB cluster is restored as a full copy of the source
                                DB cluster.

                              - copy-on-write - The new DB cluster is restored as a clone of the source
                                DB cluster.

                            If you don't specify a RestoreType value, then the new DB cluster is restored
                            as a full copy of the source DB cluster.

                            Valid for: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        scalingConfiguration:
                          description: |-
                            For DB clusters in serverless DB engine mode, the scaling properties of the
                            DB cluster.

                            Valid for Cluster Type: Aurora DB clusters only
                          properties:
                            autoPause:
                              type: boolean
                            maxCapacity:
                              format: int64
                              type: integer
                            minCapacity:
                              format: int64
                              type: integer
                            secondsBeforeTimeout:
                              format: int64
                              type: integer
                            secondsUntilAutoPause:
                              format: int64
                              type: integer
                            timeoutAction:
                              type: string
                          type: object
                        serverlessV2ScalingConfiguration:
                          description: |-
                            Contains the scaling configuration of an Aurora Serverless v2 DB cluster.

                            For more information, see Using Amazon Aurora Serverless v2 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html)
                            in the Amazon Aurora User Guide.
                          properties:
                            maxCapacity:
                              type: number
                            minCapacity:
                              type: number
                            secondsUntilAutoPause:
                              format: int64
                              type: integer
                          type: object
                        snapshotIdentifier:
                          description: |-
                            The identifier for the DB snapshot or DB cluster snapshot to restore from.

                            You can use either the name or the Amazon Resource Name (ARN) to specify
                            a DB cluster snapshot. However, you can use only the ARN to specify a DB
                            snapshot.

                            Constraints:

                              - Must match the identifier of an existing Snapshot.

                            Valid for: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        sourceDBClusterIdentifier:
                          description: |-
                            The identifier of the source DB cluster from which to restore.

                            Constraints:

                              - Must match the identifier of an existing DBCluster.

                            Valid for: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        sourceRegion:
                          description: |-
                            SourceRegion is the source region where the resource exists. This is not
                            sent over the wire and is only used for presigning. This value should always
                            have the same region as the source ARN.
                          type: string
                        storageEncrypted:
                          description: |-
                            Specifies whether the DB cluster is encrypted.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: boolean
                        storageType:
                          description: |-
                            The storage type to associate with the DB cluster.

                            For information on storage types for Aurora DB clusters, see Storage configurations
                            for Amazon Aurora DB clusters (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.StorageReliability.html#aurora-storage-type).
                            For information on storage types for Multi-AZ DB clusters, see Settings for
                            creating Multi-AZ DB clusters (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/create-multi-az-db-cluster.html#create-multi-az-db-cluster-settings).

                            This setting is required to create a Multi-AZ DB cluster.

                            When specified for a Multi-AZ DB cluster, a value for the Iops parameter
                            is required.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Valid Values:

                              - Aurora DB clusters - aurora | aurora-iopt1

                              - Multi-AZ DB clusters - io1 | io2 | gp3

                            Default:

                              - Aurora DB clusters - aurora

                              - Multi-AZ DB clusters - io1

                            When you create an Aurora DB cluster with the storage type set to aurora-iopt1,
                            the storage type is returned in the response. The storage type isn't returned
                            when you set it to aurora.
                          type: string
                        tags:
                          description: |-
                            Tags to assign to the DB cluster.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        useLatestRestorableTime:
                          description: |-
                            Specifies whether to restore the DB cluster to the latest restorable backup
                            time. By default, the DB cluster isn't restored to the latest restorable
                            backup time.

                            Constraints: Can't be specified if RestoreToTime parameter is provided.

                            Valid for: Aurora DB clusters and Multi-AZ DB clusters
                          type: boolean
                        vpcSecurityGroupIDs:
                          description: |-
                            A list of EC2 VPC security groups to associate with this DB cluster.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          items:
                            type: string
                          type: array
                        vpcSecurityGroupRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                      required:
                        - dbClusterIdentifier
                        - engine
                      type: object
                    status:
                      description: DBClusterStatus defines the observed state of DBCluster
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        activityStreamKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier used for encrypting messages in
                            the database activity stream.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key.
                          type: string
                        activityStreamKinesisStreamName:
                          description: |-
                            The name of the Amazon Kinesis data stream used for the database activity
                            stream.
                          type: string
                        activityStreamMode:
                          description: |-
                            The mode of the database activity stream. Database events such as a change
                            or access generate an activity stream event. The database session can handle
                            these events either synchronously or asynchronously.
                          type: string
                        activityStreamStatus:
                          description: The status of the database activity stream.
                          type: string
                        associatedRoles:
                          description: |-
                            A list of the Amazon Web Services Identity and Access Management (IAM) roles
                            that are associated with the DB cluster. IAM roles that are associated with
                            a DB cluster grant permission for the DB cluster to access other Amazon Web
                            Services on your behalf.
                          items:
                            description: |-
                              Describes an Amazon Web Services Identity and Access Management (IAM) role
                              that is associated with a DB cluster.
                            properties:
                              featureName:
                                type: string
                              roleARN:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        automaticRestartTime:
                          description: The time when a stopped DB cluster is restarted automatically.
                          format: date-time
                          type: string
                        backtrackConsumedChangeRecords:
                          description: The number of change records stored for Backtrack.
                          format: int64
                          type: integer
                        capacity:
                          description: |-
                            The current capacity of an Aurora Serverless v1 DB cluster. The capacity
                            is 0 (zero) when the cluster is paused.

                            For more information about Aurora Serverless v1, see Using Amazon Aurora
                            Serverless v1 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html)
                            in the Amazon Aurora User Guide.
                          format: int64
                          type: integer
                        cloneGroupID:
                          description: The ID of the clone group with which the DB cluster is associated.
                          type: string
                        clusterCreateTime:
                          description: The time when the DB cluster was created, in Universal Coordinated Time (UTC).
                          format: date-time
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        crossAccountClone:
                          description: |-
                            Indicates whether the DB cluster is a clone of a DB cluster owned by a different
                            Amazon Web Services account.
                          type: boolean
                        customEndpoints:
                          description: The custom endpoints associated with the DB cluster.
                          items:
                            type: string
                          type: array
                        dbClusterMembers:
                          description: The list of DB instances that make up the DB cluster.
                          items:
                            description: Contains information about an instance that is part of a DB cluster.
                            properties:
                              dbClusterParameterGroupStatus:
                                type: string
                              dbInstanceIdentifier:
                                type: string
                              isClusterWriter:
                                type: boolean
                              promotionTier:
                                format: int64
                                type: integer
                            type: object
                          type: array
                        dbClusterOptionGroupMemberships:
                          description: The list of option group memberships for this DB cluster.
                          items:
                            description: Contains status information for a DB cluster option group.
                            properties:
                              dbClusterOptionGroupName:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        dbClusterParameterGroup:
                          description: The name of the DB cluster parameter group for the DB cluster.
                          type: string
                        dbClusterResourceID:
                          description: |-
                            The Amazon Web Services Region-unique, immutable identifier for the DB cluster.
                            This identifier is found in Amazon Web Services CloudTrail log entries whenever
                            the KMS key for the DB cluster is accessed.
                          type: string
                        dbSubnetGroup:
                          description: |-
                            Information about the subnet group associated with the DB cluster, including
                            the name, description, and subnets in the subnet group.
                          type: string
                        domainMemberships:
                          description: The Active Directory Domain membership records associated with the DB cluster.
                          items:
                            description: |-
                              An Active Directory Domain membership record associated with the DB instance
                              or cluster.
                            properties:
                              domain:
                                type: string
                              fQDN:
                                type: string
                              iamRoleName:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        earliestBacktrackTime:
                          description: The earliest time to which a DB cluster can be backtracked.
                          format: date-time
                          type: string
                        earliestRestorableTime:
                          description: |-
                            The earliest time to which a database can be restored with point-in-time
                            restore.
                          format: date-time
                          type: string
                        enabledCloudwatchLogsExports:
                          description: |-
                            A list of log types that this DB cluster is configured to export to CloudWatch
                            Logs.

                            Log types vary by DB engine. For information about the log types for each
                            DB engine, see Amazon RDS Database Log Files (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html)
                            in the Amazon Aurora User Guide.
                          items:
                            type: string
                          type: array
                        endpoint:
                          description: The connection endpoint for the primary instance of the DB cluster.
                          type: string
                        globalWriteForwardingRequested:
                          description: |-
                            Indicates whether write forwarding is enabled for a secondary cluster in
                            an Aurora global database. Because write forwarding takes time to enable,
                            check the value of GlobalWriteForwardingStatus to confirm that the request
                            has completed before using the write forwarding feature for this cluster.
                          type: boolean
                        globalWriteForwardingStatus:
                          description: |-
                            The status of write forwarding for a secondary cluster in an Aurora global
                            database.
                          type: string
                        hostedZoneID:
                          description: The ID that Amazon Route 53 assigns when you create a hosted zone.
                          type: string
                        httpEndpointEnabled:
                          description: |-
                            Indicates whether the HTTP endpoint is enabled for an Aurora DB cluster.

                            When enabled, the HTTP endpoint provides a connectionless web service API
                            (RDS Data API) for running SQL queries on the DB cluster. You can also query
                            your database from inside the RDS console with the RDS query editor.

                            For more information, see Using RDS Data API (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html)
                            in the Amazon Aurora User Guide.
                          type: boolean
                        iamDatabaseAuthenticationEnabled:
                          description: |-
                            Indicates whether the mapping of Amazon Web Services Identity and Access
                            Management (IAM) accounts to database accounts is enabled.
                          type: boolean
                        latestRestorableTime:
                          description: The latest time to which a database can be restored with point-in-time restore.
                          format: date-time
                          type: string
                        masterUserSecret:
                          description: |-
                            The secret managed by RDS in Amazon Web Services Secrets Manager for the
                            master user password.

                            For more information, see Password management with Amazon Web Services Secrets
                            Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
                            in the Amazon RDS User Guide and Password management with Amazon Web Services
                            Secrets Manager (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html)
                            in the Amazon Aurora User Guide.
                          properties:
                            kmsKeyID:
                              type: string
                            secretARN:
                              type: string
                            secretStatus:
                              type: string
                          type: object
                        multiAZ:
                          description: Indicates whether the DB cluster has instances in multiple Availability Zones.
                          type: boolean
                        pendingModifiedValues:
                          description: |-
                            Information about pending changes to the DB cluster. This information is
                            returned only when there are pending changes. Specific changes are identified
                            by subelements.
                          properties:
                            allocatedStorage:
                              format: int64
                              type: integer
                            backupRetentionPeriod:
                              format: int64
                              type: integer
                            dbClusterIdentifier:
                              type: string
                            engineVersion:
                              type: string
                            iamDatabaseAuthenticationEnabled:
                              type: boolean
                            iops:
                              format: int64
                              type: integer
                            masterUserPassword:
                              type: string
                            pendingCloudwatchLogsExports:
                              description: |-
                                A list of the log types whose configuration is still pending. In other words,
                                these log types are in the process of being activated or deactivated.
                              properties:
                                logTypesToDisable:
                                  items:
                                    type: string
                                  type: array
                                logTypesToEnable:
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        percentProgress:
                          description: The progress of the operation as a percentage.
                          type: string
                        performanceInsightsEnabled:
                          description: |-
                            Indicates whether Performance Insights is enabled for the DB cluster.

                            This setting is only for non-Aurora Multi-AZ DB clusters.
                          type: boolean
                        readReplicaIdentifiers:
                          description: |-
                            Contains one or more identifiers of the read replicas associated with this
                            DB cluster.
                          items:
                            type: string
                          type: array
                        readerEndpoint:
                          description: |-
                            The reader endpoint for the DB cluster. The reader endpoint for a DB cluster
                            load-balances connections across the Aurora Replicas that are available in
                            a DB cluster. As clients request new connections to the reader endpoint,
                            Aurora distributes the connection requests among the Aurora Replicas in the
                            DB cluster. This functionality can help balance your read workload across
                            multiple Aurora Replicas in your DB cluster.

                            If a failover occurs, and the Aurora Replica that you are connected to is
                            promoted to be the primary instance, your connection is dropped. To continue
                            sending your read workload to other Aurora Replicas in the cluster, you can
                            then reconnect to the reader endpoint.
                          type: string
                        status:
                          description: The current state of this DB cluster.
                          type: string
                        tagList:
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcSecurityGroups:
                          description: The list of VPC security groups that the DB cluster belongs to.
                          items:
                            description: |-
                              This data type is used as a response element for queries on VPC security
                              group membership.
                            properties:
                              status:
                                type: string
                              vpcSecurityGroupID:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbclustersnapshots-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbclustersnapshots.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBClusterSnapshot
            listKind: DBClusterSnapshotList
            plural: dbclustersnapshots
            singular: dbclustersnapshot
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBClusterSnapshot is the Schema for the DBClusterSnapshots API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBClusterSnapshotSpec defines the desired state of DBClusterSnapshot.

                        # Contains the details for an Amazon RDS DB cluster snapshot

                        This data type is used as a response element in the DescribeDBClusterSnapshots
                        action.
                      properties:
                        dbClusterIdentifier:
                          description: |-
                            The identifier of the DB cluster to create a snapshot for. This parameter
                            isn't case-sensitive.

                            Constraints:

                              - Must match the identifier of an existing DBCluster.

                            Example: my-cluster1
                          type: string
                        dbClusterIdentifierRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        dbClusterSnapshotIdentifier:
                          description: |-
                            The identifier of the DB cluster snapshot. This parameter is stored as a
                            lowercase string.

                            Constraints:

                              - Must contain from 1 to 63 letters, numbers, or hyphens.

                              - First character must be a letter.

                              - Can't end with a hyphen or contain two consecutive hyphens.

                            Example: my-cluster1-snapshot1
                          type: string
                        tags:
                          description: The tags to be assigned to the DB cluster snapshot.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - dbClusterSnapshotIdentifier
                      type: object
                    status:
                      description: DBClusterSnapshotStatus defines the observed state of DBClusterSnapshot
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        allocatedStorage:
                          description: The allocated storage size of the DB cluster snapshot in gibibytes (GiB).
                          format: int64
                          type: integer
                        availabilityZones:
                          description: |-
                            The list of Availability Zones (AZs) where instances in the DB cluster snapshot
                            can be restored.
                          items:
                            type: string
                          type: array
                        clusterCreateTime:
                          description: The time when the DB cluster was created, in Universal Coordinated Time (UTC).
                          format: date-time
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        dbSystemID:
                          description: Reserved for future use.
                          type: string
                        engine:
                          description: The name of the database engine for this DB cluster snapshot.
                          type: string
                        engineMode:
                          description: The engine mode of the database engine for this DB cluster snapshot.
                          type: string
                        engineVersion:
                          description: The version of the database engine for this DB cluster snapshot.
                          type: string
                        iamDatabaseAuthenticationEnabled:
                          description: |-
                            Indicates whether mapping of Amazon Web Services Identity and Access Management
                            (IAM) accounts to database accounts is enabled.
                          type: boolean
                        kmsKeyID:
                          description: |-
                            If StorageEncrypted is true, the Amazon Web Services KMS key identifier for
                            the encrypted DB cluster snapshot.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key.
                          type: string
                        licenseModel:
                          description: The license model information for this DB cluster snapshot.
                          type: string
                        masterUsername:
                          description: The master username for this DB cluster snapshot.
                          type: string
                        percentProgress:
                          description: The percentage of the estimated data that has been transferred.
                          format: int64
                          type: integer
                        port:
                          description: The port that the DB cluster was listening on at the time of the snapshot.
                          format: int64
                          type: integer
                        snapshotCreateTime:
                          description: The time when the snapshot was taken, in Universal Coordinated Time (UTC).
                          format: date-time
                          type: string
                        snapshotType:
                          description: The type of the DB cluster snapshot.
                          type: string
                        sourceDBClusterSnapshotARN:
                          description: |-
                            If the DB cluster snapshot was copied from a source DB cluster snapshot,
                            the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise,
                            a null value.
                          type: string
                        status:
                          description: |-
                            The status of this DB cluster snapshot. Valid statuses are the following:

                               * available

                               * copying

                               * creating
                          type: string
                        storageEncrypted:
                          description: Indicates whether the DB cluster snapshot is encrypted.
                          type: boolean
                        tagList:
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The VPC ID associated with the DB cluster snapshot.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbinstances-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbinstances.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBInstance
            listKind: DBInstanceList
            plural: dbinstances
            singular: dbinstance
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.dbInstanceStatus
                  name: STATUS
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBInstance is the Schema for the DBInstances API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBInstanceSpec defines the desired state of DBInstance.

                        Contains the details of an Amazon RDS DB instance.

                        This data type is used as a response element in the operations CreateDBInstance,
                        CreateDBInstanceReadReplica, DeleteDBInstance, DescribeDBInstances, ModifyDBInstance,
                        PromoteReadReplica, RebootDBInstance, RestoreDBInstanceFromDBSnapshot, RestoreDBInstanceFromS3,
                        RestoreDBInstanceToPointInTime, StartDBInstance, and StopDBInstance.
                      properties:
                        allocatedStorage:
                          description: |-
                            The amount of storage in gibibytes (GiB) to allocate for the DB instance.

                            This setting doesn't apply to Amazon Aurora DB instances. Aurora cluster
                            volumes automatically grow as the amount of data in your database increases,
                            though you are only charged for the space that you use in an Aurora cluster
                            volume.

                            # Amazon RDS Custom

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Must be an integer from 40
                                to 65536 for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 40 to 65536
                                for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.

                            # RDS for Db2

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp3): Must be an integer from 20 to 65536.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
                                65536.

                            # RDS for MariaDB

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
                                to 65536.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
                                65536.

                              - Magnetic storage (standard): Must be an integer from 5 to 3072.

                            # RDS for MySQL

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
                                to 65536.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
                                65536.

                              - Magnetic storage (standard): Must be an integer from 5 to 3072.

                            # RDS for Oracle

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
                                to 65536.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
                                65536.

                              - Magnetic storage (standard): Must be an integer from 10 to 3072.

                            # RDS for PostgreSQL

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
                                to 65536.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
                                65536.

                              - Magnetic storage (standard): Must be an integer from 5 to 3072.

                            # RDS for SQL Server

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Enterprise and Standard editions:
                                Must be an integer from 20 to 16384. Web and Express editions: Must be
                                an integer from 20 to 16384.

                              - Provisioned IOPS storage (io1, io2): Enterprise and Standard editions:
                                Must be an integer from 100 to 16384. Web and Express editions: Must be
                                an integer from 100 to 16384.

                              - Magnetic storage (standard): Enterprise and Standard editions: Must
                                be an integer from 20 to 1024. Web and Express editions: Must be an integer
                                from 20 to 1024.
                          format: int64
                          type: integer
                        autoMinorVersionUpgrade:
                          description: |-
                            Specifies whether minor engine upgrades are applied automatically to the
                            DB instance during the maintenance window. By default, minor engine upgrades
                            are applied automatically.

                            If you create an RDS Custom DB instance, you must set AutoMinorVersionUpgrade
                            to false.
                          type: boolean
                        availabilityZone:
                          description: |-
                            The Availability Zone (AZ) where the database will be created. For information
                            on Amazon Web Services Regions and Availability Zones, see Regions and Availability
                            Zones (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).

                            For Amazon Aurora, each Aurora DB cluster hosts copies of its storage in
                            three separate Availability Zones. Specify one of these Availability Zones.
                            Aurora automatically chooses an appropriate Availability Zone if you don't
                            specify one.

                            Default: A random, system-chosen Availability Zone in the endpoint's Amazon
                            Web Services Region.

                            Constraints:

                              - The AvailabilityZone parameter can't be specified if the DB instance
                                is a Multi-AZ deployment.

                              - The specified Availability Zone must be in the same Amazon Web Services
                                Region as the current endpoint.

                            Example: us-east-1d
                          type: string
                          x-kubernetes-validations:
                            - message: Value is immutable once set
                              rule: self == oldSelf
                        backupRetentionPeriod:
                          description: |-
                            The number of days for which automated backups are retained. Setting this
                            parameter to a positive number enables backups. Setting this parameter to
                            0 disables automated backups.

                            This setting doesn't apply to Amazon Aurora DB instances. The retention period
                            for automated backups is managed by the DB cluster.

                            Default: 1

                            Constraints:

                              - Must be a value from 0 to 35.

                              - Can't be set to 0 if the DB instance is a source to read replicas.

                              - Can't be set to 0 for an RDS Custom for Oracle DB instance.
                          format: int64
                          type: integer
                        backupTarget:
                          description: |-
                            The location for storing automated backups and manual snapshots.

                            Valid Values:

                              - outposts (Amazon Web Services Outposts)

                              - region (Amazon Web Services Region)

                            Default: region

                            For more information, see Working with Amazon RDS on Amazon Web Services
                            Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
                            in the Amazon RDS User Guide.
                          type: string
                        caCertificateIdentifier:
                          description: |-
                            The CA certificate identifier to use for the DB instance's server certificate.

                            This setting doesn't apply to RDS Custom DB instances.

                            For more information, see Using SSL/TLS to encrypt a connection to a DB instance
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html)
                            in the Amazon RDS User Guide and Using SSL/TLS to encrypt a connection to
                            a DB cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html)
                            in the Amazon Aurora User Guide.
                          type: string
                        characterSetName:
                          description: |-
                            For supported engines, the character set (CharacterSet) to associate the
                            DB instance with.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora - The character set is managed by the DB cluster. For
                                more information, see CreateDBCluster.

                              - RDS Custom - However, if you need to change the character set, you can
                                change it on the database itself.
                          type: string
                        copyTagsToSnapshot:
                          description: |-
                            Specifies whether to copy tags from the DB instance to snapshots of the DB
                            instance. By default, tags are not copied.

                            This setting doesn't apply to Amazon Aurora DB instances. Copying tags to
                            snapshots is managed by the DB cluster. Setting this value for an Aurora
                            DB instance has no effect on the DB cluster setting.
                          type: boolean
                        customIAMInstanceProfile:
                          description: |-
                            The instance profile associated with the underlying Amazon EC2 instance of
                            an RDS Custom DB instance.

                            This setting is required for RDS Custom.

                            Constraints:

                              - The profile must exist in your account.

                              - The profile must have an IAM role that Amazon EC2 has permissions to
                                assume.

                              - The instance profile name and the associated IAM role name must start
                                with the prefix AWSRDSCustom.

                            For the list of permissions required for the IAM role, see Configure IAM
                            and your VPC (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc)
                            in the Amazon RDS User Guide.
                          type: string
                        databaseInsightsMode:
                          description: Specifies the mode of Database Insights to enable for the instance.
                          type: string
                        dbClusterIdentifier:
                          description: |-
                            The identifier of the DB cluster that this DB instance will belong to.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        dbClusterSnapshotIdentifier:
                          description: |-
                            The identifier for the Multi-AZ DB cluster snapshot to restore from.

                            For more information on Multi-AZ DB clusters, see Multi-AZ DB cluster deployments
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html)
                            in the Amazon RDS User Guide.

                            Constraints:

                              - Must match the identifier of an existing Multi-AZ DB cluster snapshot.

                              - Can't be specified when DBSnapshotIdentifier is specified.

                              - Must be specified when DBSnapshotIdentifier isn't specified.

                              - If you are restoring from a shared manual Multi-AZ DB cluster snapshot,
                                the DBClusterSnapshotIdentifier must be the ARN of the shared snapshot.

                              - Can't be the identifier of an Aurora DB cluster snapshot.
                          type: string
                        dbInstanceClass:
                          description: |-
                            The compute and memory capacity of the DB instance, for example db.m5.large.
                            Not all DB instance classes are available in all Amazon Web Services Regions,
                            or for all database engines. For the full list of DB instance classes, and
                            availability for your engine, see DB instance classes (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
                            in the Amazon RDS User Guide or Aurora DB instance classes (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html)
                            in the Amazon Aurora User Guide.
                          type: string
                        dbInstanceIdentifier:
                          description: |-
                            The identifier for this DB instance. This parameter is stored as a lowercase
                            string.

                            Constraints:

                              - Must contain from 1 to 63 letters, numbers, or hyphens.

                              - First character must be a letter.

                              - Can't end with a hyphen or contain two consecutive hyphens.

                            Example: mydbinstance
                          type: string
                        dbName:
                          description: |-
                            The meaning of this parameter differs according to the database engine you
                            use.

                            # Amazon Aurora MySQL

                            The name of the database to create when the primary DB instance of the Aurora
                            MySQL DB cluster is created. If this parameter isn't specified for an Aurora
                            MySQL DB cluster, no database is created in the DB cluster.

                            Constraints:

                              - Must contain 1 to 64 alphanumeric characters.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0-9).

                              - Can't be a word reserved by the database engine.

                            # Amazon Aurora PostgreSQL

                            The name of the database to create when the primary DB instance of the Aurora
                            PostgreSQL DB cluster is created. A database named postgres is always created.
                            If this parameter is specified, an additional database with this name is
                            created.

                            Constraints:

                              - It must contain 1 to 63 alphanumeric characters.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0 to 9).

                              - Can't be a word reserved by the database engine.

                            # Amazon RDS Custom for Oracle

                            The Oracle System ID (SID) of the created RDS Custom DB instance. If you
                            don't specify a value, the default value is ORCL for non-CDBs and RDSCDB
                            for CDBs.

                            Default: ORCL

                            Constraints:

                              - Must contain 1 to 8 alphanumeric characters.

                              - Must contain a letter.

                              - Can't be a word reserved by the database engine.

                            # Amazon RDS Custom for SQL Server

                            Not applicable. Must be null.

                            # RDS for Db2

                            The name of the database to create when the DB instance is created. If this
                            parameter isn't specified, no database is created in the DB instance. In
                            some cases, we recommend that you don't add a database name. For more information,
                            see Additional considerations (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-db-instance-prereqs.html#db2-prereqs-additional-considerations)
                            in the Amazon RDS User Guide.

                            Constraints:

                              - Must contain 1 to 64 letters or numbers.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0-9).

                              - Can't be a word reserved by the specified database engine.

                            # RDS for MariaDB

                            The name of the database to create when the DB instance is created. If this
                            parameter isn't specified, no database is created in the DB instance.

                            Constraints:

                              - Must contain 1 to 64 letters or numbers.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0-9).

                              - Can't be a word reserved by the specified database engine.

                            # RDS for MySQL

                            The name of the database to create when the DB instance is created. If this
                            parameter isn't specified, no database is created in the DB instance.

                            Constraints:

                              - Must contain 1 to 64 letters or numbers.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0-9).

                              - Can't be a word reserved by the specified database engine.

                            # RDS for Oracle

                            The Oracle System ID (SID) of the created DB instance. If you don't specify
                            a value, the default value is ORCL. You can't specify the string null, or
                            any other reserved word, for DBName.

                            Default: ORCL

                            Constraints:

                              - Can't be longer than 8 characters.

                            # RDS for PostgreSQL

                            The name of the database to create when the DB instance is created. A database
                            named postgres is always created. If this parameter is specified, an additional
                            database with this name is created.

                            Constraints:

                              - Must contain 1 to 63 letters, numbers, or underscores.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0-9).

                              - Can't be a word reserved by the specified database engine.

                            # RDS for SQL Server

                            Not applicable. Must be null.
                          type: string
                        dbParameterGroupName:
                          description: |-
                            The name of the DB parameter group to associate with this DB instance. If
                            you don't specify a value, then Amazon RDS uses the default DB parameter
                            group for the specified DB engine and version.

                            This setting doesn't apply to RDS Custom DB instances.

                            Constraints:

                              - Must be 1 to 255 letters, numbers, or hyphens.

                              - The first character must be a letter.

                              - Can't end with a hyphen or contain two consecutive hyphens.
                          type: string
                        dbParameterGroupRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        dbSnapshotIdentifier:
                          description: |-
                            The identifier for the DB snapshot to restore from.

                            Constraints:

                              - Must match the identifier of an existing DB snapshot.

                              - Can't be specified when DBClusterSnapshotIdentifier is specified.

                              - Must be specified when DBClusterSnapshotIdentifier isn't specified.

                              - If you are restoring from a shared manual DB snapshot, the DBSnapshotIdentifier
                                must be the ARN of the shared DB snapshot.
                          type: string
                        dbSubnetGroupName:
                          description: |-
                            A DB subnet group to associate with this DB instance.

                            Constraints:

                              - Must match the name of an existing DB subnet group.

                            Example: mydbsubnetgroup
                          type: string
                        dbSubnetGroupRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        deletionProtection:
                          description: |-
                            Specifies whether the DB instance has deletion protection enabled. The database
                            can't be deleted when deletion protection is enabled. By default, deletion
                            protection isn't enabled. For more information, see Deleting a DB Instance
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).

                            This setting doesn't apply to Amazon Aurora DB instances. You can enable
                            or disable deletion protection for the DB cluster. For more information,
                            see CreateDBCluster. DB instances in a DB cluster can be deleted even when
                            deletion protection is enabled for the DB cluster.
                          type: boolean
                        destinationRegion:
                          description: DestinationRegion is used for presigning the request to a given region.
                          type: string
                        domain:
                          description: |-
                            The Active Directory directory ID to create the DB instance in. Currently,
                            you can create only Db2, MySQL, Microsoft SQL Server, Oracle, and PostgreSQL
                            DB instances in an Active Directory Domain.

                            For more information, see Kerberos Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (The domain is managed by the DB cluster.)

                              - RDS Custom
                          type: string
                        domainIAMRoleName:
                          description: |-
                            The name of the IAM role to use when making API calls to the Directory Service.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (The domain is managed by the DB cluster.)

                              - RDS Custom
                          type: string
                        enableCloudwatchLogsExports:
                          description: |-
                            The list of log types to enable for exporting to CloudWatch Logs. For more
                            information, see Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (CloudWatch Logs exports are managed by the DB cluster.)

                              - RDS Custom

                            The following values are valid for each DB engine:

                              - RDS for Db2 - diag.log | notify.log

                              - RDS for MariaDB - audit | error | general | slowquery

                              - RDS for Microsoft SQL Server - agent | error

                              - RDS for MySQL - audit | error | general | slowquery

                              - RDS for Oracle - alert | audit | listener | trace | oemagent

                              - RDS for PostgreSQL - postgresql | upgrade
                          items:
                            type: string
                          type: array
                        enableCustomerOwnedIP:
                          description: |-
                            Specifies whether to enable a customer-owned IP address (CoIP) for an RDS
                            on Outposts DB instance.

                            A CoIP provides local or external connectivity to resources in your Outpost
                            subnets through your on-premises network. For some use cases, a CoIP can
                            provide lower latency for connections to the DB instance from outside of
                            its virtual private cloud (VPC) on your local network.

                            For more information about RDS on Outposts, see Working with Amazon RDS on
                            Amazon Web Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
                            in the Amazon RDS User Guide.

                            For more information about CoIPs, see Customer-owned IP addresses (https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing)
                            in the Amazon Web Services Outposts User Guide.
                          type: boolean
                        enableIAMDatabaseAuthentication:
                          description: |-
                            Specifies whether to enable mapping of Amazon Web Services Identity and Access
                            Management (IAM) accounts to database accounts. By default, mapping isn't
                            enabled.

                            For more information, see IAM Database Authentication for MySQL and PostgreSQL
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (Mapping Amazon Web Services IAM accounts to database
                                accounts is managed by the DB cluster.)

                              - RDS Custom
                          type: boolean
                        engine:
                          description: |-
                            The database engine to use for this DB instance.

                            Not every database engine is available in every Amazon Web Services Region.

                            Valid Values:

                              - aurora-mysql (for Aurora MySQL DB instances)

                              - aurora-postgresql (for Aurora PostgreSQL DB instances)

                              - custom-oracle-ee (for RDS Custom for Oracle DB instances)

                              - custom-oracle-ee-cdb (for RDS Custom for Oracle DB instances)

                              - custom-oracle-se2 (for RDS Custom for Oracle DB instances)

                              - custom-oracle-se2-cdb (for RDS Custom for Oracle DB instances)

                              - custom-sqlserver-ee (for RDS Custom for SQL Server DB instances)

                              - custom-sqlserver-se (for RDS Custom for SQL Server DB instances)

                              - custom-sqlserver-web (for RDS Custom for SQL Server DB instances)

                              - custom-sqlserver-dev (for RDS Custom for SQL Server DB instances)

                              - db2-ae

                              - db2-se

                              - mariadb

                              - mysql

                              - oracle-ee

                              - oracle-ee-cdb

                              - oracle-se2

                              - oracle-se2-cdb

                              - postgres

                              - sqlserver-ee

                              - sqlserver-se

                              - sqlserver-ex

                              - sqlserver-web
                          type: string
                        engineVersion:
                          description: |-
                            The version number of the database engine to use.

                            This setting doesn't apply to Amazon Aurora DB instances. The version number
                            of the database engine the DB instance uses is managed by the DB cluster.

                            For a list of valid engine versions, use the DescribeDBEngineVersions operation.

                            The following are the database engines and links to information about the
                            major and minor versions that are available with Amazon RDS. Not every database
                            engine is available for every Amazon Web Services Region.

                            # Amazon RDS Custom for Oracle

                            A custom engine version (CEV) that you have previously created. This setting
                            is required for RDS Custom for Oracle. The CEV name has the following format:
                            19.customized_string. A valid CEV name is 19.my_cev1. For more information,
                            see Creating an RDS Custom for Oracle DB instance (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-creating.html#custom-creating.create)
                            in the Amazon RDS User Guide.

                            # Amazon RDS Custom for SQL Server

                            See RDS Custom for SQL Server general requirements (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-reqs-limits-MS.html)
                            in the Amazon RDS User Guide.

                            # RDS for Db2

                            For information, see Db2 on Amazon RDS versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Db2.html#Db2.Concepts.VersionMgmt)
                            in the Amazon RDS User Guide.

                            # RDS for MariaDB

                            For information, see MariaDB on Amazon RDS versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
                            in the Amazon RDS User Guide.

                            # RDS for Microsoft SQL Server

                            For information, see Microsoft SQL Server versions on Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport)
                            in the Amazon RDS User Guide.

                            # RDS for MySQL

                            For information, see MySQL on Amazon RDS versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
                            in the Amazon RDS User Guide.

                            # RDS for Oracle

                            For information, see Oracle Database Engine release notes (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html)
                            in the Amazon RDS User Guide.

                            # RDS for PostgreSQL

                            For information, see Amazon RDS for PostgreSQL versions and extensions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts)
                            in the Amazon RDS User Guide.
                          type: string
                        iops:
                          description: |-
                            The amount of Provisioned IOPS (input/output operations per second) to initially
                            allocate for the DB instance. For information about valid IOPS values, see
                            Amazon RDS DB instance storage (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to Amazon Aurora DB instances. Storage is managed
                            by the DB cluster.

                            Constraints:

                              - For RDS for Db2, MariaDB, MySQL, Oracle, and PostgreSQL - Must be a
                                multiple between .5 and 50 of the storage amount for the DB instance.

                              - For RDS for SQL Server - Must be a multiple between 1 and 50 of the
                                storage amount for the DB instance.
                          format: int64
                          type: integer
                        kmsKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier for an encrypted DB instance.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
                            Web Services account, specify the key ARN or alias ARN.

                            This setting doesn't apply to Amazon Aurora DB instances. The Amazon Web
                            Services KMS key identifier is managed by the DB cluster. For more information,
                            see CreateDBCluster.

                            If StorageEncrypted is enabled, and you do not specify a value for the KmsKeyId
                            parameter, then Amazon RDS uses your default KMS key. There is a default
                            KMS key for your Amazon Web Services account. Your Amazon Web Services account
                            has a different default KMS key for each Amazon Web Services Region.

                            For Amazon RDS Custom, a KMS key is required for DB instances. For most RDS
                            engines, if you leave this parameter empty while enabling StorageEncrypted,
                            the engine uses the default KMS key. However, RDS Custom doesn't use the
                            default key when this parameter is empty. You must explicitly specify a key.
                          type: string
                        kmsKeyRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        licenseModel:
                          description: |-
                            The license model information for this DB instance.

                            License models for RDS for Db2 require additional configuration. The Bring
                            Your Own License (BYOL) model requires a custom parameter group and an Amazon
                            Web Services License Manager self-managed license. The Db2 license through
                            Amazon Web Services Marketplace model requires an Amazon Web Services Marketplace
                            subscription. For more information, see Amazon RDS for Db2 licensing options
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-licensing.html)
                            in the Amazon RDS User Guide.

                            The default for RDS for Db2 is bring-your-own-license.

                            This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.

                            Valid Values:

                              - RDS for Db2 - bring-your-own-license | marketplace-license

                              - RDS for MariaDB - general-public-license

                              - RDS for Microsoft SQL Server - license-included

                              - RDS for MySQL - general-public-license

                              - RDS for Oracle - bring-your-own-license | license-included

                              - RDS for PostgreSQL - postgresql-license
                          type: string
                        manageMasterUserPassword:
                          description: |-
                            Specifies whether to manage the master user password with Amazon Web Services
                            Secrets Manager.

                            For more information, see Password management with Amazon Web Services Secrets
                            Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
                            in the Amazon RDS User Guide.

                            Constraints:

                              - Can't manage the master user password with Amazon Web Services Secrets
                                Manager if MasterUserPassword is specified.
                          type: boolean
                        masterUserPassword:
                          description: |-
                            The password for the master user.

                            This setting doesn't apply to Amazon Aurora DB instances. The password for
                            the master user is managed by the DB cluster.

                            Constraints:

                              - Can't be specified if ManageMasterUserPassword is turned on.

                              - Can include any printable ASCII character except "/", """, or "@". For
                                RDS for Oracle, can't include the "&" (ampersand) or the "'" (single quotes)
                                character.

                            Length Constraints:

                              - RDS for Db2 - Must contain from 8 to 255 characters.

                              - RDS for MariaDB - Must contain from 8 to 41 characters.

                              - RDS for Microsoft SQL Server - Must contain from 8 to 128 characters.

                              - RDS for MySQL - Must contain from 8 to 41 characters.

                              - RDS for Oracle - Must contain from 8 to 30 characters.

                              - RDS for PostgreSQL - Must contain from 8 to 128 characters.
                          properties:
                            key:
                              description: Key is the key within the secret
                              type: string
                            name:
                              description: name is unique within a namespace to reference a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which the secret name must be unique.
                              type: string
                          required:
                            - key
                          type: object
                          x-kubernetes-map-type: atomic
                        masterUserSecretKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier to encrypt a secret that is automatically
                            generated and managed in Amazon Web Services Secrets Manager.

                            This setting is valid only if the master user password is managed by RDS
                            in Amazon Web Services Secrets Manager for the DB instance.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
                            Web Services account, specify the key ARN or alias ARN.

                            If you don't specify MasterUserSecretKmsKeyId, then the aws/secretsmanager
                            KMS key is used to encrypt the secret. If the secret is in a different Amazon
                            Web Services account, then you can't use the aws/secretsmanager KMS key to
                            encrypt the secret, and you must use a customer managed KMS key.

                            There is a default KMS key for your Amazon Web Services account. Your Amazon
                            Web Services account has a different default KMS key for each Amazon Web
                            Services Region.
                          type: string
                        masterUserSecretKMSKeyRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        masterUsername:
                          description: |-
                            The name for the master user.

                            This setting doesn't apply to Amazon Aurora DB instances. The name for the
                            master user is managed by the DB cluster.

                            This setting is required for RDS DB instances.

                            Constraints:

                              - Must be 1 to 16 letters, numbers, or underscores.

                              - First character must be a letter.

                              - Can't be a reserved word for the chosen database engine.
                          type: string
                        maxAllocatedStorage:
                          description: |-
                            The upper limit in gibibytes (GiB) to which Amazon RDS can automatically
                            scale the storage of the DB instance.

                            For more information about this setting, including limitations that apply
                            to it, see Managing capacity automatically with Amazon RDS storage autoscaling
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (Storage is managed by the DB cluster.)

                              - RDS Custom
                          format: int64
                          type: integer
                        monitoringInterval:
                          description: |-
                            The interval, in seconds, between points when Enhanced Monitoring metrics
                            are collected for the DB instance. To disable collection of Enhanced Monitoring
                            metrics, specify 0.

                            If MonitoringRoleArn is specified, then you must set MonitoringInterval to
                            a value other than 0.

                            This setting doesn't apply to RDS Custom DB instances.

                            Valid Values: 0 | 1 | 5 | 10 | 15 | 30 | 60

                            Default: 0
                          format: int64
                          type: integer
                        monitoringRoleARN:
                          description: |-
                            The ARN for the IAM role that permits RDS to send enhanced monitoring metrics
                            to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess.
                            For information on creating a monitoring role, see Setting Up and Enabling
                            Enhanced Monitoring (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
                            in the Amazon RDS User Guide.

                            If MonitoringInterval is set to a value other than 0, then you must supply
                            a MonitoringRoleArn value.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        multiAZ:
                          description: |-
                            Specifies whether the DB instance is a Multi-AZ deployment. You can't set
                            the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (DB instance Availability Zones (AZs) are managed by the
                                DB cluster.)

                              - RDS Custom
                          type: boolean
                        ncharCharacterSetName:
                          description: |-
                            The name of the NCHAR character set for the Oracle DB instance.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        networkType:
                          description: |-
                            The network type of the DB instance.

                            The network type is determined by the DBSubnetGroup specified for the DB
                            instance. A DBSubnetGroup can support only the IPv4 protocol or the IPv4
                            and the IPv6 protocols (DUAL).

                            For more information, see Working with a DB instance in a VPC (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html)
                            in the Amazon RDS User Guide.

                            Valid Values: IPV4 | DUAL
                          type: string
                        optionGroupName:
                          description: |-
                            The option group to associate the DB instance with.

                            Permanent options, such as the TDE option for Oracle Advanced Security TDE,
                            can't be removed from an option group. Also, that option group can't be removed
                            from a DB instance after it is associated with a DB instance.

                            This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
                          type: string
                        performanceInsightsEnabled:
                          description: |-
                            Specifies whether to enable Performance Insights for the DB instance. For
                            more information, see Using Amazon Performance Insights (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: boolean
                        performanceInsightsKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier for encryption of Performance
                            Insights data.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key.

                            If you don't specify a value for PerformanceInsightsKMSKeyId, then Amazon
                            RDS uses your default KMS key. There is a default KMS key for your Amazon
                            Web Services account. Your Amazon Web Services account has a different default
                            KMS key for each Amazon Web Services Region.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        performanceInsightsRetentionPeriod:
                          description: |-
                            The number of days to retain Performance Insights data.

                            This setting doesn't apply to RDS Custom DB instances.

                            Valid Values:

                              - 7

                              - month * 31, where month is a number of months from 1-23. Examples: 93
                                (3 months * 31), 341 (11 months * 31), 589 (19 months * 31)

                              - 731

                            Default: 7 days

                            If you specify a retention period that isn't valid, such as 94, Amazon RDS
                            returns an error.
                          format: int64
                          type: integer
                        port:
                          description: |-
                            The port number on which the database accepts connections.

                            This setting doesn't apply to Aurora DB instances. The port number is managed
                            by the cluster.

                            Valid Values: 1150-65535

                            Default:

                              - RDS for Db2 - 50000

                              - RDS for MariaDB - 3306

                              - RDS for Microsoft SQL Server - 1433

                              - RDS for MySQL - 3306

                              - RDS for Oracle - 1521

                              - RDS for PostgreSQL - 5432

                            Constraints:

                              - For RDS for Microsoft SQL Server, the value can't be 1234, 1434, 3260,
                                3343, 3389, 47001, or 49152-49156.
                          format: int64
                          type: integer
                        preSignedURL:
                          description: |-
                            When you are creating a read replica from one Amazon Web Services GovCloud
                            (US) Region to another or from one China Amazon Web Services Region to another,
                            the URL that contains a Signature Version 4 signed request for the CreateDBInstanceReadReplica
                            API operation in the source Amazon Web Services Region that contains the
                            source DB instance.

                            This setting applies only to Amazon Web Services GovCloud (US) Regions and
                            China Amazon Web Services Regions. It's ignored in other Amazon Web Services
                            Regions.

                            This setting applies only when replicating from a source DB instance. Source
                            DB clusters aren't supported in Amazon Web Services GovCloud (US) Regions
                            and China Amazon Web Services Regions.

                            You must specify this parameter when you create an encrypted read replica
                            from another Amazon Web Services Region by using the Amazon RDS API. Don't
                            specify PreSignedUrl when you are creating an encrypted read replica in the
                            same Amazon Web Services Region.

                            The presigned URL must be a valid request for the CreateDBInstanceReadReplica
                            API operation that can run in the source Amazon Web Services Region that
                            contains the encrypted source DB instance. The presigned URL request must
                            contain the following parameter values:

                              - DestinationRegion - The Amazon Web Services Region that the encrypted
                                read replica is created in. This Amazon Web Services Region is the same
                                one where the CreateDBInstanceReadReplica operation is called that contains
                                this presigned URL. For example, if you create an encrypted DB instance
                                in the us-west-1 Amazon Web Services Region, from a source DB instance
                                in the us-east-2 Amazon Web Services Region, then you call the CreateDBInstanceReadReplica
                                operation in the us-east-1 Amazon Web Services Region and provide a presigned
                                URL that contains a call to the CreateDBInstanceReadReplica operation
                                in the us-west-2 Amazon Web Services Region. For this example, the DestinationRegion
                                in the presigned URL must be set to the us-east-1 Amazon Web Services
                                Region.

                              - KmsKeyId - The KMS key identifier for the key to use to encrypt the
                                read replica in the destination Amazon Web Services Region. This is the
                                same identifier for both the CreateDBInstanceReadReplica operation that
                                is called in the destination Amazon Web Services Region, and the operation
                                contained in the presigned URL.

                              - SourceDBInstanceIdentifier - The DB instance identifier for the encrypted
                                DB instance to be replicated. This identifier must be in the Amazon Resource
                                Name (ARN) format for the source Amazon Web Services Region. For example,
                                if you are creating an encrypted read replica from a DB instance in the
                                us-west-2 Amazon Web Services Region, then your SourceDBInstanceIdentifier
                                looks like the following example: arn:aws:rds:us-west-2:123456789012:instance:mysql-instance1-20161115.

                            To learn how to generate a Signature Version 4 signed request, see Authenticating
                            Requests: Using Query Parameters (Amazon Web Services Signature Version 4)
                            (https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html)
                            and Signature Version 4 Signing Process (https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).

                            If you are using an Amazon Web Services SDK tool or the CLI, you can specify
                            SourceRegion (or --source-region for the CLI) instead of specifying PreSignedUrl
                            manually. Specifying SourceRegion autogenerates a presigned URL that is a
                            valid request for the operation that can run in the source Amazon Web Services
                            Region.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        preferredBackupWindow:
                          description: |-
                            The daily time range during which automated backups are created if automated
                            backups are enabled, using the BackupRetentionPeriod parameter. The default
                            is a 30-minute window selected at random from an 8-hour block of time for
                            each Amazon Web Services Region. For more information, see Backup window
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to Amazon Aurora DB instances. The daily time
                            range for creating automated backups is managed by the DB cluster.

                            Constraints:

                              - Must be in the format hh24:mi-hh24:mi.

                              - Must be in Universal Coordinated Time (UTC).

                              - Must not conflict with the preferred maintenance window.

                              - Must be at least 30 minutes.
                          type: string
                        preferredMaintenanceWindow:
                          description: |-
                            The time range each week during which system maintenance can occur. For more
                            information, see Amazon RDS Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance)
                            in the Amazon RDS User Guide.

                            The default is a 30-minute window selected at random from an 8-hour block
                            of time for each Amazon Web Services Region, occurring on a random day of
                            the week.

                            Constraints:

                              - Must be in the format ddd:hh24:mi-ddd:hh24:mi.

                              - The day values must be mon | tue | wed | thu | fri | sat | sun.

                              - Must be in Universal Coordinated Time (UTC).

                              - Must not conflict with the preferred backup window.

                              - Must be at least 30 minutes.
                          type: string
                        processorFeatures:
                          description: |-
                            The number of CPU cores and the number of threads per core for the DB instance
                            class of the DB instance.

                            This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
                          items:
                            description: |-
                              Contains the processor features of a DB instance class.

                              To specify the number of CPU cores, use the coreCount feature name for the
                              Name parameter. To specify the number of threads per core, use the threadsPerCore
                              feature name for the Name parameter.

                              You can set the processor features of the DB instance class for a DB instance
                              when you call one of the following actions:

                                - CreateDBInstance

                                - ModifyDBInstance

                                - RestoreDBInstanceFromDBSnapshot

                                - RestoreDBInstanceFromS3

                                - RestoreDBInstanceToPointInTime

                              You can view the valid processor values for a particular instance class by
                              calling the DescribeOrderableDBInstanceOptions action and specifying the
                              instance class for the DBInstanceClass parameter.

                              In addition, you can use the following actions for DB instance class processor
                              information:

                                - DescribeDBInstances

                                - DescribeDBSnapshots

                                - DescribeValidDBInstanceModifications

                              If you call DescribeDBInstances, ProcessorFeature returns non-null values
                              only if the following conditions are met:

                                - You are accessing an Oracle DB instance.

                                - Your Oracle DB instance class supports configuring the number of CPU
                                  cores and threads per core.

                                - The current number CPU cores and threads is set to a non-default value.

                              For more information, see Configuring the processor for a DB instance class
                              in RDS for Oracle (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                              in the Amazon RDS User Guide.
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        promotionTier:
                          description: |-
                            The order of priority in which an Aurora Replica is promoted to the primary
                            instance after a failure of the existing primary instance. For more information,
                            see Fault Tolerance for an Aurora DB Cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance)
                            in the Amazon Aurora User Guide.

                            This setting doesn't apply to RDS Custom DB instances.

                            Default: 1

                            Valid Values: 0 - 15
                          format: int64
                          type: integer
                        publiclyAccessible:
                          description: |-
                            Specifies whether the DB instance is publicly accessible.

                            When the DB instance is publicly accessible and you connect from outside
                            of the DB instance's virtual private cloud (VPC), its Domain Name System
                            (DNS) endpoint resolves to the public IP address. When you connect from within
                            the same VPC as the DB instance, the endpoint resolves to the private IP
                            address. Access to the DB instance is ultimately controlled by the security
                            group it uses. That public access is not permitted if the security group
                            assigned to the DB instance doesn't permit it.

                            When the DB instance isn't publicly accessible, it is an internal DB instance
                            with a DNS name that resolves to a private IP address.

                            Default: The default behavior varies depending on whether DBSubnetGroupName
                            is specified.

                            If DBSubnetGroupName isn't specified, and PubliclyAccessible isn't specified,
                            the following applies:

                              - If the default VPC in the target Region doesn’t have an internet gateway
                                attached to it, the DB instance is private.

                              - If the default VPC in the target Region has an internet gateway attached
                                to it, the DB instance is public.

                            If DBSubnetGroupName is specified, and PubliclyAccessible isn't specified,
                            the following applies:

                              - If the subnets are part of a VPC that doesn’t have an internet gateway
                                attached to it, the DB instance is private.

                              - If the subnets are part of a VPC that has an internet gateway attached
                                to it, the DB instance is public.
                          type: boolean
                        replicaMode:
                          description: |-
                            The open mode of the replica database: mounted or read-only.

                            This parameter is only supported for Oracle DB instances.

                            Mounted DB replicas are included in Oracle Database Enterprise Edition. The
                            main use case for mounted replicas is cross-Region disaster recovery. The
                            primary database doesn't use Active Data Guard to transmit information to
                            the mounted replica. Because it doesn't accept user connections, a mounted
                            replica can't serve a read-only workload.

                            You can create a combination of mounted and read-only DB replicas for the
                            same primary DB instance. For more information, see Working with Oracle Read
                            Replicas for Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html)
                            in the Amazon RDS User Guide.

                            For RDS Custom, you must specify this parameter and set it to mounted. The
                            value won't be set by default. After replica creation, you can manage the
                            open mode manually.
                          type: string
                        sourceDBInstanceIdentifier:
                          description: |-
                            The identifier of the DB instance that will act as the source for the read
                            replica. Each DB instance can have up to 15 read replicas, with the exception
                            of Oracle and SQL Server, which can have up to five.

                            Constraints:

                              - Must be the identifier of an existing Db2, MariaDB, MySQL, Oracle, PostgreSQL,
                                or SQL Server DB instance.

                              - Can't be specified if the SourceDBClusterIdentifier parameter is also
                                specified.

                              - For the limitations of Oracle read replicas, see Version and licensing
                                considerations for RDS for Oracle replicas (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.limitations.html#oracle-read-replicas.limitations.versions-and-licenses)
                                in the Amazon RDS User Guide.

                              - For the limitations of SQL Server read replicas, see Read replica limitations
                                with SQL Server (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/SQLServer.ReadReplicas.html#SQLServer.ReadReplicas.Limitations)
                                in the Amazon RDS User Guide.

                              - The specified DB instance must have automatic backups enabled, that
                                is, its backup retention period must be greater than 0.

                              - If the source DB instance is in the same Amazon Web Services Region
                                as the read replica, specify a valid DB instance identifier.

                              - If the source DB instance is in a different Amazon Web Services Region
                                from the read replica, specify a valid DB instance ARN. For more information,
                                see Constructing an ARN for Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing)
                                in the Amazon RDS User Guide. This doesn't apply to SQL Server or RDS
                                Custom, which don't support cross-Region replicas.
                          type: string
                        sourceRegion:
                          description: |-
                            SourceRegion is the source region where the resource exists. This is not
                            sent over the wire and is only used for presigning. This value should always
                            have the same region as the source ARN.
                          type: string
                        storageEncrypted:
                          description: |-
                            Specifes whether the DB instance is encrypted. By default, it isn't encrypted.

                            For RDS Custom DB instances, either enable this setting or leave it unset.
                            Otherwise, Amazon RDS reports an error.

                            This setting doesn't apply to Amazon Aurora DB instances. The encryption
                            for DB instances is managed by the DB cluster.
                          type: boolean
                        storageThroughput:
                          description: |-
                            The storage throughput value for the DB instance.

                            This setting applies only to the gp3 storage type.

                            This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
                          format: int64
                          type: integer
                        storageType:
                          description: |-
                            The storage type to associate with the DB instance.

                            If you specify io1, io2, or gp3, you must also include a value for the Iops
                            parameter.

                            This setting doesn't apply to Amazon Aurora DB instances. Storage is managed
                            by the DB cluster.

                            Valid Values: gp2 | gp3 | io1 | io2 | standard

                            Default: io1, if the Iops parameter is specified. Otherwise, gp2.
                          type: string
                        tags:
                          description: Tags to assign to the DB instance.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        tdeCredentialARN:
                          description: |-
                            The ARN from the key store with which to associate the instance for TDE encryption.

                            This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
                          type: string
                        tdeCredentialPassword:
                          description: |-
                            The password for the given ARN from the key store in order to access the
                            device.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        timezone:
                          description: |-
                            The time zone of the DB instance. The time zone parameter is currently supported
                            only by RDS for Db2 (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-time-zone)
                            and RDS for SQL Server (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone).
                          type: string
                        useDefaultProcessorFeatures:
                          description: |-
                            Specifies whether the DB instance class of the DB instance uses its default
                            processor features.

                            This setting doesn't apply to RDS Custom.
                          type: boolean
                        vpcSecurityGroupIDs:
                          description: |-
                            A list of Amazon EC2 VPC security groups to associate with this DB instance.

                            This setting doesn't apply to Amazon Aurora DB instances. The associated
                            list of EC2 VPC security groups is managed by the DB cluster.

                            Default: The default EC2 VPC security group for the DB subnet group's VPC.
                          items:
                            type: string
                          type: array
                        vpcSecurityGroupRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                      required:
                        - dbInstanceClass
                        - dbInstanceIdentifier
                        - engine
                      type: object
                    status:
                      description: DBInstanceStatus defines the observed state of DBInstance
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        activityStreamEngineNativeAuditFieldsIncluded:
                          description: |-
                            Indicates whether engine-native audit fields are included in the database
                            activity stream.
                          type: boolean
                        activityStreamKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier used for encrypting messages in
                            the database activity stream. The Amazon Web Services KMS key identifier
                            is the key ARN, key ID, alias ARN, or alias name for the KMS key.
                          type: string
                        activityStreamKinesisStreamName:
                          description: |-
                            The name of the Amazon Kinesis data stream used for the database activity
                            stream.
                          type: string
                        activityStreamMode:
                          description: |-
                            The mode of the database activity stream. Database events such as a change
                            or access generate an activity stream event. RDS for Oracle always handles
                            these events asynchronously.
                          type: string
                        activityStreamPolicyStatus:
                          description: The status of the policy state of the activity stream.
                          type: string
                        activityStreamStatus:
                          description: The status of the database activity stream.
                          type: string
                        associatedRoles:
                          description: |-
                            The Amazon Web Services Identity and Access Management (IAM) roles associated
                            with the DB instance.
                          items:
                            description: |-
                              Information about an Amazon Web Services Identity and Access Management (IAM)
                              role that is associated with a DB instance.
                            properties:
                              featureName:
                                type: string
                              roleARN:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        automaticRestartTime:
                          description: The time when a stopped DB instance is restarted automatically.
                          format: date-time
                          type: string
                        automationMode:
                          description: |-
                            The automation mode of the RDS Custom DB instance: full or all paused. If
                            full, the DB instance automates monitoring and instance recovery. If all
                            paused, the instance pauses automation for the duration set by --resume-full-automation-mode-minutes.
                          type: string
                        awsBackupRecoveryPointARN:
                          description: |-
                            The Amazon Resource Name (ARN) of the recovery point in Amazon Web Services
                            Backup.
                          type: string
                        certificateDetails:
                          description: The details of the DB instance's server certificate.
                          properties:
                            cAIdentifier:
                              type: string
                            validTill:
                              format: date-time
                              type: string
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        customerOwnedIPEnabled:
                          description: |-
                            Indicates whether a customer-owned IP address (CoIP) is enabled for an RDS
                            on Outposts DB instance.

                            A CoIP provides local or external connectivity to resources in your Outpost
                            subnets through your on-premises network. For some use cases, a CoIP can
                            provide lower latency for connections to the DB instance from outside of
                            its virtual private cloud (VPC) on your local network.

                            For more information about RDS on Outposts, see Working with Amazon RDS on
                            Amazon Web Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
                            in the Amazon RDS User Guide.

                            For more information about CoIPs, see Customer-owned IP addresses (https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing)
                            in the Amazon Web Services Outposts User Guide.
                          type: boolean
                        dbInstanceAutomatedBackupsReplications:
                          description: The list of replicated automated backups associated with the DB instance.
                          items:
                            description: |-
                              Automated backups of a DB instance replicated to another Amazon Web Services
                              Region. They consist of system backups, transaction logs, and database instance
                              properties.
                            properties:
                              dbInstanceAutomatedBackupsARN:
                                type: string
                            type: object
                          type: array
                        dbInstancePort:
                          description: |-
                            The port that the DB instance listens on. If the DB instance is part of a
                            DB cluster, this can be a different port than the DB cluster port.
                          format: int64
                          type: integer
                        dbInstanceStatus:
                          description: |-
                            The current state of this database.

                            For information about DB instance statuses, see Viewing DB instance status
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/accessing-monitoring.html#Overview.DBInstance.Status)
                            in the Amazon RDS User Guide.
                          type: string
                        dbParameterGroups:
                          description: The list of DB parameter groups applied to this DB instance.
                          items:
                            description: |-
                              The status of the DB parameter group.

                              This data type is used as a response element in the following actions:

                                - CreateDBInstance

                                - CreateDBInstanceReadReplica

                                - DeleteDBInstance

                                - ModifyDBInstance

                                - RebootDBInstance

                                - RestoreDBInstanceFromDBSnapshot
                            properties:
                              dbParameterGroupName:
                                type: string
                              parameterApplyStatus:
                                type: string
                            type: object
                          type: array
                        dbSubnetGroup:
                          description: |-
                            Information about the subnet group associated with the DB instance, including
                            the name, description, and subnets in the subnet group.
                          properties:
                            dbSubnetGroupARN:
                              type: string
                            dbSubnetGroupDescription:
                              type: string
                            dbSubnetGroupName:
                              type: string
                            subnetGroupStatus:
                              type: string
                            subnets:
                              items:
                                description: |-
                                  This data type is used as a response element for the DescribeDBSubnetGroups
                                  operation.
                                properties:
                                  subnetAvailabilityZone:
                                    description: |-
                                      Contains Availability Zone information.

                                      This data type is used as an element in the OrderableDBInstanceOption data
                                      type.
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  subnetIdentifier:
                                    type: string
                                  subnetOutpost:
                                    description: |-
                                      A data type that represents an Outpost.

                                      For more information about RDS on Outposts, see Amazon RDS on Amazon Web
                                      Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
                                      in the Amazon RDS User Guide.
                                    properties:
                                      arn:
                                        type: string
                                    type: object
                                  subnetStatus:
                                    type: string
                                type: object
                              type: array
                            supportedNetworkTypes:
                              items:
                                type: string
                              type: array
                            vpcID:
                              type: string
                          type: object
                        dbSystemID:
                          description: |-
                            The Oracle system ID (Oracle SID) for a container database (CDB). The Oracle
                            SID is also the name of the CDB. This setting is only valid for RDS Custom
                            DB instances.
                          type: string
                        dbiResourceID:
                          description: |-
                            The Amazon Web Services Region-unique, immutable identifier for the DB instance.
                            This identifier is found in Amazon Web Services CloudTrail log entries whenever
                            the Amazon Web Services KMS key for the DB instance is accessed.
                          type: string
                        domainMemberships:
                          description: The Active Directory Domain membership records associated with the DB instance.
                          items:
                            description: |-
                              An Active Directory Domain membership record associated with the DB instance
                              or cluster.
                            properties:
                              domain:
                                type: string
                              fQDN:
                                type: string
                              iamRoleName:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        enabledCloudwatchLogsExports:
                          description: |-
                            A list of log types that this DB instance is configured to export to CloudWatch
                            Logs.

                            Log types vary by DB engine. For information about the log types for each
                            DB engine, see Monitoring Amazon RDS log files (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html)
                            in the Amazon RDS User Guide.
                          items:
                            type: string
                          type: array
                        endpoint:
                          description: |-
                            The connection endpoint for the DB instance.

                            The endpoint might not be shown for instances with the status of creating.
                          properties:
                            address:
                              type: string
                            hostedZoneID:
                              type: string
                            port:
                              format: int64
                              type: integer
                          type: object
                        enhancedMonitoringResourceARN:
                          description: |-
                            The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that
                            receives the Enhanced Monitoring metrics data for the DB instance.
                          type: string
                        iamDatabaseAuthenticationEnabled:
                          description: |-
                            Indicates whether mapping of Amazon Web Services Identity and Access Management
                            (IAM) accounts to database accounts is enabled for the DB instance.

                            For a list of engine versions that support IAM database authentication, see
                            IAM database authentication (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RDS_Fea_Regions_DB-eng.Feature.IamDatabaseAuthentication.html)
                            in the Amazon RDS User Guide and IAM database authentication in Aurora (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.Aurora_Fea_Regions_DB-eng.Feature.IAMdbauth.html)
                            in the Amazon Aurora User Guide.
                          type: boolean
                        instanceCreateTime:
                          description: The date and time when the DB instance was created.
                          format: date-time
                          type: string
                        latestRestorableTime:
                          description: |-
                            The latest time to which a database in this DB instance can be restored with
                            point-in-time restore.
                          format: date-time
                          type: string
                        listenerEndpoint:
                          description: The listener connection endpoint for SQL Server Always On.
                          properties:
                            address:
                              type: string
                            hostedZoneID:
                              type: string
                            port:
                              format: int64
                              type: integer
                          type: object
                        masterUserSecret:
                          description: |-
                            The secret managed by RDS in Amazon Web Services Secrets Manager for the
                            master user password.

                            For more information, see Password management with Amazon Web Services Secrets
                            Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
                            in the Amazon RDS User Guide.
                          properties:
                            kmsKeyID:
                              type: string
                            secretARN:
                              type: string
                            secretStatus:
                              type: string
                          type: object
                        optionGroupMemberships:
                          description: The list of option group memberships for this DB instance.
                          items:
                            description: Provides information on the option groups the DB instance is a member of.
                            properties:
                              optionGroupName:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        pendingModifiedValues:
                          description: |-
                            Information about pending changes to the DB instance. This information is
                            returned only when there are pending changes. Specific changes are identified
                            by subelements.
                          properties:
                            allocatedStorage:
                              format: int64
                              type: integer
                            automationMode:
                              type: string
                            backupRetentionPeriod:
                              format: int64
                              type: integer
                            caCertificateIdentifier:
                              type: string
                            dbInstanceClass:
                              type: string
                            dbInstanceIdentifier:
                              type: string
                            dbSubnetGroupName:
                              type: string
                            engineVersion:
                              type: string
                            iamDatabaseAuthenticationEnabled:
                              type: boolean
                            iops:
                              format: int64
                              type: integer
                            licenseModel:
                              type: string
                            masterUserPassword:
                              type: string
                            multiAZ:
                              type: boolean
                            pendingCloudwatchLogsExports:
                              description: |-
                                A list of the log types whose configuration is still pending. In other words,
                                these log types are in the process of being activated or deactivated.
                              properties:
                                logTypesToDisable:
                                  items:
                                    type: string
                                  type: array
                                logTypesToEnable:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            port:
                              format: int64
                              type: integer
                            processorFeatures:
                              items:
                                description: |-
                                  Contains the processor features of a DB instance class.

                                  To specify the number of CPU cores, use the coreCount feature name for the
                                  Name parameter. To specify the number of threads per core, use the threadsPerCore
                                  feature name for the Name parameter.

                                  You can set the processor features of the DB instance class for a DB instance
                                  when you call one of the following actions:

                                    - CreateDBInstance

                                    - ModifyDBInstance

                                    - RestoreDBInstanceFromDBSnapshot

                                    - RestoreDBInstanceFromS3

                                    - RestoreDBInstanceToPointInTime

                                  You can view the valid processor values for a particular instance class by
                                  calling the DescribeOrderableDBInstanceOptions action and specifying the
                                  instance class for the DBInstanceClass parameter.

                                  In addition, you can use the following actions for DB instance class processor
                                  information:

                                    - DescribeDBInstances

                                    - DescribeDBSnapshots

                                    - DescribeValidDBInstanceModifications

                                  If you call DescribeDBInstances, ProcessorFeature returns non-null values
                                  only if the following conditions are met:

                                    - You are accessing an Oracle DB instance.

                                    - Your Oracle DB instance class supports configuring the number of CPU
                                      cores and threads per core.

                                    - The current number CPU cores and threads is set to a non-default value.

                                  For more information, see Configuring the processor for a DB instance class
                                  in RDS for Oracle (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                                  in the Amazon RDS User Guide.
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            resumeFullAutomationModeTime:
                              format: date-time
                              type: string
                            storageThroughput:
                              format: int64
                              type: integer
                            storageType:
                              type: string
                          type: object
                        readReplicaDBClusterIdentifiers:
                          description: |-
                            The identifiers of Aurora DB clusters to which the RDS DB instance is replicated
                            as a read replica. For example, when you create an Aurora read replica of
                            an RDS for MySQL DB instance, the Aurora MySQL DB cluster for the Aurora
                            read replica is shown. This output doesn't contain information about cross-Region
                            Aurora read replicas.

                            Currently, each RDS DB instance can have only one Aurora read replica.
                          items:
                            type: string
                          type: array
                        readReplicaDBInstanceIdentifiers:
                          description: The identifiers of the read replicas associated with this DB instance.
                          items:
                            type: string
                          type: array
                        readReplicaSourceDBClusterIdentifier:
                          description: The identifier of the source DB cluster if this DB instance is a read replica.
                          type: string
                        readReplicaSourceDBInstanceIdentifier:
                          description: The identifier of the source DB instance if this DB instance is a read replica.
                          type: string
                        resumeFullAutomationModeTime:
                          description: |-
                            The number of minutes to pause the automation. When the time period ends,
                            RDS Custom resumes full automation. The minimum value is 60 (default). The
                            maximum value is 1,440.
                          format: date-time
                          type: string
                        secondaryAvailabilityZone:
                          description: |-
                            If present, specifies the name of the secondary Availability Zone for a DB
                            instance with multi-AZ support.
                          type: string
                        statusInfos:
                          description: |-
                            The status of a read replica. If the DB instance isn't a read replica, the
                            value is blank.
                          items:
                            description: Provides a list of status information for a DB instance.
                            properties:
                              message:
                                type: string
                              normal:
                                type: boolean
                              status:
                                type: string
                              statusType:
                                type: string
                            type: object
                          type: array
                        vpcSecurityGroups:
                          description: The list of Amazon EC2 VPC security groups that the DB instance belongs to.
                          items:
                            description: |-
                              This data type is used as a response element for queries on VPC security
                              group membership.
                            properties:
                              status:
                                type: string
                              vpcSecurityGroupID:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbparametergroups-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbparametergroups.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBParameterGroup
            listKind: DBParameterGroupList
            plural: dbparametergroups
            singular: dbparametergroup
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBParameterGroup is the Schema for the DBParameterGroups API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBParameterGroupSpec defines the desired state of DBParameterGroup.

                        Contains the details of an Amazon RDS DB parameter group.

                        This data type is used as a response element in the DescribeDBParameterGroups
                        action.
                      properties:
                        description:
                          description: The description for the DB parameter group.
                          type: string
                        family:
                          description: |-
                            The DB parameter group family name. A DB parameter group can be associated
                            with one and only one DB parameter group family, and can be applied only
                            to a DB instance running a database engine and engine version compatible
                            with that DB parameter group family.

                            To list all of the available parameter group families for a DB engine, use
                            the following command:

                            aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
                            --engine

                            For example, to list all of the available parameter group families for the
                            MySQL DB engine, use the following command:

                            aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
                            --engine mysql

                            The output contains duplicates.

                            The following are the valid DB engine values:

                              - aurora-mysql

                              - aurora-postgresql

                              - db2-ae

                              - db2-se

                              - mysql

                              - oracle-ee

                              - oracle-ee-cdb

                              - oracle-se2

                              - oracle-se2-cdb

                              - postgres

                              - sqlserver-ee

                              - sqlserver-se

                              - sqlserver-ex

                              - sqlserver-web
                          type: string
                        name:
                          description: |-
                            The name of the DB parameter group.

                            Constraints:

                              - Must be 1 to 255 letters, numbers, or hyphens.

                              - First character must be a letter

                              - Can't end with a hyphen or contain two consecutive hyphens

                            This value is stored as a lowercase string.
                          type: string
                        parameterOverrides:
                          additionalProperties:
                            type: string
                          type: object
                        tags:
                          description: Tags to assign to the DB parameter group.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - description
                        - family
                        - name
                      type: object
                    status:
                      description: DBParameterGroupStatus defines the observed state of DBParameterGroup
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        parameterOverrideStatuses:
                          description: A list of Parameter values.
                          items:
                            description: |-
                              This data type is used as a request parameter in the ModifyDBParameterGroup
                              and ResetDBParameterGroup actions.

                              This data type is used as a response element in the DescribeEngineDefaultParameters
                              and DescribeDBParameters actions.
                            properties:
                              allowedValues:
                                type: string
                              applyMethod:
                                type: string
                              applyType:
                                type: string
                              dataType:
                                type: string
                              description:
                                type: string
                              isModifiable:
                                type: boolean
                              minimumEngineVersion:
                                type: string
                              parameterName:
                                type: string
                              parameterValue:
                                type: string
                              source:
                                type: string
                              supportedEngineModes:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbproxies-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbproxies.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBProxy
            listKind: DBProxyList
            plural: dbproxies
            singular: dbproxy
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBProxy is the Schema for the DBProxies API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBProxySpec defines the desired state of DBProxy.

                        The data structure representing a proxy managed by the RDS Proxy.

                        This data type is used as a response element in the DescribeDBProxies action.
                      properties:
                        auth:
                          description: The authorization mechanism that the proxy uses.
                          items:
                            description: |-
                              Specifies the details of authentication used by a proxy to log in as a specific
                              database user.
                            properties:
                              authScheme:
                                type: string
                              clientPasswordAuthType:
                                type: string
                              description:
                                type: string
                              iamAuth:
                                type: string
                              secretARN:
                                type: string
                              userName:
                                type: string
                            type: object
                          type: array
                        debugLogging:
                          description: |-
                            Specifies whether the proxy includes detailed information about SQL statements
                            in its logs. This information helps you to debug issues involving SQL behavior
                            or the performance and scalability of the proxy connections. The debug information
                            includes the text of SQL statements that you submit through the proxy. Thus,
                            only enable this setting when needed for debugging, and only when you have
                            security measures in place to safeguard any sensitive information that appears
                            in the logs.
                          type: boolean
                        engineFamily:
                          description: |-
                            The kinds of databases that the proxy can connect to. This value determines
                            which database network protocol the proxy recognizes when it interprets network
                            traffic to and from the database. For Aurora MySQL, RDS for MariaDB, and
                            RDS for MySQL databases, specify MYSQL. For Aurora PostgreSQL and RDS for
                            PostgreSQL databases, specify POSTGRESQL. For RDS for Microsoft SQL Server,
                            specify SQLSERVER.
                          type: string
                        idleClientTimeout:
                          description: |-
                            The number of seconds that a connection to the proxy can be inactive before
                            the proxy disconnects it. You can set this value higher or lower than the
                            connection timeout limit for the associated database.
                          format: int64
                          type: integer
                        name:
                          description: |-
                            The identifier for the proxy. This name must be unique for all proxies owned
                            by your Amazon Web Services account in the specified Amazon Web Services
                            Region. An identifier must begin with a letter and must contain only ASCII
                            letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive
                            hyphens.
                          type: string
                        requireTLS:
                          description: |-
                            Specifies whether Transport Layer Security (TLS) encryption is required for
                            connections to the proxy. By enabling this setting, you can enforce encrypted
                            TLS connections to the proxy.
                          type: boolean
                        roleARN:
                          description: |-
                            The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access
                            secrets in Amazon Web Services Secrets Manager.
                          type: string
                        tags:
                          description: |-
                            An optional set of key-value pairs to associate arbitrary data of your choosing
                            with the proxy.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcSecurityGroupIDs:
                          description: One or more VPC security group IDs to associate with the new proxy.
                          items:
                            type: string
                          type: array
                        vpcSubnetIDs:
                          description: One or more VPC subnet IDs to associate with the new proxy.
                          items:
                            type: string
                          type: array
                      required:
                        - auth
                        - engineFamily
                        - name
                        - roleARN
                        - vpcSubnetIDs
                      type: object
                    status:
                      description: DBProxyStatus defines the observed state of DBProxy
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        createdDate:
                          description: The date and time when the proxy was first created.
                          format: date-time
                          type: string
                        endpoint:
                          description: |-
                            The endpoint that you can use to connect to the DB proxy. You include the
                            endpoint value in the connection string for a database client application.
                          type: string
                        status:
                          description: |-
                            The current status of this proxy. A status of available means the proxy is
                            ready to handle requests. Other values indicate that you must wait for the
                            proxy to be ready, or take some action to resolve an issue.
                          type: string
                        updatedDate:
                          description: The date and time when the proxy was last updated.
                          format: date-time
                          type: string
                        vpcID:
                          description: Provides the VPC ID of the DB proxy.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbsnapshots-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbsnapshots.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBSnapshot
            listKind: DBSnapshotList
            plural: dbsnapshots
            singular: dbsnapshot
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBSnapshot is the Schema for the DBSnapshots API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBSnapshotSpec defines the desired state of DBSnapshot.

                        Contains the details of an Amazon RDS DB snapshot.

                        This data type is used as a response element in the DescribeDBSnapshots action.
                      properties:
                        dbInstanceIdentifier:
                          description: |-
                            The identifier of the DB instance that you want to create the snapshot of.

                            Constraints:

                              - Must match the identifier of an existing DBInstance.
                          type: string
                        dbInstanceIdentifierRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        dbSnapshotIdentifier:
                          description: |-
                            The identifier for the DB snapshot.

                            Constraints:

                              - Can't be null, empty, or blank

                              - Must contain from 1 to 255 letters, numbers, or hyphens

                              - First character must be a letter

                              - Can't end with a hyphen or contain two consecutive hyphens

                            Example: my-snapshot-id
                          type: string
                        tags:
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - dbSnapshotIdentifier
                      type: object
                    status:
                      description: DBSnapshotStatus defines the observed state of DBSnapshot
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        allocatedStorage:
                          description: Specifies the allocated storage size in gibibytes (GiB).
                          format: int64
                          type: integer
                        availabilityZone:
                          description: |-
                            Specifies the name of the Availability Zone the DB instance was located in
                            at the time of the DB snapshot.
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        dbiResourceID:
                          description: |-
                            The identifier for the source DB instance, which can't be changed and which
                            is unique to an Amazon Web Services Region.
                          type: string
                        encrypted:
                          description: Indicates whether the DB snapshot is encrypted.
                          type: boolean
                        engine:
                          description: Specifies the name of the database engine.
                          type: string
                        iamDatabaseAuthenticationEnabled:
                          description: |-
                            Indicates whether mapping of Amazon Web Services Identity and Access Management
                            (IAM) accounts to database accounts is enabled.
                          type: boolean
                        instanceCreateTime:
                          description: |-
                            Specifies the time in Coordinated Universal Time (UTC) when the DB instance,
                            from which the snapshot was taken, was created.
                          format: date-time
                          type: string
                        iops:
                          description: |-
                            Specifies the Provisioned IOPS (I/O operations per second) value of the DB
                            instance at the time of the snapshot.
                          format: int64
                          type: integer
                        kmsKeyID:
                          description: |-
                            If Encrypted is true, the Amazon Web Services KMS key identifier for the
                            encrypted DB snapshot.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key.
                          type: string
                        licenseModel:
                          description: License model information for the restored DB instance.
                          type: string
                        masterUsername:
                          description: Provides the master username for the DB snapshot.
                          type: string
                        originalSnapshotCreateTime:
                          description: |-
                            Specifies the time of the CreateDBSnapshot operation in Coordinated Universal
                            Time (UTC). Doesn't change when the snapshot is copied.
                          format: date-time
                          type: string
                        percentProgress:
                          description: The percentage of the estimated data that has been transferred.
                          format: int64
                          type: integer
                        port:
                          description: |-
                            Specifies the port that the database engine was listening on at the time
                            of the snapshot.
                          format: int64
                          type: integer
                        processorFeatures:
                          description: |-
                            The number of CPU cores and the number of threads per core for the DB instance
                            class of the DB instance when the DB snapshot was created.
                          items:
                            description: |-
                              Contains the processor features of a DB instance class.

                              To specify the number of CPU cores, use the coreCount feature name for the
                              Name parameter. To specify the number of threads per core, use the threadsPerCore
                              feature name for the Name parameter.

                              You can set the processor features of the DB instance class for a DB instance
                              when you call one of the following actions:

                                - CreateDBInstance

                                - ModifyDBInstance

                                - RestoreDBInstanceFromDBSnapshot

                                - RestoreDBInstanceFromS3

                                - RestoreDBInstanceToPointInTime

                              You can view the valid processor values for a particular instance class by
                              calling the DescribeOrderableDBInstanceOptions action and specifying the
                              instance class for the DBInstanceClass parameter.

                              In addition, you can use the following actions for DB instance class processor
                              information:

                                - DescribeDBInstances

                                - DescribeDBSnapshots

                                - DescribeValidDBInstanceModifications

                              If you call DescribeDBInstances, ProcessorFeature returns non-null values
                              only if the following conditions are met:

                                - You are accessing an Oracle DB instance.

                                - Your Oracle DB instance class supports configuring the number of CPU
                                  cores and threads per core.

                                - The current number CPU cores and threads is set to a non-default value.

                              For more information, see Configuring the processor for a DB instance class
                              in RDS for Oracle (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                              in the Amazon RDS User Guide.
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        snapshotCreateTime:
                          description: |-
                            Specifies when the snapshot was taken in Coordinated Universal Time (UTC).
                            Changes for the copy when the snapshot is copied.
                          format: date-time
                          type: string
                        snapshotDatabaseTime:
                          description: |-
                            The timestamp of the most recent transaction applied to the database that
                            you're backing up. Thus, if you restore a snapshot, SnapshotDatabaseTime
                            is the most recent transaction in the restored DB instance. In contrast,
                            originalSnapshotCreateTime specifies the system time that the snapshot completed.

                            If you back up a read replica, you can determine the replica lag by comparing
                            SnapshotDatabaseTime with originalSnapshotCreateTime. For example, if originalSnapshotCreateTime
                            is two hours later than SnapshotDatabaseTime, then the replica lag is two
                            hours.
                          format: date-time
                          type: string
                        snapshotTarget:
                          description: |-
                            Specifies where manual snapshots are stored: Amazon Web Services Outposts
                            or the Amazon Web Services Region.
                          type: string
                        snapshotType:
                          description: Provides the type of the DB snapshot.
                          type: string
                        sourceDBSnapshotIdentifier:
                          description: |-
                            The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied
                            from. It only has a value in the case of a cross-account or cross-Region
                            copy.
                          type: string
                        sourceRegion:
                          description: |-
                            The Amazon Web Services Region that the DB snapshot was created in or copied
                            from.
                          type: string
                        status:
                          description: Specifies the status of this DB snapshot.
                          type: string
                        storageThroughput:
                          description: Specifies the storage throughput for the DB snapshot.
                          format: int64
                          type: integer
                        storageType:
                          description: Specifies the storage type associated with DB snapshot.
                          type: string
                        tagList:
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        tdeCredentialARN:
                          description: The ARN from the key store with which to associate the instance for TDE encryption.
                          type: string
                        timezone:
                          description: |-
                            The time zone of the DB snapshot. In most cases, the Timezone element is
                            empty. Timezone content appears only for snapshots taken from Microsoft SQL
                            Server DB instances that were created with a time zone specified.
                          type: string
                        vpcID:
                          description: Provides the VPC ID associated with the DB snapshot.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbsubnetgroups-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbsubnetgroups.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBSubnetGroup
            listKind: DBSubnetGroupList
            plural: dbsubnetgroups
            singular: dbsubnetgroup
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBSubnetGroup is the Schema for the DBSubnetGroups API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBSubnetGroupSpec defines the desired state of DBSubnetGroup.

                        Contains the details of an Amazon RDS DB subnet group.

                        This data type is used as a response element in the DescribeDBSubnetGroups
                        action.
                      properties:
                        description:
                          description: The description for the DB subnet group.
                          type: string
                        name:
                          description: |-
                            The name for the DB subnet group. This value is stored as a lowercase string.

                            Constraints:

                              - Must contain no more than 255 letters, numbers, periods, underscores,
                                spaces, or hyphens.

                              - Must not be default.

                              - First character must be a letter.

                            Example: mydbsubnetgroup
                          type: string
                        subnetIDs:
                          description: The EC2 Subnet IDs for the DB subnet group.
                          items:
                            type: string
                          type: array
                        subnetRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        tags:
                          description: Tags to assign to the DB subnet group.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - description
                        - name
                      type: object
                    status:
                      description: DBSubnetGroupStatus defines the observed state of DBSubnetGroup
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        subnetGroupStatus:
                          description: Provides the status of the DB subnet group.
                          type: string
                        subnets:
                          description: Contains a list of Subnet elements.
                          items:
                            description: |-
                              This data type is used as a response element for the DescribeDBSubnetGroups
                              operation.
                            properties:
                              subnetAvailabilityZone:
                                description: |-
                                  Contains Availability Zone information.

                                  This data type is used as an element in the OrderableDBInstanceOption data
                                  type.
                                properties:
                                  name:
                                    type: string
                                type: object
                              subnetIdentifier:
                                type: string
                              subnetOutpost:
                                description: |-
                                  A data type that represents an Outpost.

                                  For more information about RDS on Outposts, see Amazon RDS on Amazon Web
                                  Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
                                  in the Amazon RDS User Guide.
                                properties:
                                  arn:
                                    type: string
                                type: object
                              subnetStatus:
                                type: string
                            type: object
                          type: array
                        supportedNetworkTypes:
                          description: |-
                            The network type of the DB subnet group.

                            Valid values:

                               * IPV4

                               * DUAL

                            A DBSubnetGroup can support only the IPv4 protocol or the IPv4 and the IPv6
                            protocols (DUAL).

                            For more information, see Working with a DB instance in a VPC (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html)
                            in the Amazon RDS User Guide.
                          items:
                            type: string
                          type: array
                        vpcID:
                          description: Provides the VpcId of the DB subnet group.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-fieldexports-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: fieldexports.services.k8s.aws
        spec:
          group: services.k8s.aws
          names:
            kind: FieldExport
            listKind: FieldExportList
            plural: fieldexports
            singular: fieldexport
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: FieldExport is the schema for the FieldExport API.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: FieldExportSpec defines the desired state of the FieldExport.
                      properties:
                        from:
                          description: |-
                            ResourceFieldSelector provides the values necessary to identify an individual
                            field on an individual K8s resource.
                          properties:
                            path:
                              type: string
                            resource:
                              description: |-
                                NamespacedResource provides all the values necessary to identify an ACK
                                resource of a given type (within the same namespace as the custom resource
                                containing this type).
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                name:
                                  type: string
                              required:
                                - group
                                - kind
                                - name
                              type: object
                          required:
                            - path
                            - resource
                          type: object
                        to:
                          description: |-
                            FieldExportTarget provides the values necessary to identify the
                            output path for a field export.
                          properties:
                            key:
                              description: Key overrides the default value (`<namespace>.<FieldExport-resource-name>`) for the FieldExport target
                              type: string
                            kind:
                              description: |-
                                FieldExportOutputType represents all types that can be produced by a field
                                export operation
                              enum:
                                - configmap
                                - secret
                              type: string
                            name:
                              type: string
                            namespace:
                              description: Namespace is marked as optional, so we cannot compose `NamespacedName`
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                      required:
                        - from
                        - to
                      type: object
                    status:
                      description: FieldExportStatus defines the observed status of the FieldExport.
                      properties:
                        conditions:
                          description: |-
                            A collection of `ackv1alpha1.Condition` objects that describe the various
                            recoverable states of the field CR
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                      required:
                        - conditions
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-globalclusters-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: globalclusters.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: GlobalCluster
            listKind: GlobalClusterList
            plural: globalclusters
            singular: globalcluster
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: GlobalCluster is the Schema for the GlobalClusters API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        GlobalClusterSpec defines the desired state of GlobalCluster.

                        A data type representing an Aurora global database.
                      properties:
                        databaseName:
                          description: |-
                            The name for your database of up to 64 alphanumeric characters. If you don't
                            specify a name, Amazon Aurora doesn't create a database in the global database
                            cluster.

                            Constraints:

                              - Can't be specified if SourceDBClusterIdentifier is specified. In this
                                case, Amazon Aurora uses the database name from the source DB cluster.
                          type: string
                        deletionProtection:
                          description: |-
                            Specifies whether to enable deletion protection for the new global database
                            cluster. The global database can't be deleted when deletion protection is
                            enabled.
                          type: boolean
                        engine:
                          description: |-
                            The database engine to use for this global database cluster.

                            Valid Values: aurora-mysql | aurora-postgresql

                            Constraints:

                              - Can't be specified if SourceDBClusterIdentifier is specified. In this
                                case, Amazon Aurora uses the engine of the source DB cluster.
                          type: string
                        engineVersion:
                          description: |-
                            The engine version to use for this global database cluster.

                            Constraints:

                              - Can't be specified if SourceDBClusterIdentifier is specified. In this
                                case, Amazon Aurora uses the engine version of the source DB cluster.
                          type: string
                        globalClusterIdentifier:
                          description: |-
                            The cluster identifier for this global database cluster. This parameter is
                            stored as a lowercase string.
                          type: string
                        sourceDBClusterIdentifier:
                          description: |-
                            The Amazon Resource Name (ARN) to use as the primary cluster of the global
                            database.

                            If you provide a value for this parameter, don't specify values for the following
                            settings because Amazon Aurora uses the values from the specified source
                            DB cluster:

                              - DatabaseName

                              - Engine

                              - EngineVersion

                              - StorageEncrypted
                          type: string
                        storageEncrypted:
                          description: |-
                            Specifies whether to enable storage encryption for the new global database
                            cluster.

                            Constraints:

                              - Can't be specified if SourceDBClusterIdentifier is specified. In this
                                case, Amazon Aurora uses the setting from the source DB cluster.
                          type: boolean
                      type: object
                    status:
                      description: GlobalClusterStatus defines the observed state of GlobalCluster
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        engineLifecycleSupport:
                          description: |-
                            The life cycle type for the global cluster.

                            For more information, see CreateGlobalCluster.
                          type: string
                        failoverState:
                          description: |-
                            A data object containing all properties for the current state of an in-process
                            or pending switchover or failover process for this global cluster (Aurora
                            global database). This object is empty unless the SwitchoverGlobalCluster
                            or FailoverGlobalCluster operation was called on this global cluster.
                          properties:
                            fromDBClusterARN:
                              type: string
                            status:
                              type: string
                            toDBClusterARN:
                              type: string
                          type: object
                        globalClusterMembers:
                          description: The list of primary and secondary clusters within the global database cluster.
                          items:
                            description: |-
                              A data structure with information about any primary and secondary clusters
                              associated with a global cluster (Aurora global database).
                            properties:
                              dbClusterARN:
                                type: string
                              globalWriteForwardingStatus:
                                type: string
                              isWriter:
                                type: boolean
                              readers:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        globalClusterResourceID:
                          description: |-
                            The Amazon Web Services Region-unique, immutable identifier for the global
                            database cluster. This identifier is found in Amazon Web Services CloudTrail
                            log entries whenever the Amazon Web Services KMS key for the DB cluster is
                            accessed.
                          type: string
                        status:
                          description: Specifies the current state of this global database cluster.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: serviceaccount---schema-spec-values-serviceaccount-name
      template:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          annotations:
            eks.amazonaws.com/role-arn: ${ackIamRole.status.ackResourceMetadata.arn}
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.values.serviceAccount.name}
          namespace: ${schema.spec.namespace}
    - id: clusterrole---schema-spec-name--rds-chart
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart
        rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
              - secrets
            verbs:
              - get
              - list
              - patch
              - watch
          - apiGroups:
              - ""
            resources:
              - namespaces
            verbs:
              - get
              - list
              - watch
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - securitygroups
              - securitygroups/status
              - subnets
              - subnets/status
            verbs:
              - get
              - list
          - apiGroups:
              - kms.services.k8s.aws
            resources:
              - keys
              - keys/status
            verbs:
              - get
              - list
          - apiGroups:
              - rds.services.k8s.aws
            resources:
              - dbclusterendpoints
              - dbclusterparametergroups
              - dbclusters
              - dbclustersnapshots
              - dbinstances
              - dbparametergroups
              - dbproxies
              - dbsnapshots
              - dbsubnetgroups
              - globalclusters
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - rds.services.k8s.aws
            resources:
              - dbclusterendpoints/status
              - dbclusterparametergroups/status
              - dbclusters/status
              - dbclustersnapshots/status
              - dbinstances/status
              - dbparametergroups/status
              - dbproxies/status
              - dbsnapshots/status
              - dbsubnetgroups/status
              - globalclusters/status
            verbs:
              - get
              - patch
              - update
          - apiGroups:
              - services.k8s.aws
            resources:
              - adoptedresources
              - fieldexports
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - services.k8s.aws
            resources:
              - adoptedresources/status
              - fieldexports/status
            verbs:
              - get
              - patch
              - update
    - id: clusterrole---schema-spec-name--rds-chart-namespaces-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-namespaces-cache
        rules:
          - apiGroups:
              - ""
            resources:
              - namespaces
            verbs:
              - get
              - list
              - watch
    - id: clusterrolebinding---schema-spec-name--rds-chart-namespaces-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-namespaces-cache
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: ${schema.spec.name}-rds-chart-namespaces-cache
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: clusterrolebinding---schema-spec-name--rds-chart-rolebinding
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-rolebinding
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: ${schema.spec.name}-rds-chart
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: role---schema-spec-name--rds-chart-configmaps-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-configmaps-cache
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
            verbs:
              - get
              - list
              - watch
    - id: role---schema-spec-name--rds-chart-reader
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-reader
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - rds.services.k8s.aws
            resources:
              - dbclusters
              - dbclusterendpoints
              - dbclusterparametergroups
              - dbclustersnapshots
              - dbinstances
              - dbparametergroups
              - dbproxies
              - dbsnapshots
              - dbsubnetgroups
              - globalclusters
            verbs:
              - get
              - list
              - watch
    - id: role---schema-spec-name--rds-chart-writer
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-writer
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - rds.services.k8s.aws
            resources:
              - dbclusters
              - dbclusterendpoints
              - dbclusterparametergroups
              - dbclustersnapshots
              - dbinstances
              - dbparametergroups
              - dbproxies
              - dbsnapshots
              - dbsubnetgroups
              - globalclusters
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - rds.services.k8s.aws
            resources:
              - dbclusters
              - dbclusterendpoints
              - dbclusterparametergroups
              - dbclustersnapshots
              - dbinstances
              - dbparametergroups
              - dbproxies
              - dbsnapshots
              - dbsubnetgroups
              - globalclusters
            verbs:
              - get
              - patch
              - update
    - id: rolebinding---schema-spec-name--rds-chart-configmaps-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-configmaps-cache
          namespace: ${schema.spec.namespace}
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: ${schema.spec.name}-rds-chart-configmaps-cache
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: deployment---schema-spec-name--rds-chart
      template:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart
          namespace: ${schema.spec.namespace}
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: ${schema.spec.name}
              app.kubernetes.io/name: rds-chart
          template:
            metadata:
              labels:
                app.kubernetes.io/instance: ${schema.spec.name}
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: rds-chart
                k8s-app: rds-chart
            spec:
              containers:
                - args:
                    - --aws-region
                    - $(AWS_REGION)
                    - --aws-endpoint-url
                    - $(AWS_ENDPOINT_URL)
                    - --log-level
                    - $(ACK_LOG_LEVEL)
                    - --resource-tags
                    - $(ACK_RESOURCE_TAGS)
                    - --watch-namespace
                    - $(ACK_WATCH_NAMESPACE)
                    - --watch-selectors
                    - $(ACK_WATCH_SELECTORS)
                    - --reconcile-resources
                    - $(RECONCILE_RESOURCES)
                    - --deletion-policy
                    - $(DELETION_POLICY)
                    - --reconcile-default-resync-seconds
                    - $(RECONCILE_DEFAULT_RESYNC_SECONDS)
                    - --reconcile-default-max-concurrent-syncs
                    - $(RECONCILE_DEFAULT_MAX_CONCURRENT_SYNCS)
                    - --feature-gates
                    - $(FEATURE_GATES)
                    - --enable-carm=true
                  command:
                    - ./bin/controller
                  env:
                    - name: ACK_SYSTEM_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: AWS_REGION
                      value: ${schema.spec.values.aws.region}
                    - name: AWS_ENDPOINT_URL
                      value: ""
                    - name: ACK_WATCH_NAMESPACE
                      value: null
                    - name: ACK_WATCH_SELECTORS
                      value: null
                    - name: RECONCILE_RESOURCES
                      value: DBCluster,DBClusterEndpoint,DBClusterParameterGroup,DBClusterSnapshot,DBInstance,DBParameterGroup,DBProxy,DBSnapshot,DBSubnetGroup,GlobalCluster
                    - name: DELETION_POLICY
                      value: delete
                    - name: LEADER_ELECTION_NAMESPACE
                      value: ""
                    - name: ACK_LOG_LEVEL
                      value: info
                    - name: ACK_RESOURCE_TAGS
                      value: services.k8s.aws/controller-version=%CONTROLLER_SERVICE%-%CONTROLLER_VERSION%,services.k8s.aws/namespace=%K8S_NAMESPACE%
                    - name: RECONCILE_DEFAULT_RESYNC_SECONDS
                      value: "36000"
                    - name: RECONCILE_DEFAULT_MAX_CONCURRENT_SYNCS
                      value: "1"
                    - name: FEATURE_GATES
                      value: ReadOnlyResources=true,ResourceAdoption=true,ServiceLevelCARM=false,TeamLevelCARM=false
                  image: ${schema.spec.values.image.repository}:${schema.spec.values.image.tag}
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    httpGet:
                      path: /healthz
                      port: 8081
                    initialDelaySeconds: 15
                    periodSeconds: 20
                  name: controller
                  ports:
                    - containerPort: 8080
                      name: http
                  readinessProbe:
                    httpGet:
                      path: /readyz
                      port: 8081
                    initialDelaySeconds: 5
                    periodSeconds: 10
                  resources:
                    limits:
                      cpu: 100m
                      memory: 128Mi
                    requests:
                      cpu: 50m
                      memory: 64Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                        - ALL
                    privileged: false
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
              dnsPolicy: ClusterFirst
              hostIPC: false
              hostNetwork: false
              hostPID: false
              nodeSelector:
                kubernetes.io/os: linux
              securityContext:
                seccompProfile:
                  type: RuntimeDefault
              serviceAccountName: ${schema.spec.values.serviceAccount.name}
              terminationGracePeriodSeconds: 10


#-------------------------------------------------------------------------------------------------------------------------------------------------#
# out/s3.rgd.yaml
#-------------------------------------------------------------------------------------------------------------------------------------------------#
apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: ack-s3-ctrl.kro.run
  namespace: kro
spec:
  schema:
    apiVersion: v1alpha1
    kind: S3controller
    spec:
      name: ${schema.spec.name}
      namespace: ${schema.spec.namespace}
      values:
        aws:
          accountID: ${schema.spec.values.aws.accountID}
          region: ${schema.spec.values.aws.region}
        deployment:
          containerPort: 8080
          replicas: 1
        iamRole:
          maxSessionDuration: 3600
          oidcProvider: ${schema.spec.values.iamRole.oidcProvider}
        image:
          deletePolicy: ${schema.spec.values.image.deletePolicy}
          repository: ${schema.spec.values.image.repository}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          tag: ${schema.spec.values.image.tag}
        log:
          enabled: ${schema.spec.values.log.enabled}
          level: ${schema.spec.values.log.level}
        serviceAccount:
          name: ${schema.spec.values.serviceAccount.name}
  resources:
    - id: customresourcedefinition-adoptedresources-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: adoptedresources.services.k8s.aws
        spec:
          group: services.k8s.aws
          names:
            kind: AdoptedResource
            listKind: AdoptedResourceList
            plural: adoptedresources
            singular: adoptedresource
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: AdoptedResource is the schema for the AdoptedResource API.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: AdoptedResourceSpec defines the desired state of the AdoptedResource.
                      properties:
                        aws:
                          description: AWSIdentifiers provide all unique ways to reference an AWS resource.
                          properties:
                            additionalKeys:
                              additionalProperties:
                                type: string
                              description: |-
                                AdditionalKeys represents any additional arbitrary identifiers used when
                                describing the target resource.
                              type: object
                            arn:
                              description: |-
                                ARN is the AWS Resource Name for the resource. It is a globally
                                unique identifier.
                              type: string
                            nameOrID:
                              description: |-
                                NameOrId is a user-supplied string identifier for the resource. It may
                                or may not be globally unique, depending on the type of resource.
                              type: string
                          type: object
                        kubernetes:
                          description: |-
                            ResourceWithMetadata provides the values necessary to create a
                            Kubernetes resource and override any of its metadata values.
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            metadata:
                              description: |-
                                ObjectMeta is metadata that all persisted resources must have, which includes all objects
                                users must create.
                                It is not possible to use `metav1.ObjectMeta` inside spec, as the controller-gen
                                automatically converts this to an arbitrary string-string map.
                                https://github.com/kubernetes-sigs/controller-tools/issues/385

                                Active discussion about inclusion of this field in the spec is happening in this PR:
                                https://github.com/kubernetes-sigs/controller-tools/pull/395

                                Until this is allowed, or if it never is, we will produce a subset of the object meta
                                that contains only the fields which the user is allowed to modify in the metadata.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    Annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                generateName:
                                  description: |-
                                    GenerateName is an optional prefix, used by the server, to generate a unique
                                    name ONLY IF the Name field has not been provided.
                                    If this field is used, the name returned to the client will be different
                                    than the name passed. This value will also be combined with a unique suffix.
                                    The provided value has the same validation rules as the Name field,
                                    and may be truncated by the length of the suffix required to make the value
                                    unique on the server.

                                    If this field is specified and the generated name exists, the server will
                                    NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
                                    ServerTimeout indicating a unique name could not be found in the time allotted, and the client
                                    should retry (optionally after the time indicated in the Retry-After header).

                                    Applied only if Name is not specified.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                                  type: string
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    Map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                                name:
                                  description: |-
                                    Name must be unique within a namespace. Is required when creating resources, although
                                    some resources may allow a client to request the generation of an appropriate name
                                    automatically. Name is primarily intended for creation idempotence and configuration
                                    definition.
                                    Cannot be updated.
                                    More info: http://kubernetes.io/docs/user-guide/identifiers#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace defines the space within each name must be unique. An empty namespace is
                                    equivalent to the "default" namespace, but "default" is the canonical representation.
                                    Not all objects are required to be scoped to a namespace - the value of this field for
                                    those objects will be empty.

                                    Must be a DNS_LABEL.
                                    Cannot be updated.
                                    More info: http://kubernetes.io/docs/user-guide/namespaces
                                  type: string
                                ownerReferences:
                                  description: |-
                                    List of objects depended by this object. If ALL objects in the list have
                                    been deleted, this object will be garbage collected. If this object is managed by a controller,
                                    then an entry in this list will point to this controller, with the controller field set to true.
                                    There cannot be more than one managing controller.
                                  items:
                                    description: |-
                                      OwnerReference contains enough information to let you identify an owning
                                      object. An owning object must be in the same namespace as the dependent, or
                                      be cluster-scoped, so there is no namespace field.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      blockOwnerDeletion:
                                        description: |-
                                          If true, AND if the owner has the "foregroundDeletion" finalizer, then
                                          the owner cannot be deleted from the key-value store until this
                                          reference is removed.
                                          See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                                          for how the garbage collector interacts with this field and enforces the foreground deletion.
                                          Defaults to false.
                                          To set this field, a user needs "delete" permission of the owner,
                                          otherwise 422 (Unprocessable Entity) will be returned.
                                        type: boolean
                                      controller:
                                        description: If true, this reference points to the managing controller.
                                        type: boolean
                                      kind:
                                        description: |-
                                          Kind of the referent.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                                        type: string
                                      uid:
                                        description: |-
                                          UID of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
                                        type: string
                                    required:
                                      - apiVersion
                                      - kind
                                      - name
                                      - uid
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                          required:
                            - group
                            - kind
                          type: object
                      required:
                        - aws
                        - kubernetes
                      type: object
                    status:
                      description: AdoptedResourceStatus defines the observed status of the AdoptedResource.
                      properties:
                        conditions:
                          description: |-
                            A collection of `ackv1alpha1.Condition` objects that describe the various
                            terminal states of the adopted resource CR and its target custom resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                      required:
                        - conditions
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-buckets-s3-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: buckets.s3.services.k8s.aws
        spec:
          group: s3.services.k8s.aws
          names:
            kind: Bucket
            listKind: BucketList
            plural: buckets
            singular: bucket
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: Bucket is the Schema for the Buckets API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        BucketSpec defines the desired state of Bucket.

                        In terms of implementation, a Bucket is a resource.
                      properties:
                        accelerate:
                          description: Container for setting the transfer acceleration state.
                          properties:
                            status:
                              type: string
                          type: object
                        acl:
                          description: |-
                            The canned ACL to apply to the bucket.

                            This functionality is not supported for directory buckets.
                          type: string
                        analytics:
                          items:
                            description: |-
                              Specifies the configuration and any analyses for the analytics filter of
                              an Amazon S3 bucket.
                            properties:
                              filter:
                                description: |-
                                  The filter used to describe a set of objects for analyses. A filter must
                                  have exactly one prefix, one tag, or one conjunction (AnalyticsAndOperator).
                                  If no filter is provided, all objects will be considered in any analysis.
                                properties:
                                  and:
                                    description: |-
                                      A conjunction (logical AND) of predicates, which is used in evaluating a
                                      metrics filter. The operator must have at least two predicates in any combination,
                                      and an object must match all of the predicates for the filter to apply.
                                    properties:
                                      prefix:
                                        type: string
                                      tags:
                                        items:
                                          description: A container of a key value name pair.
                                          properties:
                                            key:
                                              type: string
                                            value:
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  prefix:
                                    type: string
                                  tag:
                                    description: A container of a key value name pair.
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                type: object
                              id:
                                type: string
                              storageClassAnalysis:
                                description: |-
                                  Specifies data related to access patterns to be collected and made available
                                  to analyze the tradeoffs between different storage classes for an Amazon
                                  S3 bucket.
                                properties:
                                  dataExport:
                                    description: |-
                                      Container for data related to the storage class analysis for an Amazon S3
                                      bucket for export.
                                    properties:
                                      destination:
                                        description: Where to publish the analytics results.
                                        properties:
                                          s3BucketDestination:
                                            description: Contains information about where to publish the analytics results.
                                            properties:
                                              bucket:
                                                type: string
                                              bucketAccountID:
                                                type: string
                                              format:
                                                type: string
                                              prefix:
                                                type: string
                                            type: object
                                        type: object
                                      outputSchemaVersion:
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        cors:
                          description: |-
                            Describes the cross-origin access configuration for objects in an Amazon
                            S3 bucket. For more information, see Enabling Cross-Origin Resource Sharing
                            (https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the Amazon
                            S3 User Guide.
                          properties:
                            corsRules:
                              items:
                                description: Specifies a cross-origin access rule for an Amazon S3 bucket.
                                properties:
                                  allowedHeaders:
                                    items:
                                      type: string
                                    type: array
                                  allowedMethods:
                                    items:
                                      type: string
                                    type: array
                                  allowedOrigins:
                                    items:
                                      type: string
                                    type: array
                                  exposeHeaders:
                                    items:
                                      type: string
                                    type: array
                                  id:
                                    type: string
                                  maxAgeSeconds:
                                    format: int64
                                    type: integer
                                type: object
                              type: array
                          type: object
                        createBucketConfiguration:
                          description: The configuration information for the bucket.
                          properties:
                            locationConstraint:
                              type: string
                          type: object
                        encryption:
                          description: Specifies the default server-side-encryption configuration.
                          properties:
                            rules:
                              items:
                                description: |-
                                  Specifies the default server-side encryption configuration.

                                    - General purpose buckets - If you're specifying a customer managed KMS
                                      key, we recommend using a fully qualified KMS key ARN. If you use a KMS
                                      key alias instead, then KMS resolves the key within the requester’s
                                      account. This behavior can result in data that's encrypted with a KMS
                                      key that belongs to the requester, and not the bucket owner.

                                    - Directory buckets - When you specify an KMS customer managed key (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk)
                                      for encryption in your directory bucket, only use the key ID or key ARN.
                                      The key alias format of the KMS key isn't supported.
                                properties:
                                  applyServerSideEncryptionByDefault:
                                    description: |-
                                      Describes the default server-side encryption to apply to new objects in the
                                      bucket. If a PUT Object request doesn't specify any server-side encryption,
                                      this default encryption will be applied. For more information, see PutBucketEncryption
                                      (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html).

                                         * General purpose buckets - If you don't specify a customer managed key
                                         at configuration, Amazon S3 automatically creates an Amazon Web Services
                                         KMS key (aws/s3) in your Amazon Web Services account the first time that
                                         you add an object encrypted with SSE-KMS to a bucket. By default, Amazon
                                         S3 uses this KMS key for SSE-KMS.

                                         * Directory buckets - Your SSE-KMS configuration can only support 1 customer
                                         managed key (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk)
                                         per directory bucket for the lifetime of the bucket. The Amazon Web Services
                                         managed key (https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#aws-managed-cmk)
                                         (aws/s3) isn't supported.

                                         * Directory buckets - For directory buckets, there are only two supported
                                         options for server-side encryption: SSE-S3 and SSE-KMS.
                                    properties:
                                      kmsMasterKeyID:
                                        type: string
                                      sseAlgorithm:
                                        type: string
                                    type: object
                                  bucketKeyEnabled:
                                    type: boolean
                                type: object
                              type: array
                          type: object
                        grantFullControl:
                          description: |-
                            Allows grantee the read, write, read ACP, and write ACP permissions on the
                            bucket.

                            This functionality is not supported for directory buckets.
                          type: string
                        grantRead:
                          description: |-
                            Allows grantee to list the objects in the bucket.

                            This functionality is not supported for directory buckets.
                          type: string
                        grantReadACP:
                          description: |-
                            Allows grantee to read the bucket ACL.

                            This functionality is not supported for directory buckets.
                          type: string
                        grantWrite:
                          description: |-
                            Allows grantee to create new objects in the bucket.

                            For the bucket and object owners of existing objects, also allows deletions
                            and overwrites of those objects.

                            This functionality is not supported for directory buckets.
                          type: string
                        grantWriteACP:
                          description: |-
                            Allows grantee to write the ACL for the applicable bucket.

                            This functionality is not supported for directory buckets.
                          type: string
                        intelligentTiering:
                          items:
                            description: |-
                              Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.

                              For information about the S3 Intelligent-Tiering storage class, see Storage
                              class for automatically optimizing frequently and infrequently accessed objects
                              (https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access).
                            properties:
                              filter:
                                description: |-
                                  The Filter is used to identify objects that the S3 Intelligent-Tiering configuration
                                  applies to.
                                properties:
                                  and:
                                    description: |-
                                      A container for specifying S3 Intelligent-Tiering filters. The filters determine
                                      the subset of objects to which the rule applies.
                                    properties:
                                      prefix:
                                        type: string
                                      tags:
                                        items:
                                          description: A container of a key value name pair.
                                          properties:
                                            key:
                                              type: string
                                            value:
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  prefix:
                                    type: string
                                  tag:
                                    description: A container of a key value name pair.
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                type: object
                              id:
                                type: string
                              status:
                                type: string
                              tierings:
                                items:
                                  description: |-
                                    The S3 Intelligent-Tiering storage class is designed to optimize storage
                                    costs by automatically moving data to the most cost-effective storage access
                                    tier, without additional operational overhead.
                                  properties:
                                    accessTier:
                                      type: string
                                    days:
                                      format: int64
                                      type: integer
                                  type: object
                                type: array
                            type: object
                          type: array
                        inventory:
                          items:
                            description: |-
                              Specifies the inventory configuration for an Amazon S3 bucket. For more information,
                              see GET Bucket inventory (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html)
                              in the Amazon S3 API Reference.
                            properties:
                              destination:
                                description: Specifies the inventory configuration for an Amazon S3 bucket.
                                properties:
                                  s3BucketDestination:
                                    description: |-
                                      Contains the bucket name, file format, bucket owner (optional), and prefix
                                      (optional) where inventory results are published.
                                    properties:
                                      accountID:
                                        type: string
                                      bucket:
                                        type: string
                                      encryption:
                                        description: |-
                                          Contains the type of server-side encryption used to encrypt the inventory
                                          results.
                                        properties:
                                          sseKMS:
                                            description: Specifies the use of SSE-KMS to encrypt delivered inventory reports.
                                            properties:
                                              keyID:
                                                type: string
                                            type: object
                                        type: object
                                      format:
                                        type: string
                                      prefix:
                                        type: string
                                    type: object
                                type: object
                              filter:
                                description: |-
                                  Specifies an inventory filter. The inventory only includes objects that meet
                                  the filter's criteria.
                                properties:
                                  prefix:
                                    type: string
                                type: object
                              id:
                                type: string
                              includedObjectVersions:
                                type: string
                              isEnabled:
                                type: boolean
                              optionalFields:
                                items:
                                  type: string
                                type: array
                              schedule:
                                description: Specifies the schedule for generating inventory results.
                                properties:
                                  frequency:
                                    type: string
                                type: object
                            type: object
                          type: array
                        lifecycle:
                          description: Container for lifecycle rules. You can add as many as 1,000 rules.
                          properties:
                            rules:
                              items:
                                description: |-
                                  A lifecycle rule for individual objects in an Amazon S3 bucket.

                                  For more information see, Managing your storage lifecycle (https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html)
                                  in the Amazon S3 User Guide.
                                properties:
                                  abortIncompleteMultipartUpload:
                                    description: |-
                                      Specifies the days since the initiation of an incomplete multipart upload
                                      that Amazon S3 will wait before permanently removing all parts of the upload.
                                      For more information, see Aborting Incomplete Multipart Uploads Using a Bucket
                                      Lifecycle Configuration (https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config)
                                      in the Amazon S3 User Guide.
                                    properties:
                                      daysAfterInitiation:
                                        format: int64
                                        type: integer
                                    type: object
                                  expiration:
                                    description: |-
                                      Container for the expiration for the lifecycle of the object.

                                      For more information see, Managing your storage lifecycle (https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html)
                                      in the Amazon S3 User Guide.
                                    properties:
                                      date:
                                        format: date-time
                                        type: string
                                      days:
                                        format: int64
                                        type: integer
                                      expiredObjectDeleteMarker:
                                        type: boolean
                                    type: object
                                  filter:
                                    description: |-
                                      The Filter is used to identify objects that a Lifecycle Rule applies to.
                                      A Filter can have exactly one of Prefix, Tag, ObjectSizeGreaterThan, ObjectSizeLessThan,
                                      or And specified. If the Filter element is left empty, the Lifecycle Rule
                                      applies to all objects in the bucket.
                                    properties:
                                      and:
                                        description: |-
                                          This is used in a Lifecycle Rule Filter to apply a logical AND to two or
                                          more predicates. The Lifecycle Rule will apply to any object matching all
                                          of the predicates configured inside the And operator.
                                        properties:
                                          objectSizeGreaterThan:
                                            format: int64
                                            type: integer
                                          objectSizeLessThan:
                                            format: int64
                                            type: integer
                                          prefix:
                                            type: string
                                          tags:
                                            items:
                                              description: A container of a key value name pair.
                                              properties:
                                                key:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      objectSizeGreaterThan:
                                        format: int64
                                        type: integer
                                      objectSizeLessThan:
                                        format: int64
                                        type: integer
                                      prefix:
                                        type: string
                                      tag:
                                        description: A container of a key value name pair.
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string
                                        type: object
                                    type: object
                                  id:
                                    type: string
                                  noncurrentVersionExpiration:
                                    description: |-
                                      Specifies when noncurrent object versions expire. Upon expiration, Amazon
                                      S3 permanently deletes the noncurrent object versions. You set this lifecycle
                                      configuration action on a bucket that has versioning enabled (or suspended)
                                      to request that Amazon S3 delete noncurrent object versions at a specific
                                      period in the object's lifetime.

                                      This parameter applies to general purpose buckets only. It is not supported
                                      for directory bucket lifecycle configurations.
                                    properties:
                                      newerNoncurrentVersions:
                                        format: int64
                                        type: integer
                                      noncurrentDays:
                                        format: int64
                                        type: integer
                                    type: object
                                  noncurrentVersionTransitions:
                                    items:
                                      description: |-
                                        Container for the transition rule that describes when noncurrent objects
                                        transition to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER_IR,
                                        GLACIER, or DEEP_ARCHIVE storage class. If your bucket is versioning-enabled
                                        (or versioning is suspended), you can set this action to request that Amazon
                                        S3 transition noncurrent object versions to the STANDARD_IA, ONEZONE_IA,
                                        INTELLIGENT_TIERING, GLACIER_IR, GLACIER, or DEEP_ARCHIVE storage class at
                                        a specific period in the object's lifetime.
                                      properties:
                                        newerNoncurrentVersions:
                                          format: int64
                                          type: integer
                                        noncurrentDays:
                                          format: int64
                                          type: integer
                                        storageClass:
                                          type: string
                                      type: object
                                    type: array
                                  prefix:
                                    type: string
                                  status:
                                    type: string
                                  transitions:
                                    items:
                                      description: |-
                                        Specifies when an object transitions to a specified storage class. For more
                                        information about Amazon S3 lifecycle configuration rules, see Transitioning
                                        Objects Using Amazon S3 Lifecycle (https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html)
                                        in the Amazon S3 User Guide.
                                      properties:
                                        date:
                                          format: date-time
                                          type: string
                                        days:
                                          format: int64
                                          type: integer
                                        storageClass:
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                          type: object
                        logging:
                          description: Container for logging status information.
                          properties:
                            loggingEnabled:
                              description: |-
                                Describes where logs are stored and the prefix that Amazon S3 assigns to
                                all log object keys for a bucket. For more information, see PUT Bucket logging
                                (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html)
                                in the Amazon S3 API Reference.
                              properties:
                                targetBucket:
                                  type: string
                                targetGrants:
                                  items:
                                    description: |-
                                      Container for granting information.

                                      Buckets that use the bucket owner enforced setting for Object Ownership don't
                                      support target grants. For more information, see Permissions server access
                                      log delivery (https://docs.aws.amazon.com/AmazonS3/latest/userguide/enable-server-access-logging.html#grant-log-delivery-permissions-general)
                                      in the Amazon S3 User Guide.
                                    properties:
                                      grantee:
                                        description: Container for the person being granted permissions.
                                        properties:
                                          displayName:
                                            type: string
                                          emailAddress:
                                            type: string
                                          id:
                                            type: string
                                          type_:
                                            type: string
                                          uRI:
                                            type: string
                                        type: object
                                      permission:
                                        type: string
                                    type: object
                                  type: array
                                targetPrefix:
                                  type: string
                              type: object
                          type: object
                        metrics:
                          items:
                            description: |-
                              Specifies a metrics configuration for the CloudWatch request metrics (specified
                              by the metrics configuration ID) from an Amazon S3 bucket. If you're updating
                              an existing metrics configuration, note that this is a full replacement of
                              the existing metrics configuration. If you don't include the elements you
                              want to keep, they are erased. For more information, see PutBucketMetricsConfiguration
                              (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html).
                            properties:
                              filter:
                                description: |-
                                  Specifies a metrics configuration filter. The metrics configuration only
                                  includes objects that meet the filter's criteria. A filter must be a prefix,
                                  an object tag, an access point ARN, or a conjunction (MetricsAndOperator).
                                  For more information, see PutBucketMetricsConfiguration (https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketMetricsConfiguration.html).
                                properties:
                                  accessPointARN:
                                    type: string
                                  and:
                                    description: |-
                                      A conjunction (logical AND) of predicates, which is used in evaluating a
                                      metrics filter. The operator must have at least two predicates, and an object
                                      must match all of the predicates in order for the filter to apply.
                                    properties:
                                      accessPointARN:
                                        type: string
                                      prefix:
                                        type: string
                                      tags:
                                        items:
                                          description: A container of a key value name pair.
                                          properties:
                                            key:
                                              type: string
                                            value:
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  prefix:
                                    type: string
                                  tag:
                                    description: A container of a key value name pair.
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                type: object
                              id:
                                type: string
                            type: object
                          type: array
                        name:
                          description: |-
                            The name of the bucket to create.

                            General purpose buckets - For information about bucket naming restrictions,
                            see Bucket naming rules (https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html)
                            in the Amazon S3 User Guide.

                            Directory buckets - When you use this operation with a directory bucket,
                            you must use path-style requests in the format https://s3express-control.region-code.amazonaws.com/bucket-name
                            . Virtual-hosted-style requests aren't supported. Directory bucket names
                            must be unique in the chosen Zone (Availability Zone or Local Zone). Bucket
                            names must also follow the format bucket-base-name--zone-id--x-s3 (for example,
                            DOC-EXAMPLE-BUCKET--usw2-az1--x-s3). For information about bucket naming
                            restrictions, see Directory bucket naming rules (https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-bucket-naming-rules.html)
                            in the Amazon S3 User Guide
                          type: string
                          x-kubernetes-validations:
                            - message: Value is immutable once set
                              rule: self == oldSelf
                        notification:
                          description: |-
                            A container for specifying the notification configuration of the bucket.
                            If this element is empty, notifications are turned off for the bucket.
                          properties:
                            lambdaFunctionConfigurations:
                              items:
                                description: A container for specifying the configuration for Lambda notifications.
                                properties:
                                  events:
                                    items:
                                      type: string
                                    type: array
                                  filter:
                                    description: |-
                                      Specifies object key name filtering rules. For information about key name
                                      filtering, see Configuring event notifications using object key name filtering
                                      (https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html)
                                      in the Amazon S3 User Guide.
                                    properties:
                                      key:
                                        description: A container for object key name prefix and suffix filtering rules.
                                        properties:
                                          filterRules:
                                            description: |-
                                              A list of containers for the key-value pair that defines the criteria for
                                              the filter rule.
                                            items:
                                              description: |-
                                                Specifies the Amazon S3 object key name to filter on. An object key name
                                                is the name assigned to an object in your Amazon S3 bucket. You specify whether
                                                to filter on the suffix or prefix of the object key name. A prefix is a specific
                                                string of characters at the beginning of an object key name, which you can
                                                use to organize objects. For example, you can start the key names of related
                                                objects with a prefix, such as 2023- or engineering/. Then, you can use FilterRule
                                                to find objects in a bucket with key names that have the same prefix. A suffix
                                                is similar to a prefix, but it is at the end of the object key name instead
                                                of at the beginning.
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  id:
                                    description: |-
                                      An optional unique identifier for configurations in a notification configuration.
                                      If you don't provide one, Amazon S3 will assign an ID.
                                    type: string
                                  lambdaFunctionARN:
                                    type: string
                                type: object
                              type: array
                            queueConfigurations:
                              items:
                                description: |-
                                  Specifies the configuration for publishing messages to an Amazon Simple Queue
                                  Service (Amazon SQS) queue when Amazon S3 detects specified events.
                                properties:
                                  events:
                                    items:
                                      type: string
                                    type: array
                                  filter:
                                    description: |-
                                      Specifies object key name filtering rules. For information about key name
                                      filtering, see Configuring event notifications using object key name filtering
                                      (https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html)
                                      in the Amazon S3 User Guide.
                                    properties:
                                      key:
                                        description: A container for object key name prefix and suffix filtering rules.
                                        properties:
                                          filterRules:
                                            description: |-
                                              A list of containers for the key-value pair that defines the criteria for
                                              the filter rule.
                                            items:
                                              description: |-
                                                Specifies the Amazon S3 object key name to filter on. An object key name
                                                is the name assigned to an object in your Amazon S3 bucket. You specify whether
                                                to filter on the suffix or prefix of the object key name. A prefix is a specific
                                                string of characters at the beginning of an object key name, which you can
                                                use to organize objects. For example, you can start the key names of related
                                                objects with a prefix, such as 2023- or engineering/. Then, you can use FilterRule
                                                to find objects in a bucket with key names that have the same prefix. A suffix
                                                is similar to a prefix, but it is at the end of the object key name instead
                                                of at the beginning.
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  id:
                                    description: |-
                                      An optional unique identifier for configurations in a notification configuration.
                                      If you don't provide one, Amazon S3 will assign an ID.
                                    type: string
                                  queueARN:
                                    type: string
                                type: object
                              type: array
                            topicConfigurations:
                              items:
                                description: |-
                                  A container for specifying the configuration for publication of messages
                                  to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3
                                  detects specified events.
                                properties:
                                  events:
                                    items:
                                      type: string
                                    type: array
                                  filter:
                                    description: |-
                                      Specifies object key name filtering rules. For information about key name
                                      filtering, see Configuring event notifications using object key name filtering
                                      (https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html)
                                      in the Amazon S3 User Guide.
                                    properties:
                                      key:
                                        description: A container for object key name prefix and suffix filtering rules.
                                        properties:
                                          filterRules:
                                            description: |-
                                              A list of containers for the key-value pair that defines the criteria for
                                              the filter rule.
                                            items:
                                              description: |-
                                                Specifies the Amazon S3 object key name to filter on. An object key name
                                                is the name assigned to an object in your Amazon S3 bucket. You specify whether
                                                to filter on the suffix or prefix of the object key name. A prefix is a specific
                                                string of characters at the beginning of an object key name, which you can
                                                use to organize objects. For example, you can start the key names of related
                                                objects with a prefix, such as 2023- or engineering/. Then, you can use FilterRule
                                                to find objects in a bucket with key names that have the same prefix. A suffix
                                                is similar to a prefix, but it is at the end of the object key name instead
                                                of at the beginning.
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                    type: object
                                  id:
                                    description: |-
                                      An optional unique identifier for configurations in a notification configuration.
                                      If you don't provide one, Amazon S3 will assign an ID.
                                    type: string
                                  topicARN:
                                    type: string
                                type: object
                              type: array
                          type: object
                        objectLockEnabledForBucket:
                          description: |-
                            Specifies whether you want S3 Object Lock to be enabled for the new bucket.

                            This functionality is not supported for directory buckets.
                          type: boolean
                        objectOwnership:
                          type: string
                        ownershipControls:
                          description: |-
                            The OwnershipControls (BucketOwnerEnforced, BucketOwnerPreferred, or ObjectWriter)
                            that you want to apply to this Amazon S3 bucket.
                          properties:
                            rules:
                              items:
                                description: The container element for an ownership control rule.
                                properties:
                                  objectOwnership:
                                    description: |-
                                      The container element for object ownership for a bucket's ownership controls.

                                      BucketOwnerPreferred - Objects uploaded to the bucket change ownership to
                                      the bucket owner if the objects are uploaded with the bucket-owner-full-control
                                      canned ACL.

                                      ObjectWriter - The uploading account will own the object if the object is
                                      uploaded with the bucket-owner-full-control canned ACL.

                                      BucketOwnerEnforced - Access control lists (ACLs) are disabled and no longer
                                      affect permissions. The bucket owner automatically owns and has full control
                                      over every object in the bucket. The bucket only accepts PUT requests that
                                      don't specify an ACL or specify bucket owner full control ACLs (such as the
                                      predefined bucket-owner-full-control canned ACL or a custom ACL in XML format
                                      that grants the same permissions).

                                      By default, ObjectOwnership is set to BucketOwnerEnforced and ACLs are disabled.
                                      We recommend keeping ACLs disabled, except in uncommon use cases where you
                                      must control access for each object individually. For more information about
                                      S3 Object Ownership, see Controlling ownership of objects and disabling ACLs
                                      for your bucket (https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html)
                                      in the Amazon S3 User Guide.

                                      This functionality is not supported for directory buckets. Directory buckets
                                      use the bucket owner enforced setting for S3 Object Ownership.
                                    type: string
                                type: object
                              type: array
                          type: object
                        policy:
                          description: |-
                            The bucket policy as a JSON document.

                            For directory buckets, the only IAM action supported in the bucket policy
                            is s3express:CreateSession.
                          type: string
                        publicAccessBlock:
                          description: |-
                            The PublicAccessBlock configuration that you want to apply to this Amazon
                            S3 bucket. You can enable the configuration options in any combination. For
                            more information about when Amazon S3 considers a bucket or object public,
                            see The Meaning of "Public" (https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status)
                            in the Amazon S3 User Guide.
                          properties:
                            blockPublicACLs:
                              type: boolean
                            blockPublicPolicy:
                              type: boolean
                            ignorePublicACLs:
                              type: boolean
                            restrictPublicBuckets:
                              type: boolean
                          type: object
                        replication:
                          description: |-
                            A container for replication rules. You can add up to 1,000 rules. The maximum
                            size of a replication configuration is 2 MB.
                          properties:
                            role:
                              type: string
                            rules:
                              items:
                                description: Specifies which Amazon S3 objects to replicate and where to store the replicas.
                                properties:
                                  deleteMarkerReplication:
                                    description: |-
                                      Specifies whether Amazon S3 replicates delete markers. If you specify a Filter
                                      in your replication configuration, you must also include a DeleteMarkerReplication
                                      element. If your Filter includes a Tag element, the DeleteMarkerReplication
                                      Status must be set to Disabled, because Amazon S3 does not support replicating
                                      delete markers for tag-based rules. For an example configuration, see Basic
                                      Rule Configuration (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config).

                                      For more information about delete marker replication, see Basic Rule Configuration
                                      (https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html).

                                      If you are using an earlier version of the replication configuration, Amazon
                                      S3 handles replication of delete markers differently. For more information,
                                      see Backward Compatibility (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
                                    properties:
                                      status:
                                        type: string
                                    type: object
                                  destination:
                                    description: |-
                                      Specifies information about where to publish analysis or configuration results
                                      for an Amazon S3 bucket and S3 Replication Time Control (S3 RTC).
                                    properties:
                                      accessControlTranslation:
                                        description: A container for information about access control for replicas.
                                        properties:
                                          owner:
                                            type: string
                                        type: object
                                      account:
                                        type: string
                                      bucket:
                                        type: string
                                      encryptionConfiguration:
                                        description: |-
                                          Specifies encryption-related information for an Amazon S3 bucket that is
                                          a destination for replicated objects.

                                          If you're specifying a customer managed KMS key, we recommend using a fully
                                          qualified KMS key ARN. If you use a KMS key alias instead, then KMS resolves
                                          the key within the requester’s account. This behavior can result in data
                                          that's encrypted with a KMS key that belongs to the requester, and not the
                                          bucket owner.
                                        properties:
                                          replicaKMSKeyID:
                                            type: string
                                        type: object
                                      metrics:
                                        description: |-
                                          A container specifying replication metrics-related settings enabling replication
                                          metrics and events.
                                        properties:
                                          eventThreshold:
                                            description: |-
                                              A container specifying the time value for S3 Replication Time Control (S3
                                              RTC) and replication metrics EventThreshold.
                                            properties:
                                              minutes:
                                                format: int64
                                                type: integer
                                            type: object
                                          status:
                                            type: string
                                        type: object
                                      replicationTime:
                                        description: |-
                                          A container specifying S3 Replication Time Control (S3 RTC) related information,
                                          including whether S3 RTC is enabled and the time when all objects and operations
                                          on objects must be replicated. Must be specified together with a Metrics
                                          block.
                                        properties:
                                          status:
                                            type: string
                                          time:
                                            description: |-
                                              A container specifying the time value for S3 Replication Time Control (S3
                                              RTC) and replication metrics EventThreshold.
                                            properties:
                                              minutes:
                                                format: int64
                                                type: integer
                                            type: object
                                        type: object
                                      storageClass:
                                        type: string
                                    type: object
                                  existingObjectReplication:
                                    description: |-
                                      Optional configuration to replicate existing source bucket objects.

                                      This parameter is no longer supported. To replicate existing objects, see
                                      Replicating existing objects with S3 Batch Replication (https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-batch-replication-batch.html)
                                      in the Amazon S3 User Guide.
                                    properties:
                                      status:
                                        type: string
                                    type: object
                                  filter:
                                    description: |-
                                      A filter that identifies the subset of objects to which the replication rule
                                      applies. A Filter must specify exactly one Prefix, Tag, or an And child element.
                                    properties:
                                      and:
                                        description: |-
                                          A container for specifying rule filters. The filters determine the subset
                                          of objects to which the rule applies. This element is required only if you
                                          specify more than one filter.

                                          For example:

                                             * If you specify both a Prefix and a Tag filter, wrap these filters in
                                             an And tag.

                                             * If you specify a filter based on multiple tags, wrap the Tag elements
                                             in an And tag.
                                        properties:
                                          prefix:
                                            type: string
                                          tags:
                                            items:
                                              description: A container of a key value name pair.
                                              properties:
                                                key:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      prefix:
                                        type: string
                                      tag:
                                        description: A container of a key value name pair.
                                        properties:
                                          key:
                                            type: string
                                          value:
                                            type: string
                                        type: object
                                    type: object
                                  id:
                                    type: string
                                  prefix:
                                    type: string
                                  priority:
                                    format: int64
                                    type: integer
                                  sourceSelectionCriteria:
                                    description: |-
                                      A container that describes additional filters for identifying the source
                                      objects that you want to replicate. You can choose to enable or disable the
                                      replication of these objects. Currently, Amazon S3 supports only the filter
                                      that you can specify for objects created with server-side encryption using
                                      a customer managed key stored in Amazon Web Services Key Management Service
                                      (SSE-KMS).
                                    properties:
                                      replicaModifications:
                                        description: |-
                                          A filter that you can specify for selection for modifications on replicas.
                                          Amazon S3 doesn't replicate replica modifications by default. In the latest
                                          version of replication configuration (when Filter is specified), you can
                                          specify this element and set the status to Enabled to replicate modifications
                                          on replicas.

                                          If you don't specify the Filter element, Amazon S3 assumes that the replication
                                          configuration is the earlier version, V1. In the earlier version, this element
                                          is not allowed.
                                        properties:
                                          status:
                                            type: string
                                        type: object
                                      sseKMSEncryptedObjects:
                                        description: |-
                                          A container for filter information for the selection of S3 objects encrypted
                                          with Amazon Web Services KMS.
                                        properties:
                                          status:
                                            type: string
                                        type: object
                                    type: object
                                  status:
                                    type: string
                                type: object
                              type: array
                          type: object
                        requestPayment:
                          description: Container for Payer.
                          properties:
                            payer:
                              type: string
                          type: object
                        tagging:
                          description: Container for the TagSet and Tag elements.
                          properties:
                            tagSet:
                              items:
                                description: A container of a key value name pair.
                                properties:
                                  key:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                          type: object
                        versioning:
                          description: Container for setting the versioning state.
                          properties:
                            status:
                              type: string
                          type: object
                        website:
                          description: Container for the request.
                          properties:
                            errorDocument:
                              description: The error information.
                              properties:
                                key:
                                  type: string
                              type: object
                            indexDocument:
                              description: Container for the Suffix element.
                              properties:
                                suffix:
                                  type: string
                              type: object
                            redirectAllRequestsTo:
                              description: |-
                                Specifies the redirect behavior of all requests to a website endpoint of
                                an Amazon S3 bucket.
                              properties:
                                hostName:
                                  type: string
                                protocol:
                                  type: string
                              type: object
                            routingRules:
                              items:
                                description: |-
                                  Specifies the redirect behavior and when a redirect is applied. For more
                                  information about routing rules, see Configuring advanced conditional redirects
                                  (https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects)
                                  in the Amazon S3 User Guide.
                                properties:
                                  condition:
                                    description: |-
                                      A container for describing a condition that must be met for the specified
                                      redirect to apply. For example, 1. If request is for pages in the /docs folder,
                                      redirect to the /documents folder. 2. If request results in HTTP error 4xx,
                                      redirect request to another host where you might process the error.
                                    properties:
                                      httpErrorCodeReturnedEquals:
                                        type: string
                                      keyPrefixEquals:
                                        type: string
                                    type: object
                                  redirect:
                                    description: |-
                                      Specifies how requests are redirected. In the event of an error, you can
                                      specify a different error code to return.
                                    properties:
                                      hostName:
                                        type: string
                                      httpRedirectCode:
                                        type: string
                                      protocol:
                                        type: string
                                      replaceKeyPrefixWith:
                                        type: string
                                      replaceKeyWith:
                                        type: string
                                    type: object
                                type: object
                              type: array
                          type: object
                      required:
                        - name
                      type: object
                    status:
                      description: BucketStatus defines the observed state of Bucket
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        location:
                          description: A forward slash followed by the name of the bucket.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-fieldexports-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: fieldexports.services.k8s.aws
        spec:
          group: services.k8s.aws
          names:
            kind: FieldExport
            listKind: FieldExportList
            plural: fieldexports
            singular: fieldexport
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: FieldExport is the schema for the FieldExport API.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: FieldExportSpec defines the desired state of the FieldExport.
                      properties:
                        from:
                          description: |-
                            ResourceFieldSelector provides the values necessary to identify an individual
                            field on an individual K8s resource.
                          properties:
                            path:
                              type: string
                            resource:
                              description: |-
                                NamespacedResource provides all the values necessary to identify an ACK
                                resource of a given type (within the same namespace as the custom resource
                                containing this type).
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                name:
                                  type: string
                              required:
                                - group
                                - kind
                                - name
                              type: object
                          required:
                            - path
                            - resource
                          type: object
                        to:
                          description: |-
                            FieldExportTarget provides the values necessary to identify the
                            output path for a field export.
                          properties:
                            key:
                              description: Key overrides the default value (`<namespace>.<FieldExport-resource-name>`) for the FieldExport target
                              type: string
                            kind:
                              description: |-
                                FieldExportOutputType represents all types that can be produced by a field
                                export operation
                              enum:
                                - configmap
                                - secret
                              type: string
                            name:
                              type: string
                            namespace:
                              description: Namespace is marked as optional, so we cannot compose `NamespacedName`
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                      required:
                        - from
                        - to
                      type: object
                    status:
                      description: FieldExportStatus defines the observed status of the FieldExport.
                      properties:
                        conditions:
                          description: |-
                            A collection of `ackv1alpha1.Condition` objects that describe the various
                            recoverable states of the field CR
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                      required:
                        - conditions
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: serviceaccount---schema-spec-values-serviceaccount-name
      template:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          annotations:
            eks.amazonaws.com/role-arn: ${ackIamRole.status.ackResourceMetadata.arn}
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: s3-chart
            app.kubernetes.io/version: 1.1.1
            helm.sh/chart: s3-chart-1.1.1
            k8s-app: s3-chart
          name: ${schema.spec.values.serviceAccount.name}
          namespace: ${schema.spec.namespace}
    - id: clusterrole---schema-spec-name--s3-chart
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: s3-chart
            app.kubernetes.io/version: 1.1.1
            helm.sh/chart: s3-chart-1.1.1
            k8s-app: s3-chart
          name: ${schema.spec.name}-s3-chart
        rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
              - secrets
            verbs:
              - get
              - list
              - patch
              - watch
          - apiGroups:
              - ""
            resources:
              - namespaces
            verbs:
              - get
              - list
              - watch
          - apiGroups:
              - s3.services.k8s.aws
            resources:
              - buckets
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - s3.services.k8s.aws
            resources:
              - buckets/status
            verbs:
              - get
              - patch
              - update
          - apiGroups:
              - services.k8s.aws
            resources:
              - adoptedresources
              - fieldexports
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - services.k8s.aws
            resources:
              - adoptedresources/status
              - fieldexports/status
            verbs:
              - get
              - patch
              - update
    - id: clusterrole---schema-spec-name--s3-chart-namespaces-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: s3-chart
            app.kubernetes.io/version: 1.1.1
            helm.sh/chart: s3-chart-1.1.1
            k8s-app: s3-chart
          name: ${schema.spec.name}-s3-chart-namespaces-cache
        rules:
          - apiGroups:
              - ""
            resources:
              - namespaces
            verbs:
              - get
              - list
              - watch
    - id: clusterrolebinding---schema-spec-name--s3-chart-namespaces-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: s3-chart
            app.kubernetes.io/version: 1.1.1
            helm.sh/chart: s3-chart-1.1.1
            k8s-app: s3-chart
          name: ${schema.spec.name}-s3-chart-namespaces-cache
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: ${schema.spec.name}-s3-chart-namespaces-cache
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: clusterrolebinding---schema-spec-name--s3-chart-rolebinding
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: s3-chart
            app.kubernetes.io/version: 1.1.1
            helm.sh/chart: s3-chart-1.1.1
            k8s-app: s3-chart
          name: ${schema.spec.name}-s3-chart-rolebinding
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: ${schema.spec.name}-s3-chart
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: role---schema-spec-name--s3-chart-configmaps-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: s3-chart
            app.kubernetes.io/version: 1.1.1
            helm.sh/chart: s3-chart-1.1.1
            k8s-app: s3-chart
          name: ${schema.spec.name}-s3-chart-configmaps-cache
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
            verbs:
              - get
              - list
              - watch
    - id: role---schema-spec-name--s3-chart-reader
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: s3-chart
            app.kubernetes.io/version: 1.1.1
            helm.sh/chart: s3-chart-1.1.1
            k8s-app: s3-chart
          name: ${schema.spec.name}-s3-chart-reader
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - s3.services.k8s.aws
            resources:
              - buckets
            verbs:
              - get
              - list
              - watch
    - id: role---schema-spec-name--s3-chart-writer
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: s3-chart
            app.kubernetes.io/version: 1.1.1
            helm.sh/chart: s3-chart-1.1.1
            k8s-app: s3-chart
          name: ${schema.spec.name}-s3-chart-writer
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - s3.services.k8s.aws
            resources:
              - buckets
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - s3.services.k8s.aws
            resources:
              - buckets
            verbs:
              - get
              - patch
              - update
    - id: rolebinding---schema-spec-name--s3-chart-configmaps-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: s3-chart
            app.kubernetes.io/version: 1.1.1
            helm.sh/chart: s3-chart-1.1.1
            k8s-app: s3-chart
          name: ${schema.spec.name}-s3-chart-configmaps-cache
          namespace: ${schema.spec.namespace}
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: ${schema.spec.name}-s3-chart-configmaps-cache
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: deployment---schema-spec-name--s3-chart
      template:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: s3-chart
            app.kubernetes.io/version: 1.1.1
            helm.sh/chart: s3-chart-1.1.1
            k8s-app: s3-chart
          name: ${schema.spec.name}-s3-chart
          namespace: ${schema.spec.namespace}
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: ${schema.spec.name}
              app.kubernetes.io/name: s3-chart
          template:
            metadata:
              labels:
                app.kubernetes.io/instance: ${schema.spec.name}
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: s3-chart
                k8s-app: s3-chart
            spec:
              containers:
                - args:
                    - --aws-region
                    - $(AWS_REGION)
                    - --aws-endpoint-url
                    - $(AWS_ENDPOINT_URL)
                    - --log-level
                    - $(ACK_LOG_LEVEL)
                    - --resource-tags
                    - $(ACK_RESOURCE_TAGS)
                    - --watch-namespace
                    - $(ACK_WATCH_NAMESPACE)
                    - --watch-selectors
                    - $(ACK_WATCH_SELECTORS)
                    - --reconcile-resources
                    - $(RECONCILE_RESOURCES)
                    - --deletion-policy
                    - $(DELETION_POLICY)
                    - --reconcile-default-resync-seconds
                    - $(RECONCILE_DEFAULT_RESYNC_SECONDS)
                    - --reconcile-default-max-concurrent-syncs
                    - $(RECONCILE_DEFAULT_MAX_CONCURRENT_SYNCS)
                    - --feature-gates
                    - $(FEATURE_GATES)
                    - --enable-carm=true
                  command:
                    - ./bin/controller
                  env:
                    - name: ACK_SYSTEM_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: AWS_REGION
                      value: ${schema.spec.values.aws.region}
                    - name: AWS_ENDPOINT_URL
                      value: ""
                    - name: ACK_WATCH_NAMESPACE
                      value: null
                    - name: ACK_WATCH_SELECTORS
                      value: null
                    - name: RECONCILE_RESOURCES
                      value: Bucket
                    - name: DELETION_POLICY
                      value: delete
                    - name: LEADER_ELECTION_NAMESPACE
                      value: ""
                    - name: ACK_LOG_LEVEL
                      value: info
                    - name: ACK_RESOURCE_TAGS
                      value: services.k8s.aws/controller-version=%CONTROLLER_SERVICE%-%CONTROLLER_VERSION%,services.k8s.aws/namespace=%K8S_NAMESPACE%
                    - name: RECONCILE_DEFAULT_RESYNC_SECONDS
                      value: "36000"
                    - name: RECONCILE_DEFAULT_MAX_CONCURRENT_SYNCS
                      value: "1"
                    - name: FEATURE_GATES
                      value: ReadOnlyResources=true,ResourceAdoption=true,ServiceLevelCARM=false,TeamLevelCARM=false
                  image: ${schema.spec.values.image.repository}:${schema.spec.values.image.tag}
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    httpGet:
                      path: /healthz
                      port: 8081
                    initialDelaySeconds: 15
                    periodSeconds: 20
                  name: controller
                  ports:
                    - containerPort: 8080
                      name: http
                  readinessProbe:
                    httpGet:
                      path: /readyz
                      port: 8081
                    initialDelaySeconds: 5
                    periodSeconds: 10
                  resources:
                    limits:
                      cpu: 100m
                      memory: 128Mi
                    requests:
                      cpu: 50m
                      memory: 64Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                        - ALL
                    privileged: false
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
              dnsPolicy: ClusterFirst
              hostIPC: false
              hostNetwork: false
              hostPID: false
              nodeSelector:
                kubernetes.io/os: linux
              securityContext:
                seccompProfile:
                  type: RuntimeDefault
              serviceAccountName: ${schema.spec.values.serviceAccount.name}
              terminationGracePeriodSeconds: 10


