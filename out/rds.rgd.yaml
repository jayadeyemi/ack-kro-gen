apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: ack-rds-ctrl.kro.run
  namespace: kro
spec:
  schema:
    apiVersion: v1alpha1
    kind: Rdscontroller
    spec:
      name: ${schema.spec.name}
      namespace: ${schema.spec.namespace}
      values:
        aws:
          accountID: ${schema.spec.values.aws.accountID}
          region: ${schema.spec.values.aws.region}
        deployment:
          containerPort: 8080
          replicas: 1
        iamRole:
          maxSessionDuration: 3600
          oidcProvider: ${schema.spec.values.iamRole.oidcProvider}
        image:
          deletePolicy: ${schema.spec.values.image.deletePolicy}
          repository: ${schema.spec.values.image.repository}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          tag: ${schema.spec.values.image.tag}
        log:
          enabled: ${schema.spec.values.log.enabled}
          level: ${schema.spec.values.log.level}
        serviceAccount:
          name: ${schema.spec.values.serviceAccount.name}
  resources:
    - id: customresourcedefinition-adoptedresources-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: adoptedresources.services.k8s.aws
        spec:
          group: services.k8s.aws
          names:
            kind: AdoptedResource
            listKind: AdoptedResourceList
            plural: adoptedresources
            singular: adoptedresource
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: AdoptedResource is the schema for the AdoptedResource API.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: AdoptedResourceSpec defines the desired state of the AdoptedResource.
                      properties:
                        aws:
                          description: AWSIdentifiers provide all unique ways to reference an AWS resource.
                          properties:
                            additionalKeys:
                              additionalProperties:
                                type: string
                              description: |-
                                AdditionalKeys represents any additional arbitrary identifiers used when
                                describing the target resource.
                              type: object
                            arn:
                              description: |-
                                ARN is the AWS Resource Name for the resource. It is a globally
                                unique identifier.
                              type: string
                            nameOrID:
                              description: |-
                                NameOrId is a user-supplied string identifier for the resource. It may
                                or may not be globally unique, depending on the type of resource.
                              type: string
                          type: object
                        kubernetes:
                          description: |-
                            ResourceWithMetadata provides the values necessary to create a
                            Kubernetes resource and override any of its metadata values.
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            metadata:
                              description: |-
                                ObjectMeta is metadata that all persisted resources must have, which includes all objects
                                users must create.
                                It is not possible to use `metav1.ObjectMeta` inside spec, as the controller-gen
                                automatically converts this to an arbitrary string-string map.
                                https://github.com/kubernetes-sigs/controller-tools/issues/385

                                Active discussion about inclusion of this field in the spec is happening in this PR:
                                https://github.com/kubernetes-sigs/controller-tools/pull/395

                                Until this is allowed, or if it never is, we will produce a subset of the object meta
                                that contains only the fields which the user is allowed to modify in the metadata.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    Annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                generateName:
                                  description: |-
                                    GenerateName is an optional prefix, used by the server, to generate a unique
                                    name ONLY IF the Name field has not been provided.
                                    If this field is used, the name returned to the client will be different
                                    than the name passed. This value will also be combined with a unique suffix.
                                    The provided value has the same validation rules as the Name field,
                                    and may be truncated by the length of the suffix required to make the value
                                    unique on the server.

                                    If this field is specified and the generated name exists, the server will
                                    NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
                                    ServerTimeout indicating a unique name could not be found in the time allotted, and the client
                                    should retry (optionally after the time indicated in the Retry-After header).

                                    Applied only if Name is not specified.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                                  type: string
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    Map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                                name:
                                  description: |-
                                    Name must be unique within a namespace. Is required when creating resources, although
                                    some resources may allow a client to request the generation of an appropriate name
                                    automatically. Name is primarily intended for creation idempotence and configuration
                                    definition.
                                    Cannot be updated.
                                    More info: http://kubernetes.io/docs/user-guide/identifiers#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace defines the space within each name must be unique. An empty namespace is
                                    equivalent to the "default" namespace, but "default" is the canonical representation.
                                    Not all objects are required to be scoped to a namespace - the value of this field for
                                    those objects will be empty.

                                    Must be a DNS_LABEL.
                                    Cannot be updated.
                                    More info: http://kubernetes.io/docs/user-guide/namespaces
                                  type: string
                                ownerReferences:
                                  description: |-
                                    List of objects depended by this object. If ALL objects in the list have
                                    been deleted, this object will be garbage collected. If this object is managed by a controller,
                                    then an entry in this list will point to this controller, with the controller field set to true.
                                    There cannot be more than one managing controller.
                                  items:
                                    description: |-
                                      OwnerReference contains enough information to let you identify an owning
                                      object. An owning object must be in the same namespace as the dependent, or
                                      be cluster-scoped, so there is no namespace field.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      blockOwnerDeletion:
                                        description: |-
                                          If true, AND if the owner has the "foregroundDeletion" finalizer, then
                                          the owner cannot be deleted from the key-value store until this
                                          reference is removed.
                                          See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                                          for how the garbage collector interacts with this field and enforces the foreground deletion.
                                          Defaults to false.
                                          To set this field, a user needs "delete" permission of the owner,
                                          otherwise 422 (Unprocessable Entity) will be returned.
                                        type: boolean
                                      controller:
                                        description: If true, this reference points to the managing controller.
                                        type: boolean
                                      kind:
                                        description: |-
                                          Kind of the referent.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                                        type: string
                                      uid:
                                        description: |-
                                          UID of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
                                        type: string
                                    required:
                                      - apiVersion
                                      - kind
                                      - name
                                      - uid
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                          required:
                            - group
                            - kind
                          type: object
                      required:
                        - aws
                        - kubernetes
                      type: object
                    status:
                      description: AdoptedResourceStatus defines the observed status of the AdoptedResource.
                      properties:
                        conditions:
                          description: |-
                            A collection of `ackv1alpha1.Condition` objects that describe the various
                            terminal states of the adopted resource CR and its target custom resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                      required:
                        - conditions
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbclusterendpoints-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbclusterendpoints.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBClusterEndpoint
            listKind: DBClusterEndpointList
            plural: dbclusterendpoints
            singular: dbclusterendpoint
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBClusterEndpoint is the Schema for the DBClusterEndpoints API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBClusterEndpointSpec defines the desired state of DBClusterEndpoint.

                        This data type represents the information you need to connect to an Amazon
                        Aurora DB cluster. This data type is used as a response element in the following
                        actions:

                          - CreateDBClusterEndpoint

                          - DescribeDBClusterEndpoints

                          - ModifyDBClusterEndpoint

                          - DeleteDBClusterEndpoint

                        For the data structure that represents Amazon RDS DB instance endpoints,
                        see Endpoint.
                      properties:
                        dbClusterEndpointIdentifier:
                          description: |-
                            The identifier to use for the new endpoint. This parameter is stored as a
                            lowercase string.
                          type: string
                        dbClusterIdentifier:
                          description: |-
                            The DB cluster identifier of the DB cluster associated with the endpoint.
                            This parameter is stored as a lowercase string.
                          type: string
                        dbClusterIdentifierRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        endpointType:
                          description: 'The type of the endpoint, one of: READER, WRITER, ANY.'
                          type: string
                        excludedMembers:
                          description: |-
                            List of DB instance identifiers that aren't part of the custom endpoint group.
                            All other eligible instances are reachable through the custom endpoint. This
                            parameter is relevant only if the list of static members is empty.
                          items:
                            type: string
                          type: array
                        staticMembers:
                          description: List of DB instance identifiers that are part of the custom endpoint group.
                          items:
                            type: string
                          type: array
                        tags:
                          description: The tags to be assigned to the Amazon RDS resource.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - dbClusterEndpointIdentifier
                      type: object
                    status:
                      description: DBClusterEndpointStatus defines the observed state of DBClusterEndpoint
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        dbClusterEndpointResourceIdentifier:
                          description: |-
                            A unique system-generated identifier for an endpoint. It remains the same
                            for the whole life of the endpoint.
                          type: string
                        endpoint:
                          description: The DNS address of the endpoint.
                          type: string
                        status:
                          description: |-
                            The current status of the endpoint. One of: creating, available, deleting,
                            inactive, modifying. The inactive state applies to an endpoint that can't
                            be used for a certain kind of cluster, such as a writer endpoint for a read-only
                            secondary cluster in a global database.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbclusterparametergroups-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbclusterparametergroups.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBClusterParameterGroup
            listKind: DBClusterParameterGroupList
            plural: dbclusterparametergroups
            singular: dbclusterparametergroup
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBClusterParameterGroup is the Schema for the DBClusterParameterGroups API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBClusterParameterGroupSpec defines the desired state of DBClusterParameterGroup.

                        Contains the details of an Amazon RDS DB cluster parameter group.

                        This data type is used as a response element in the DescribeDBClusterParameterGroups
                        action.
                      properties:
                        description:
                          description: The description for the DB cluster parameter group.
                          type: string
                        family:
                          description: |-
                            The DB cluster parameter group family name. A DB cluster parameter group
                            can be associated with one and only one DB cluster parameter group family,
                            and can be applied only to a DB cluster running a database engine and engine
                            version compatible with that DB cluster parameter group family.

                            # Aurora MySQL

                            Example: aurora-mysql5.7, aurora-mysql8.0

                            # Aurora PostgreSQL

                            Example: aurora-postgresql14

                            # RDS for MySQL

                            Example: mysql8.0

                            # RDS for PostgreSQL

                            Example: postgres13

                            To list all of the available parameter group families for a DB engine, use
                            the following command:

                            aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
                            --engine

                            For example, to list all of the available parameter group families for the
                            Aurora PostgreSQL DB engine, use the following command:

                            aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
                            --engine aurora-postgresql

                            The output contains duplicates.

                            The following are the valid DB engine values:

                              - aurora-mysql

                              - aurora-postgresql

                              - mysql

                              - postgres
                          type: string
                        name:
                          description: |-
                            The name of the DB cluster parameter group.

                            Constraints:

                              - Must not match the name of an existing DB cluster parameter group.

                            This value is stored as a lowercase string.
                          type: string
                        parameterOverrides:
                          additionalProperties:
                            type: string
                          type: object
                        parameters:
                          description: |-
                            A list of parameters in the DB cluster parameter group to modify.

                            Valid Values (for the application method): immediate | pending-reboot

                            You can use the immediate value with dynamic parameters only. You can use
                            the pending-reboot value for both dynamic and static parameters.

                            When the application method is immediate, changes to dynamic parameters are
                            applied immediately to the DB clusters associated with the parameter group.
                            When the application method is pending-reboot, changes to dynamic and static
                            parameters are applied after a reboot without failover to the DB clusters
                            associated with the parameter group.
                          items:
                            description: |-
                              This data type is used as a request parameter in the ModifyDBParameterGroup
                              and ResetDBParameterGroup actions.

                              This data type is used as a response element in the DescribeEngineDefaultParameters
                              and DescribeDBParameters actions.
                            properties:
                              allowedValues:
                                type: string
                              applyMethod:
                                type: string
                              applyType:
                                type: string
                              dataType:
                                type: string
                              description:
                                type: string
                              isModifiable:
                                type: boolean
                              minimumEngineVersion:
                                type: string
                              parameterName:
                                type: string
                              parameterValue:
                                type: string
                              source:
                                type: string
                              supportedEngineModes:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tags:
                          description: Tags to assign to the DB cluster parameter group.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - description
                        - family
                        - name
                      type: object
                    status:
                      description: DBClusterParameterGroupStatus defines the observed state of DBClusterParameterGroup
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        parameterOverrideStatuses:
                          description: Provides a list of parameters for the DB cluster parameter group.
                          items:
                            description: |-
                              This data type is used as a request parameter in the ModifyDBParameterGroup
                              and ResetDBParameterGroup actions.

                              This data type is used as a response element in the DescribeEngineDefaultParameters
                              and DescribeDBParameters actions.
                            properties:
                              allowedValues:
                                type: string
                              applyMethod:
                                type: string
                              applyType:
                                type: string
                              dataType:
                                type: string
                              description:
                                type: string
                              isModifiable:
                                type: boolean
                              minimumEngineVersion:
                                type: string
                              parameterName:
                                type: string
                              parameterValue:
                                type: string
                              source:
                                type: string
                              supportedEngineModes:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbclusters-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbclusters.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBCluster
            listKind: DBClusterList
            plural: dbclusters
            singular: dbcluster
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBCluster is the Schema for the DBClusters API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBClusterSpec defines the desired state of DBCluster.

                        Contains the details of an Amazon Aurora DB cluster or Multi-AZ DB cluster.

                        For an Amazon Aurora DB cluster, this data type is used as a response element
                        in the operations CreateDBCluster, DeleteDBCluster, DescribeDBClusters, FailoverDBCluster,
                        ModifyDBCluster, PromoteReadReplicaDBCluster, RestoreDBClusterFromS3, RestoreDBClusterFromSnapshot,
                        RestoreDBClusterToPointInTime, StartDBCluster, and StopDBCluster.

                        For a Multi-AZ DB cluster, this data type is used as a response element in
                        the operations CreateDBCluster, DeleteDBCluster, DescribeDBClusters, FailoverDBCluster,
                        ModifyDBCluster, RebootDBCluster, RestoreDBClusterFromSnapshot, and RestoreDBClusterToPointInTime.

                        For more information on Amazon Aurora DB clusters, see What is Amazon Aurora?
                        (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html)
                        in the Amazon Aurora User Guide.

                        For more information on Multi-AZ DB clusters, see Multi-AZ deployments with
                        two readable standby DB instances (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html)
                        in the Amazon RDS User Guide.
                      properties:
                        allocatedStorage:
                          description: |-
                            The amount of storage in gibibytes (GiB) to allocate to each DB instance
                            in the Multi-AZ DB cluster.

                            Valid for Cluster Type: Multi-AZ DB clusters only

                            This setting is required to create a Multi-AZ DB cluster.
                          format: int64
                          type: integer
                        autoMinorVersionUpgrade:
                          description: |-
                            Specifies whether minor engine upgrades are applied automatically to the
                            DB cluster during the maintenance window. By default, minor engine upgrades
                            are applied automatically.

                            Valid for Cluster Type: Multi-AZ DB clusters only
                          type: boolean
                        availabilityZones:
                          description: |-
                            A list of Availability Zones (AZs) where you specifically want to create
                            DB instances in the DB cluster.

                            For information on AZs, see Availability Zones (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html#Concepts.RegionsAndAvailabilityZones.AvailabilityZones)
                            in the Amazon Aurora User Guide.

                            Valid for Cluster Type: Aurora DB clusters only

                            Constraints:

                              - Can't specify more than three AZs.
                          items:
                            type: string
                          type: array
                        backtrackWindow:
                          description: |-
                            The target backtrack window, in seconds. To disable backtracking, set this
                            value to 0.

                            Valid for Cluster Type: Aurora MySQL DB clusters only

                            Default: 0

                            Constraints:

                              - If specified, this value must be set to a number from 0 to 259,200 (72
                                hours).
                          format: int64
                          type: integer
                        backupRetentionPeriod:
                          description: |-
                            The number of days for which automated backups are retained.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Default: 1

                            Constraints:

                              - Must be a value from 1 to 35.
                          format: int64
                          type: integer
                        characterSetName:
                          description: |-
                            The name of the character set (CharacterSet) to associate the DB cluster
                            with.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        copyTagsToSnapshot:
                          description: |-
                            Specifies whether to copy all tags from the DB cluster to snapshots of the
                            DB cluster. The default is not to copy them.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: boolean
                        databaseInsightsMode:
                          description: Specifies the mode of Database Insights to enable for the cluster.
                          type: string
                        databaseName:
                          description: |-
                            The name for your database of up to 64 alphanumeric characters. A database
                            named postgres is always created. If this parameter is specified, an additional
                            database with this name is created.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        dbClusterIdentifier:
                          description: |-
                            The identifier for this DB cluster. This parameter is stored as a lowercase
                            string.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - Must contain from 1 to 63 (for Aurora DB clusters) or 1 to 52 (for Multi-AZ
                                DB clusters) letters, numbers, or hyphens.

                              - First character must be a letter.

                              - Can't end with a hyphen or contain two consecutive hyphens.

                            Example: my-cluster1
                          type: string
                        dbClusterInstanceClass:
                          description: |-
                            The compute and memory capacity of each DB instance in the Multi-AZ DB cluster,
                            for example db.m6gd.xlarge. Not all DB instance classes are available in
                            all Amazon Web Services Regions, or for all database engines.

                            For the full list of DB instance classes and availability for your engine,
                            see DB instance class (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
                            in the Amazon RDS User Guide.

                            This setting is required to create a Multi-AZ DB cluster.

                            Valid for Cluster Type: Multi-AZ DB clusters only
                          type: string
                        dbClusterParameterGroupName:
                          description: |-
                            The name of the DB cluster parameter group to associate with this DB cluster.
                            If you don't specify a value, then the default DB cluster parameter group
                            for the specified DB engine and version is used.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - If supplied, must match the name of an existing DB cluster parameter
                                group.
                          type: string
                        dbClusterParameterGroupRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        dbSubnetGroupName:
                          description: |-
                            A DB subnet group to associate with this DB cluster.

                            This setting is required to create a Multi-AZ DB cluster.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - Must match the name of an existing DB subnet group.

                            Example: mydbsubnetgroup
                          type: string
                        dbSubnetGroupRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        dbSystemID:
                          description: Reserved for future use.
                          type: string
                        deletionProtection:
                          description: |-
                            Specifies whether the DB cluster has deletion protection enabled. The database
                            can't be deleted when deletion protection is enabled. By default, deletion
                            protection isn't enabled.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: boolean
                        destinationRegion:
                          description: DestinationRegion is used for presigning the request to a given region.
                          type: string
                        domain:
                          description: |-
                            The Active Directory directory ID to create the DB cluster in.

                            For Amazon Aurora DB clusters, Amazon RDS can use Kerberos authentication
                            to authenticate users that connect to the DB cluster.

                            For more information, see Kerberos authentication (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html)
                            in the Amazon Aurora User Guide.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        domainIAMRoleName:
                          description: |-
                            The name of the IAM role to use when making API calls to the Directory Service.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        enableCloudwatchLogsExports:
                          description: |-
                            The list of log types that need to be enabled for exporting to CloudWatch
                            Logs.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            The following values are valid for each DB engine:

                              - Aurora MySQL - audit | error | general | slowquery

                              - Aurora PostgreSQL - postgresql

                              - RDS for MySQL - error | general | slowquery

                              - RDS for PostgreSQL - postgresql | upgrade

                            For more information about exporting CloudWatch Logs for Amazon RDS, see
                            Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
                            in the Amazon RDS User Guide.

                            For more information about exporting CloudWatch Logs for Amazon Aurora, see
                            Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
                            in the Amazon Aurora User Guide.
                          items:
                            type: string
                          type: array
                        enableGlobalWriteForwarding:
                          description: |-
                            Specifies whether to enable this DB cluster to forward write operations to
                            the primary cluster of a global cluster (Aurora global database). By default,
                            write operations are not allowed on Aurora DB clusters that are secondary
                            clusters in an Aurora global database.

                            You can set this value only on Aurora DB clusters that are members of an
                            Aurora global database. With this parameter enabled, a secondary cluster
                            can forward writes to the current primary cluster, and the resulting changes
                            are replicated back to this cluster. For the primary DB cluster of an Aurora
                            global database, this value is used immediately if the primary is demoted
                            by a global cluster API operation, but it does nothing until then.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: boolean
                        enableHTTPEndpoint:
                          description: |-
                            Specifies whether to enable the HTTP endpoint for the DB cluster. By default,
                            the HTTP endpoint isn't enabled.

                            When enabled, the HTTP endpoint provides a connectionless web service API
                            (RDS Data API) for running SQL queries on the DB cluster. You can also query
                            your database from inside the RDS console with the RDS query editor.

                            RDS Data API is supported with the following DB clusters:

                              - Aurora PostgreSQL Serverless v2 and provisioned

                              - Aurora PostgreSQL and Aurora MySQL Serverless v1

                            For more information, see Using RDS Data API (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html)
                            in the Amazon Aurora User Guide.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: boolean
                        enableIAMDatabaseAuthentication:
                          description: |-
                            Specifies whether to enable mapping of Amazon Web Services Identity and Access
                            Management (IAM) accounts to database accounts. By default, mapping isn't
                            enabled.

                            For more information, see IAM Database Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html)
                            in the Amazon Aurora User Guide or IAM database authentication for MariaDB,
                            MySQL, and PostgreSQL (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html)
                            in the Amazon RDS User Guide.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: boolean
                        enablePerformanceInsights:
                          description: |-
                            Specifies whether to turn on Performance Insights for the DB cluster.

                            For more information, see Using Amazon Performance Insights (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)
                            in the Amazon RDS User Guide.

                            Valid for Cluster Type: Multi-AZ DB clusters only
                          type: boolean
                        engine:
                          description: |-
                            The database engine to use for this DB cluster.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Valid Values:

                              - aurora-mysql

                              - aurora-postgresql

                              - mysql

                              - postgres

                              - neptune - For information about using Amazon Neptune, see the Amazon
                                Neptune User Guide (https://docs.aws.amazon.com/neptune/latest/userguide/intro.html).
                          type: string
                        engineMode:
                          description: |-
                            The DB engine mode of the DB cluster, either provisioned or serverless.

                            The serverless engine mode only applies for Aurora Serverless v1 DB clusters.
                            Aurora Serverless v2 DB clusters use the provisioned engine mode.

                            For information about limitations and requirements for Serverless DB clusters,
                            see the following sections in the Amazon Aurora User Guide:

                              - Limitations of Aurora Serverless v1 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)

                              - Requirements for Aurora Serverless v2 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.requirements.html)

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        engineVersion:
                          description: |-
                            The version number of the database engine to use.

                            To list all of the available engine versions for Aurora MySQL version 2 (5.7-compatible)
                            and version 3 (MySQL 8.0-compatible), use the following command:

                            aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"

                            You can supply either 5.7 or 8.0 to use the default engine version for Aurora
                            MySQL version 2 or version 3, respectively.

                            To list all of the available engine versions for Aurora PostgreSQL, use the
                            following command:

                            aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"

                            To list all of the available engine versions for RDS for MySQL, use the following
                            command:

                            aws rds describe-db-engine-versions --engine mysql --query "DBEngineVersions[].EngineVersion"

                            To list all of the available engine versions for RDS for PostgreSQL, use
                            the following command:

                            aws rds describe-db-engine-versions --engine postgres --query "DBEngineVersions[].EngineVersion"

                            For information about a specific engine, see the following topics:

                              - Aurora MySQL - see Database engine updates for Amazon Aurora MySQL (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html)
                                in the Amazon Aurora User Guide.

                              - Aurora PostgreSQL - see Amazon Aurora PostgreSQL releases and engine
                                versions (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.20180305.html)
                                in the Amazon Aurora User Guide.

                              - RDS for MySQL - see Amazon RDS for MySQL (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
                                in the Amazon RDS User Guide.

                              - RDS for PostgreSQL - see Amazon RDS for PostgreSQL (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts)
                                in the Amazon RDS User Guide.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        globalClusterIdentifier:
                          description: |-
                            The global cluster ID of an Aurora cluster that becomes the primary cluster
                            in the new global database cluster.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        iops:
                          description: |-
                            The amount of Provisioned IOPS (input/output operations per second) to be
                            initially allocated for each DB instance in the Multi-AZ DB cluster.

                            For information about valid IOPS values, see Provisioned IOPS storage (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS)
                            in the Amazon RDS User Guide.

                            This setting is required to create a Multi-AZ DB cluster.

                            Valid for Cluster Type: Multi-AZ DB clusters only

                            Constraints:

                              - Must be a multiple between .5 and 50 of the storage amount for the DB
                                cluster.
                          format: int64
                          type: integer
                        kmsKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier for an encrypted DB cluster.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
                            Web Services account, specify the key ARN or alias ARN.

                            When a KMS key isn't specified in KmsKeyId:

                              - If ReplicationSourceIdentifier identifies an encrypted source, then
                                Amazon RDS uses the KMS key used to encrypt the source. Otherwise, Amazon
                                RDS uses your default KMS key.

                              - If the StorageEncrypted parameter is enabled and ReplicationSourceIdentifier
                                isn't specified, then Amazon RDS uses your default KMS key.

                            There is a default KMS key for your Amazon Web Services account. Your Amazon
                            Web Services account has a different default KMS key for each Amazon Web
                            Services Region.

                            If you create a read replica of an encrypted DB cluster in another Amazon
                            Web Services Region, make sure to set KmsKeyId to a KMS key identifier that
                            is valid in the destination Amazon Web Services Region. This KMS key is used
                            to encrypt the read replica in that Amazon Web Services Region.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        kmsKeyRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        manageMasterUserPassword:
                          description: |-
                            Specifies whether to manage the master user password with Amazon Web Services
                            Secrets Manager.

                            For more information, see Password management with Amazon Web Services Secrets
                            Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
                            in the Amazon RDS User Guide and Password management with Amazon Web Services
                            Secrets Manager (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html)
                            in the Amazon Aurora User Guide.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - Can't manage the master user password with Amazon Web Services Secrets
                                Manager if MasterUserPassword is specified.
                          type: boolean
                        masterUserPassword:
                          description: |-
                            The password for the master database user.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - Must contain from 8 to 41 characters.

                              - Can contain any printable ASCII character except "/", """, or "@".

                              - Can't be specified if ManageMasterUserPassword is turned on.
                          properties:
                            key:
                              description: Key is the key within the secret
                              type: string
                            name:
                              description: name is unique within a namespace to reference a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which the secret name must be unique.
                              type: string
                          required:
                            - key
                          type: object
                          x-kubernetes-map-type: atomic
                        masterUserSecretKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier to encrypt a secret that is automatically
                            generated and managed in Amazon Web Services Secrets Manager.

                            This setting is valid only if the master user password is managed by RDS
                            in Amazon Web Services Secrets Manager for the DB cluster.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
                            Web Services account, specify the key ARN or alias ARN.

                            If you don't specify MasterUserSecretKmsKeyId, then the aws/secretsmanager
                            KMS key is used to encrypt the secret. If the secret is in a different Amazon
                            Web Services account, then you can't use the aws/secretsmanager KMS key to
                            encrypt the secret, and you must use a customer managed KMS key.

                            There is a default KMS key for your Amazon Web Services account. Your Amazon
                            Web Services account has a different default KMS key for each Amazon Web
                            Services Region.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        masterUserSecretKMSKeyRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        masterUsername:
                          description: |-
                            The name of the master user for the DB cluster.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Constraints:

                              - Must be 1 to 16 letters or numbers.

                              - First character must be a letter.

                              - Can't be a reserved word for the chosen database engine.
                          type: string
                        monitoringInterval:
                          description: |-
                            The interval, in seconds, between points when Enhanced Monitoring metrics
                            are collected for the DB cluster. To turn off collecting Enhanced Monitoring
                            metrics, specify 0.

                            If MonitoringRoleArn is specified, also set MonitoringInterval to a value
                            other than 0.

                            Valid for Cluster Type: Multi-AZ DB clusters only

                            Valid Values: 0 | 1 | 5 | 10 | 15 | 30 | 60

                            Default: 0
                          format: int64
                          type: integer
                        monitoringRoleARN:
                          description: |-
                            The Amazon Resource Name (ARN) for the IAM role that permits RDS to send
                            Enhanced Monitoring metrics to Amazon CloudWatch Logs. An example is arn:aws:iam:123456789012:role/emaccess.
                            For information on creating a monitoring role, see Setting up and enabling
                            Enhanced Monitoring (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
                            in the Amazon RDS User Guide.

                            If MonitoringInterval is set to a value other than 0, supply a MonitoringRoleArn
                            value.

                            Valid for Cluster Type: Multi-AZ DB clusters only
                          type: string
                        networkType:
                          description: |-
                            The network type of the DB cluster.

                            The network type is determined by the DBSubnetGroup specified for the DB
                            cluster. A DBSubnetGroup can support only the IPv4 protocol or the IPv4 and
                            the IPv6 protocols (DUAL).

                            For more information, see Working with a DB instance in a VPC (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html)
                            in the Amazon Aurora User Guide.

                            Valid for Cluster Type: Aurora DB clusters only

                            Valid Values: IPV4 | DUAL
                          type: string
                        optionGroupName:
                          description: |-
                            The option group to associate the DB cluster with.

                            DB clusters are associated with a default option group that can't be modified.
                          type: string
                        performanceInsightsKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier for encryption of Performance
                            Insights data.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key.

                            If you don't specify a value for PerformanceInsightsKMSKeyId, then Amazon
                            RDS uses your default KMS key. There is a default KMS key for your Amazon
                            Web Services account. Your Amazon Web Services account has a different default
                            KMS key for each Amazon Web Services Region.

                            Valid for Cluster Type: Multi-AZ DB clusters only
                          type: string
                        performanceInsightsRetentionPeriod:
                          description: |-
                            The number of days to retain Performance Insights data.

                            Valid for Cluster Type: Multi-AZ DB clusters only

                            Valid Values:

                              - 7

                              - month * 31, where month is a number of months from 1-23. Examples: 93
                                (3 months * 31), 341 (11 months * 31), 589 (19 months * 31)

                              - 731

                            Default: 7 days

                            If you specify a retention period that isn't valid, such as 94, Amazon RDS
                            issues an error.
                          format: int64
                          type: integer
                        port:
                          description: |-
                            The port number on which the instances in the DB cluster accept connections.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Valid Values: 1150-65535

                            Default:

                              - RDS for MySQL and Aurora MySQL - 3306

                              - RDS for PostgreSQL and Aurora PostgreSQL - 5432
                          format: int64
                          type: integer
                        preSignedURL:
                          description: |-
                            When you are replicating a DB cluster from one Amazon Web Services GovCloud
                            (US) Region to another, an URL that contains a Signature Version 4 signed
                            request for the CreateDBCluster operation to be called in the source Amazon
                            Web Services Region where the DB cluster is replicated from. Specify PreSignedUrl
                            only when you are performing cross-Region replication from an encrypted DB
                            cluster.

                            The presigned URL must be a valid request for the CreateDBCluster API operation
                            that can run in the source Amazon Web Services Region that contains the encrypted
                            DB cluster to copy.

                            The presigned URL request must contain the following parameter values:

                              - KmsKeyId - The KMS key identifier for the KMS key to use to encrypt
                                the copy of the DB cluster in the destination Amazon Web Services Region.
                                This should refer to the same KMS key for both the CreateDBCluster operation
                                that is called in the destination Amazon Web Services Region, and the
                                operation contained in the presigned URL.

                              - DestinationRegion - The name of the Amazon Web Services Region that
                                Aurora read replica will be created in.

                              - ReplicationSourceIdentifier - The DB cluster identifier for the encrypted
                                DB cluster to be copied. This identifier must be in the Amazon Resource
                                Name (ARN) format for the source Amazon Web Services Region. For example,
                                if you are copying an encrypted DB cluster from the us-west-2 Amazon Web
                                Services Region, then your ReplicationSourceIdentifier would look like
                                Example: arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1.

                            To learn how to generate a Signature Version 4 signed request, see Authenticating
                            Requests: Using Query Parameters (Amazon Web Services Signature Version 4)
                            (https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html)
                            and Signature Version 4 Signing Process (https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).

                            If you are using an Amazon Web Services SDK tool or the CLI, you can specify
                            SourceRegion (or --source-region for the CLI) instead of specifying PreSignedUrl
                            manually. Specifying SourceRegion autogenerates a presigned URL that is a
                            valid request for the operation that can run in the source Amazon Web Services
                            Region.

                            Valid for Cluster Type: Aurora DB clusters only
                          type: string
                        preferredBackupWindow:
                          description: |-
                            The daily time range during which automated backups are created if automated
                            backups are enabled using the BackupRetentionPeriod parameter.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            The default is a 30-minute window selected at random from an 8-hour block
                            of time for each Amazon Web Services Region. To view the time blocks available,
                            see Backup window (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow)
                            in the Amazon Aurora User Guide.

                            Constraints:

                              - Must be in the format hh24:mi-hh24:mi.

                              - Must be in Universal Coordinated Time (UTC).

                              - Must not conflict with the preferred maintenance window.

                              - Must be at least 30 minutes.
                          type: string
                        preferredMaintenanceWindow:
                          description: |-
                            The weekly time range during which system maintenance can occur.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            The default is a 30-minute window selected at random from an 8-hour block
                            of time for each Amazon Web Services Region, occurring on a random day of
                            the week. To see the time blocks available, see Adjusting the Preferred DB
                            Cluster Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora)
                            in the Amazon Aurora User Guide.

                            Constraints:

                              - Must be in the format ddd:hh24:mi-ddd:hh24:mi.

                              - Days must be one of Mon | Tue | Wed | Thu | Fri | Sat | Sun.

                              - Must be in Universal Coordinated Time (UTC).

                              - Must be at least 30 minutes.
                          type: string
                        publiclyAccessible:
                          description: |-
                            Specifies whether the DB cluster is publicly accessible.

                            When the DB cluster is publicly accessible and you connect from outside of
                            the DB cluster's virtual private cloud (VPC), its Domain Name System (DNS)
                            endpoint resolves to the public IP address. When you connect from within
                            the same VPC as the DB cluster, the endpoint resolves to the private IP address.
                            Access to the DB cluster is ultimately controlled by the security group it
                            uses. That public access isn't permitted if the security group assigned to
                            the DB cluster doesn't permit it.

                            When the DB cluster isn't publicly accessible, it is an internal DB cluster
                            with a DNS name that resolves to a private IP address.

                            Valid for Cluster Type: Multi-AZ DB clusters only

                            Default: The default behavior varies depending on whether DBSubnetGroupName
                            is specified.

                            If DBSubnetGroupName isn't specified, and PubliclyAccessible isn't specified,
                            the following applies:

                              - If the default VPC in the target Region doesn’t have an internet gateway
                                attached to it, the DB cluster is private.

                              - If the default VPC in the target Region has an internet gateway attached
                                to it, the DB cluster is public.

                            If DBSubnetGroupName is specified, and PubliclyAccessible isn't specified,
                            the following applies:

                              - If the subnets are part of a VPC that doesn’t have an internet gateway
                                attached to it, the DB cluster is private.

                              - If the subnets are part of a VPC that has an internet gateway attached
                                to it, the DB cluster is public.
                          type: boolean
                        replicationSourceIdentifier:
                          description: |-
                            The Amazon Resource Name (ARN) of the source DB instance or DB cluster if
                            this DB cluster is created as a read replica.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        restoreToTime:
                          description: |-
                            The date and time to restore the DB cluster to.

                            Valid Values: Value must be a time in Universal Coordinated Time (UTC) format

                            Constraints:

                              - Must be before the latest restorable time for the DB instance

                              - Must be specified if UseLatestRestorableTime parameter isn't provided

                              - Can't be specified if the UseLatestRestorableTime parameter is enabled

                              - Can't be specified if the RestoreType parameter is copy-on-write

                            Example: 2015-03-07T23:45:00Z

                            Valid for: Aurora DB clusters and Multi-AZ DB clusters
                          format: date-time
                          type: string
                        restoreType:
                          description: |-
                            The type of restore to be performed. You can specify one of the following
                            values:

                              - full-copy - The new DB cluster is restored as a full copy of the source
                                DB cluster.

                              - copy-on-write - The new DB cluster is restored as a clone of the source
                                DB cluster.

                            If you don't specify a RestoreType value, then the new DB cluster is restored
                            as a full copy of the source DB cluster.

                            Valid for: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        scalingConfiguration:
                          description: |-
                            For DB clusters in serverless DB engine mode, the scaling properties of the
                            DB cluster.

                            Valid for Cluster Type: Aurora DB clusters only
                          properties:
                            autoPause:
                              type: boolean
                            maxCapacity:
                              format: int64
                              type: integer
                            minCapacity:
                              format: int64
                              type: integer
                            secondsBeforeTimeout:
                              format: int64
                              type: integer
                            secondsUntilAutoPause:
                              format: int64
                              type: integer
                            timeoutAction:
                              type: string
                          type: object
                        serverlessV2ScalingConfiguration:
                          description: |-
                            Contains the scaling configuration of an Aurora Serverless v2 DB cluster.

                            For more information, see Using Amazon Aurora Serverless v2 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html)
                            in the Amazon Aurora User Guide.
                          properties:
                            maxCapacity:
                              type: number
                            minCapacity:
                              type: number
                            secondsUntilAutoPause:
                              format: int64
                              type: integer
                          type: object
                        snapshotIdentifier:
                          description: |-
                            The identifier for the DB snapshot or DB cluster snapshot to restore from.

                            You can use either the name or the Amazon Resource Name (ARN) to specify
                            a DB cluster snapshot. However, you can use only the ARN to specify a DB
                            snapshot.

                            Constraints:

                              - Must match the identifier of an existing Snapshot.

                            Valid for: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        sourceDBClusterIdentifier:
                          description: |-
                            The identifier of the source DB cluster from which to restore.

                            Constraints:

                              - Must match the identifier of an existing DBCluster.

                            Valid for: Aurora DB clusters and Multi-AZ DB clusters
                          type: string
                        sourceRegion:
                          description: |-
                            SourceRegion is the source region where the resource exists. This is not
                            sent over the wire and is only used for presigning. This value should always
                            have the same region as the source ARN.
                          type: string
                        storageEncrypted:
                          description: |-
                            Specifies whether the DB cluster is encrypted.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          type: boolean
                        storageType:
                          description: |-
                            The storage type to associate with the DB cluster.

                            For information on storage types for Aurora DB clusters, see Storage configurations
                            for Amazon Aurora DB clusters (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Overview.StorageReliability.html#aurora-storage-type).
                            For information on storage types for Multi-AZ DB clusters, see Settings for
                            creating Multi-AZ DB clusters (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/create-multi-az-db-cluster.html#create-multi-az-db-cluster-settings).

                            This setting is required to create a Multi-AZ DB cluster.

                            When specified for a Multi-AZ DB cluster, a value for the Iops parameter
                            is required.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters

                            Valid Values:

                              - Aurora DB clusters - aurora | aurora-iopt1

                              - Multi-AZ DB clusters - io1 | io2 | gp3

                            Default:

                              - Aurora DB clusters - aurora

                              - Multi-AZ DB clusters - io1

                            When you create an Aurora DB cluster with the storage type set to aurora-iopt1,
                            the storage type is returned in the response. The storage type isn't returned
                            when you set it to aurora.
                          type: string
                        tags:
                          description: |-
                            Tags to assign to the DB cluster.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        useLatestRestorableTime:
                          description: |-
                            Specifies whether to restore the DB cluster to the latest restorable backup
                            time. By default, the DB cluster isn't restored to the latest restorable
                            backup time.

                            Constraints: Can't be specified if RestoreToTime parameter is provided.

                            Valid for: Aurora DB clusters and Multi-AZ DB clusters
                          type: boolean
                        vpcSecurityGroupIDs:
                          description: |-
                            A list of EC2 VPC security groups to associate with this DB cluster.

                            Valid for Cluster Type: Aurora DB clusters and Multi-AZ DB clusters
                          items:
                            type: string
                          type: array
                        vpcSecurityGroupRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                      required:
                        - dbClusterIdentifier
                        - engine
                      type: object
                    status:
                      description: DBClusterStatus defines the observed state of DBCluster
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        activityStreamKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier used for encrypting messages in
                            the database activity stream.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key.
                          type: string
                        activityStreamKinesisStreamName:
                          description: |-
                            The name of the Amazon Kinesis data stream used for the database activity
                            stream.
                          type: string
                        activityStreamMode:
                          description: |-
                            The mode of the database activity stream. Database events such as a change
                            or access generate an activity stream event. The database session can handle
                            these events either synchronously or asynchronously.
                          type: string
                        activityStreamStatus:
                          description: The status of the database activity stream.
                          type: string
                        associatedRoles:
                          description: |-
                            A list of the Amazon Web Services Identity and Access Management (IAM) roles
                            that are associated with the DB cluster. IAM roles that are associated with
                            a DB cluster grant permission for the DB cluster to access other Amazon Web
                            Services on your behalf.
                          items:
                            description: |-
                              Describes an Amazon Web Services Identity and Access Management (IAM) role
                              that is associated with a DB cluster.
                            properties:
                              featureName:
                                type: string
                              roleARN:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        automaticRestartTime:
                          description: The time when a stopped DB cluster is restarted automatically.
                          format: date-time
                          type: string
                        backtrackConsumedChangeRecords:
                          description: The number of change records stored for Backtrack.
                          format: int64
                          type: integer
                        capacity:
                          description: |-
                            The current capacity of an Aurora Serverless v1 DB cluster. The capacity
                            is 0 (zero) when the cluster is paused.

                            For more information about Aurora Serverless v1, see Using Amazon Aurora
                            Serverless v1 (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html)
                            in the Amazon Aurora User Guide.
                          format: int64
                          type: integer
                        cloneGroupID:
                          description: The ID of the clone group with which the DB cluster is associated.
                          type: string
                        clusterCreateTime:
                          description: The time when the DB cluster was created, in Universal Coordinated Time (UTC).
                          format: date-time
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        crossAccountClone:
                          description: |-
                            Indicates whether the DB cluster is a clone of a DB cluster owned by a different
                            Amazon Web Services account.
                          type: boolean
                        customEndpoints:
                          description: The custom endpoints associated with the DB cluster.
                          items:
                            type: string
                          type: array
                        dbClusterMembers:
                          description: The list of DB instances that make up the DB cluster.
                          items:
                            description: Contains information about an instance that is part of a DB cluster.
                            properties:
                              dbClusterParameterGroupStatus:
                                type: string
                              dbInstanceIdentifier:
                                type: string
                              isClusterWriter:
                                type: boolean
                              promotionTier:
                                format: int64
                                type: integer
                            type: object
                          type: array
                        dbClusterOptionGroupMemberships:
                          description: The list of option group memberships for this DB cluster.
                          items:
                            description: Contains status information for a DB cluster option group.
                            properties:
                              dbClusterOptionGroupName:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        dbClusterParameterGroup:
                          description: The name of the DB cluster parameter group for the DB cluster.
                          type: string
                        dbClusterResourceID:
                          description: |-
                            The Amazon Web Services Region-unique, immutable identifier for the DB cluster.
                            This identifier is found in Amazon Web Services CloudTrail log entries whenever
                            the KMS key for the DB cluster is accessed.
                          type: string
                        dbSubnetGroup:
                          description: |-
                            Information about the subnet group associated with the DB cluster, including
                            the name, description, and subnets in the subnet group.
                          type: string
                        domainMemberships:
                          description: The Active Directory Domain membership records associated with the DB cluster.
                          items:
                            description: |-
                              An Active Directory Domain membership record associated with the DB instance
                              or cluster.
                            properties:
                              domain:
                                type: string
                              fQDN:
                                type: string
                              iamRoleName:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        earliestBacktrackTime:
                          description: The earliest time to which a DB cluster can be backtracked.
                          format: date-time
                          type: string
                        earliestRestorableTime:
                          description: |-
                            The earliest time to which a database can be restored with point-in-time
                            restore.
                          format: date-time
                          type: string
                        enabledCloudwatchLogsExports:
                          description: |-
                            A list of log types that this DB cluster is configured to export to CloudWatch
                            Logs.

                            Log types vary by DB engine. For information about the log types for each
                            DB engine, see Amazon RDS Database Log Files (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html)
                            in the Amazon Aurora User Guide.
                          items:
                            type: string
                          type: array
                        endpoint:
                          description: The connection endpoint for the primary instance of the DB cluster.
                          type: string
                        globalWriteForwardingRequested:
                          description: |-
                            Indicates whether write forwarding is enabled for a secondary cluster in
                            an Aurora global database. Because write forwarding takes time to enable,
                            check the value of GlobalWriteForwardingStatus to confirm that the request
                            has completed before using the write forwarding feature for this cluster.
                          type: boolean
                        globalWriteForwardingStatus:
                          description: |-
                            The status of write forwarding for a secondary cluster in an Aurora global
                            database.
                          type: string
                        hostedZoneID:
                          description: The ID that Amazon Route 53 assigns when you create a hosted zone.
                          type: string
                        httpEndpointEnabled:
                          description: |-
                            Indicates whether the HTTP endpoint is enabled for an Aurora DB cluster.

                            When enabled, the HTTP endpoint provides a connectionless web service API
                            (RDS Data API) for running SQL queries on the DB cluster. You can also query
                            your database from inside the RDS console with the RDS query editor.

                            For more information, see Using RDS Data API (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html)
                            in the Amazon Aurora User Guide.
                          type: boolean
                        iamDatabaseAuthenticationEnabled:
                          description: |-
                            Indicates whether the mapping of Amazon Web Services Identity and Access
                            Management (IAM) accounts to database accounts is enabled.
                          type: boolean
                        latestRestorableTime:
                          description: The latest time to which a database can be restored with point-in-time restore.
                          format: date-time
                          type: string
                        masterUserSecret:
                          description: |-
                            The secret managed by RDS in Amazon Web Services Secrets Manager for the
                            master user password.

                            For more information, see Password management with Amazon Web Services Secrets
                            Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
                            in the Amazon RDS User Guide and Password management with Amazon Web Services
                            Secrets Manager (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-secrets-manager.html)
                            in the Amazon Aurora User Guide.
                          properties:
                            kmsKeyID:
                              type: string
                            secretARN:
                              type: string
                            secretStatus:
                              type: string
                          type: object
                        multiAZ:
                          description: Indicates whether the DB cluster has instances in multiple Availability Zones.
                          type: boolean
                        pendingModifiedValues:
                          description: |-
                            Information about pending changes to the DB cluster. This information is
                            returned only when there are pending changes. Specific changes are identified
                            by subelements.
                          properties:
                            allocatedStorage:
                              format: int64
                              type: integer
                            backupRetentionPeriod:
                              format: int64
                              type: integer
                            dbClusterIdentifier:
                              type: string
                            engineVersion:
                              type: string
                            iamDatabaseAuthenticationEnabled:
                              type: boolean
                            iops:
                              format: int64
                              type: integer
                            masterUserPassword:
                              type: string
                            pendingCloudwatchLogsExports:
                              description: |-
                                A list of the log types whose configuration is still pending. In other words,
                                these log types are in the process of being activated or deactivated.
                              properties:
                                logTypesToDisable:
                                  items:
                                    type: string
                                  type: array
                                logTypesToEnable:
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        percentProgress:
                          description: The progress of the operation as a percentage.
                          type: string
                        performanceInsightsEnabled:
                          description: |-
                            Indicates whether Performance Insights is enabled for the DB cluster.

                            This setting is only for non-Aurora Multi-AZ DB clusters.
                          type: boolean
                        readReplicaIdentifiers:
                          description: |-
                            Contains one or more identifiers of the read replicas associated with this
                            DB cluster.
                          items:
                            type: string
                          type: array
                        readerEndpoint:
                          description: |-
                            The reader endpoint for the DB cluster. The reader endpoint for a DB cluster
                            load-balances connections across the Aurora Replicas that are available in
                            a DB cluster. As clients request new connections to the reader endpoint,
                            Aurora distributes the connection requests among the Aurora Replicas in the
                            DB cluster. This functionality can help balance your read workload across
                            multiple Aurora Replicas in your DB cluster.

                            If a failover occurs, and the Aurora Replica that you are connected to is
                            promoted to be the primary instance, your connection is dropped. To continue
                            sending your read workload to other Aurora Replicas in the cluster, you can
                            then reconnect to the reader endpoint.
                          type: string
                        status:
                          description: The current state of this DB cluster.
                          type: string
                        tagList:
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcSecurityGroups:
                          description: The list of VPC security groups that the DB cluster belongs to.
                          items:
                            description: |-
                              This data type is used as a response element for queries on VPC security
                              group membership.
                            properties:
                              status:
                                type: string
                              vpcSecurityGroupID:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbclustersnapshots-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbclustersnapshots.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBClusterSnapshot
            listKind: DBClusterSnapshotList
            plural: dbclustersnapshots
            singular: dbclustersnapshot
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBClusterSnapshot is the Schema for the DBClusterSnapshots API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBClusterSnapshotSpec defines the desired state of DBClusterSnapshot.

                        # Contains the details for an Amazon RDS DB cluster snapshot

                        This data type is used as a response element in the DescribeDBClusterSnapshots
                        action.
                      properties:
                        dbClusterIdentifier:
                          description: |-
                            The identifier of the DB cluster to create a snapshot for. This parameter
                            isn't case-sensitive.

                            Constraints:

                              - Must match the identifier of an existing DBCluster.

                            Example: my-cluster1
                          type: string
                        dbClusterIdentifierRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        dbClusterSnapshotIdentifier:
                          description: |-
                            The identifier of the DB cluster snapshot. This parameter is stored as a
                            lowercase string.

                            Constraints:

                              - Must contain from 1 to 63 letters, numbers, or hyphens.

                              - First character must be a letter.

                              - Can't end with a hyphen or contain two consecutive hyphens.

                            Example: my-cluster1-snapshot1
                          type: string
                        tags:
                          description: The tags to be assigned to the DB cluster snapshot.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - dbClusterSnapshotIdentifier
                      type: object
                    status:
                      description: DBClusterSnapshotStatus defines the observed state of DBClusterSnapshot
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        allocatedStorage:
                          description: The allocated storage size of the DB cluster snapshot in gibibytes (GiB).
                          format: int64
                          type: integer
                        availabilityZones:
                          description: |-
                            The list of Availability Zones (AZs) where instances in the DB cluster snapshot
                            can be restored.
                          items:
                            type: string
                          type: array
                        clusterCreateTime:
                          description: The time when the DB cluster was created, in Universal Coordinated Time (UTC).
                          format: date-time
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        dbSystemID:
                          description: Reserved for future use.
                          type: string
                        engine:
                          description: The name of the database engine for this DB cluster snapshot.
                          type: string
                        engineMode:
                          description: The engine mode of the database engine for this DB cluster snapshot.
                          type: string
                        engineVersion:
                          description: The version of the database engine for this DB cluster snapshot.
                          type: string
                        iamDatabaseAuthenticationEnabled:
                          description: |-
                            Indicates whether mapping of Amazon Web Services Identity and Access Management
                            (IAM) accounts to database accounts is enabled.
                          type: boolean
                        kmsKeyID:
                          description: |-
                            If StorageEncrypted is true, the Amazon Web Services KMS key identifier for
                            the encrypted DB cluster snapshot.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key.
                          type: string
                        licenseModel:
                          description: The license model information for this DB cluster snapshot.
                          type: string
                        masterUsername:
                          description: The master username for this DB cluster snapshot.
                          type: string
                        percentProgress:
                          description: The percentage of the estimated data that has been transferred.
                          format: int64
                          type: integer
                        port:
                          description: The port that the DB cluster was listening on at the time of the snapshot.
                          format: int64
                          type: integer
                        snapshotCreateTime:
                          description: The time when the snapshot was taken, in Universal Coordinated Time (UTC).
                          format: date-time
                          type: string
                        snapshotType:
                          description: The type of the DB cluster snapshot.
                          type: string
                        sourceDBClusterSnapshotARN:
                          description: |-
                            If the DB cluster snapshot was copied from a source DB cluster snapshot,
                            the Amazon Resource Name (ARN) for the source DB cluster snapshot, otherwise,
                            a null value.
                          type: string
                        status:
                          description: |-
                            The status of this DB cluster snapshot. Valid statuses are the following:

                               * available

                               * copying

                               * creating
                          type: string
                        storageEncrypted:
                          description: Indicates whether the DB cluster snapshot is encrypted.
                          type: boolean
                        tagList:
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The VPC ID associated with the DB cluster snapshot.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbinstances-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbinstances.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBInstance
            listKind: DBInstanceList
            plural: dbinstances
            singular: dbinstance
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.dbInstanceStatus
                  name: STATUS
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBInstance is the Schema for the DBInstances API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBInstanceSpec defines the desired state of DBInstance.

                        Contains the details of an Amazon RDS DB instance.

                        This data type is used as a response element in the operations CreateDBInstance,
                        CreateDBInstanceReadReplica, DeleteDBInstance, DescribeDBInstances, ModifyDBInstance,
                        PromoteReadReplica, RebootDBInstance, RestoreDBInstanceFromDBSnapshot, RestoreDBInstanceFromS3,
                        RestoreDBInstanceToPointInTime, StartDBInstance, and StopDBInstance.
                      properties:
                        allocatedStorage:
                          description: |-
                            The amount of storage in gibibytes (GiB) to allocate for the DB instance.

                            This setting doesn't apply to Amazon Aurora DB instances. Aurora cluster
                            volumes automatically grow as the amount of data in your database increases,
                            though you are only charged for the space that you use in an Aurora cluster
                            volume.

                            # Amazon RDS Custom

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Must be an integer from 40
                                to 65536 for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 40 to 65536
                                for RDS Custom for Oracle, 16384 for RDS Custom for SQL Server.

                            # RDS for Db2

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp3): Must be an integer from 20 to 65536.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
                                65536.

                            # RDS for MariaDB

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
                                to 65536.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
                                65536.

                              - Magnetic storage (standard): Must be an integer from 5 to 3072.

                            # RDS for MySQL

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
                                to 65536.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
                                65536.

                              - Magnetic storage (standard): Must be an integer from 5 to 3072.

                            # RDS for Oracle

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
                                to 65536.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
                                65536.

                              - Magnetic storage (standard): Must be an integer from 10 to 3072.

                            # RDS for PostgreSQL

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Must be an integer from 20
                                to 65536.

                              - Provisioned IOPS storage (io1, io2): Must be an integer from 100 to
                                65536.

                              - Magnetic storage (standard): Must be an integer from 5 to 3072.

                            # RDS for SQL Server

                            Constraints to the amount of storage for each storage type are the following:

                              - General Purpose (SSD) storage (gp2, gp3): Enterprise and Standard editions:
                                Must be an integer from 20 to 16384. Web and Express editions: Must be
                                an integer from 20 to 16384.

                              - Provisioned IOPS storage (io1, io2): Enterprise and Standard editions:
                                Must be an integer from 100 to 16384. Web and Express editions: Must be
                                an integer from 100 to 16384.

                              - Magnetic storage (standard): Enterprise and Standard editions: Must
                                be an integer from 20 to 1024. Web and Express editions: Must be an integer
                                from 20 to 1024.
                          format: int64
                          type: integer
                        autoMinorVersionUpgrade:
                          description: |-
                            Specifies whether minor engine upgrades are applied automatically to the
                            DB instance during the maintenance window. By default, minor engine upgrades
                            are applied automatically.

                            If you create an RDS Custom DB instance, you must set AutoMinorVersionUpgrade
                            to false.
                          type: boolean
                        availabilityZone:
                          description: |-
                            The Availability Zone (AZ) where the database will be created. For information
                            on Amazon Web Services Regions and Availability Zones, see Regions and Availability
                            Zones (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html).

                            For Amazon Aurora, each Aurora DB cluster hosts copies of its storage in
                            three separate Availability Zones. Specify one of these Availability Zones.
                            Aurora automatically chooses an appropriate Availability Zone if you don't
                            specify one.

                            Default: A random, system-chosen Availability Zone in the endpoint's Amazon
                            Web Services Region.

                            Constraints:

                              - The AvailabilityZone parameter can't be specified if the DB instance
                                is a Multi-AZ deployment.

                              - The specified Availability Zone must be in the same Amazon Web Services
                                Region as the current endpoint.

                            Example: us-east-1d
                          type: string
                          x-kubernetes-validations:
                            - message: Value is immutable once set
                              rule: self == oldSelf
                        backupRetentionPeriod:
                          description: |-
                            The number of days for which automated backups are retained. Setting this
                            parameter to a positive number enables backups. Setting this parameter to
                            0 disables automated backups.

                            This setting doesn't apply to Amazon Aurora DB instances. The retention period
                            for automated backups is managed by the DB cluster.

                            Default: 1

                            Constraints:

                              - Must be a value from 0 to 35.

                              - Can't be set to 0 if the DB instance is a source to read replicas.

                              - Can't be set to 0 for an RDS Custom for Oracle DB instance.
                          format: int64
                          type: integer
                        backupTarget:
                          description: |-
                            The location for storing automated backups and manual snapshots.

                            Valid Values:

                              - outposts (Amazon Web Services Outposts)

                              - region (Amazon Web Services Region)

                            Default: region

                            For more information, see Working with Amazon RDS on Amazon Web Services
                            Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
                            in the Amazon RDS User Guide.
                          type: string
                        caCertificateIdentifier:
                          description: |-
                            The CA certificate identifier to use for the DB instance's server certificate.

                            This setting doesn't apply to RDS Custom DB instances.

                            For more information, see Using SSL/TLS to encrypt a connection to a DB instance
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html)
                            in the Amazon RDS User Guide and Using SSL/TLS to encrypt a connection to
                            a DB cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html)
                            in the Amazon Aurora User Guide.
                          type: string
                        characterSetName:
                          description: |-
                            For supported engines, the character set (CharacterSet) to associate the
                            DB instance with.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora - The character set is managed by the DB cluster. For
                                more information, see CreateDBCluster.

                              - RDS Custom - However, if you need to change the character set, you can
                                change it on the database itself.
                          type: string
                        copyTagsToSnapshot:
                          description: |-
                            Specifies whether to copy tags from the DB instance to snapshots of the DB
                            instance. By default, tags are not copied.

                            This setting doesn't apply to Amazon Aurora DB instances. Copying tags to
                            snapshots is managed by the DB cluster. Setting this value for an Aurora
                            DB instance has no effect on the DB cluster setting.
                          type: boolean
                        customIAMInstanceProfile:
                          description: |-
                            The instance profile associated with the underlying Amazon EC2 instance of
                            an RDS Custom DB instance.

                            This setting is required for RDS Custom.

                            Constraints:

                              - The profile must exist in your account.

                              - The profile must have an IAM role that Amazon EC2 has permissions to
                                assume.

                              - The instance profile name and the associated IAM role name must start
                                with the prefix AWSRDSCustom.

                            For the list of permissions required for the IAM role, see Configure IAM
                            and your VPC (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-setup-orcl.html#custom-setup-orcl.iam-vpc)
                            in the Amazon RDS User Guide.
                          type: string
                        databaseInsightsMode:
                          description: Specifies the mode of Database Insights to enable for the instance.
                          type: string
                        dbClusterIdentifier:
                          description: |-
                            The identifier of the DB cluster that this DB instance will belong to.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        dbClusterSnapshotIdentifier:
                          description: |-
                            The identifier for the Multi-AZ DB cluster snapshot to restore from.

                            For more information on Multi-AZ DB clusters, see Multi-AZ DB cluster deployments
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/multi-az-db-clusters-concepts.html)
                            in the Amazon RDS User Guide.

                            Constraints:

                              - Must match the identifier of an existing Multi-AZ DB cluster snapshot.

                              - Can't be specified when DBSnapshotIdentifier is specified.

                              - Must be specified when DBSnapshotIdentifier isn't specified.

                              - If you are restoring from a shared manual Multi-AZ DB cluster snapshot,
                                the DBClusterSnapshotIdentifier must be the ARN of the shared snapshot.

                              - Can't be the identifier of an Aurora DB cluster snapshot.
                          type: string
                        dbInstanceClass:
                          description: |-
                            The compute and memory capacity of the DB instance, for example db.m5.large.
                            Not all DB instance classes are available in all Amazon Web Services Regions,
                            or for all database engines. For the full list of DB instance classes, and
                            availability for your engine, see DB instance classes (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
                            in the Amazon RDS User Guide or Aurora DB instance classes (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.DBInstanceClass.html)
                            in the Amazon Aurora User Guide.
                          type: string
                        dbInstanceIdentifier:
                          description: |-
                            The identifier for this DB instance. This parameter is stored as a lowercase
                            string.

                            Constraints:

                              - Must contain from 1 to 63 letters, numbers, or hyphens.

                              - First character must be a letter.

                              - Can't end with a hyphen or contain two consecutive hyphens.

                            Example: mydbinstance
                          type: string
                        dbName:
                          description: |-
                            The meaning of this parameter differs according to the database engine you
                            use.

                            # Amazon Aurora MySQL

                            The name of the database to create when the primary DB instance of the Aurora
                            MySQL DB cluster is created. If this parameter isn't specified for an Aurora
                            MySQL DB cluster, no database is created in the DB cluster.

                            Constraints:

                              - Must contain 1 to 64 alphanumeric characters.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0-9).

                              - Can't be a word reserved by the database engine.

                            # Amazon Aurora PostgreSQL

                            The name of the database to create when the primary DB instance of the Aurora
                            PostgreSQL DB cluster is created. A database named postgres is always created.
                            If this parameter is specified, an additional database with this name is
                            created.

                            Constraints:

                              - It must contain 1 to 63 alphanumeric characters.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0 to 9).

                              - Can't be a word reserved by the database engine.

                            # Amazon RDS Custom for Oracle

                            The Oracle System ID (SID) of the created RDS Custom DB instance. If you
                            don't specify a value, the default value is ORCL for non-CDBs and RDSCDB
                            for CDBs.

                            Default: ORCL

                            Constraints:

                              - Must contain 1 to 8 alphanumeric characters.

                              - Must contain a letter.

                              - Can't be a word reserved by the database engine.

                            # Amazon RDS Custom for SQL Server

                            Not applicable. Must be null.

                            # RDS for Db2

                            The name of the database to create when the DB instance is created. If this
                            parameter isn't specified, no database is created in the DB instance. In
                            some cases, we recommend that you don't add a database name. For more information,
                            see Additional considerations (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-db-instance-prereqs.html#db2-prereqs-additional-considerations)
                            in the Amazon RDS User Guide.

                            Constraints:

                              - Must contain 1 to 64 letters or numbers.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0-9).

                              - Can't be a word reserved by the specified database engine.

                            # RDS for MariaDB

                            The name of the database to create when the DB instance is created. If this
                            parameter isn't specified, no database is created in the DB instance.

                            Constraints:

                              - Must contain 1 to 64 letters or numbers.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0-9).

                              - Can't be a word reserved by the specified database engine.

                            # RDS for MySQL

                            The name of the database to create when the DB instance is created. If this
                            parameter isn't specified, no database is created in the DB instance.

                            Constraints:

                              - Must contain 1 to 64 letters or numbers.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0-9).

                              - Can't be a word reserved by the specified database engine.

                            # RDS for Oracle

                            The Oracle System ID (SID) of the created DB instance. If you don't specify
                            a value, the default value is ORCL. You can't specify the string null, or
                            any other reserved word, for DBName.

                            Default: ORCL

                            Constraints:

                              - Can't be longer than 8 characters.

                            # RDS for PostgreSQL

                            The name of the database to create when the DB instance is created. A database
                            named postgres is always created. If this parameter is specified, an additional
                            database with this name is created.

                            Constraints:

                              - Must contain 1 to 63 letters, numbers, or underscores.

                              - Must begin with a letter. Subsequent characters can be letters, underscores,
                                or digits (0-9).

                              - Can't be a word reserved by the specified database engine.

                            # RDS for SQL Server

                            Not applicable. Must be null.
                          type: string
                        dbParameterGroupName:
                          description: |-
                            The name of the DB parameter group to associate with this DB instance. If
                            you don't specify a value, then Amazon RDS uses the default DB parameter
                            group for the specified DB engine and version.

                            This setting doesn't apply to RDS Custom DB instances.

                            Constraints:

                              - Must be 1 to 255 letters, numbers, or hyphens.

                              - The first character must be a letter.

                              - Can't end with a hyphen or contain two consecutive hyphens.
                          type: string
                        dbParameterGroupRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        dbSnapshotIdentifier:
                          description: |-
                            The identifier for the DB snapshot to restore from.

                            Constraints:

                              - Must match the identifier of an existing DB snapshot.

                              - Can't be specified when DBClusterSnapshotIdentifier is specified.

                              - Must be specified when DBClusterSnapshotIdentifier isn't specified.

                              - If you are restoring from a shared manual DB snapshot, the DBSnapshotIdentifier
                                must be the ARN of the shared DB snapshot.
                          type: string
                        dbSubnetGroupName:
                          description: |-
                            A DB subnet group to associate with this DB instance.

                            Constraints:

                              - Must match the name of an existing DB subnet group.

                            Example: mydbsubnetgroup
                          type: string
                        dbSubnetGroupRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        deletionProtection:
                          description: |-
                            Specifies whether the DB instance has deletion protection enabled. The database
                            can't be deleted when deletion protection is enabled. By default, deletion
                            protection isn't enabled. For more information, see Deleting a DB Instance
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_DeleteInstance.html).

                            This setting doesn't apply to Amazon Aurora DB instances. You can enable
                            or disable deletion protection for the DB cluster. For more information,
                            see CreateDBCluster. DB instances in a DB cluster can be deleted even when
                            deletion protection is enabled for the DB cluster.
                          type: boolean
                        destinationRegion:
                          description: DestinationRegion is used for presigning the request to a given region.
                          type: string
                        domain:
                          description: |-
                            The Active Directory directory ID to create the DB instance in. Currently,
                            you can create only Db2, MySQL, Microsoft SQL Server, Oracle, and PostgreSQL
                            DB instances in an Active Directory Domain.

                            For more information, see Kerberos Authentication (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/kerberos-authentication.html)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (The domain is managed by the DB cluster.)

                              - RDS Custom
                          type: string
                        domainIAMRoleName:
                          description: |-
                            The name of the IAM role to use when making API calls to the Directory Service.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (The domain is managed by the DB cluster.)

                              - RDS Custom
                          type: string
                        enableCloudwatchLogsExports:
                          description: |-
                            The list of log types to enable for exporting to CloudWatch Logs. For more
                            information, see Publishing Database Logs to Amazon CloudWatch Logs (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (CloudWatch Logs exports are managed by the DB cluster.)

                              - RDS Custom

                            The following values are valid for each DB engine:

                              - RDS for Db2 - diag.log | notify.log

                              - RDS for MariaDB - audit | error | general | slowquery

                              - RDS for Microsoft SQL Server - agent | error

                              - RDS for MySQL - audit | error | general | slowquery

                              - RDS for Oracle - alert | audit | listener | trace | oemagent

                              - RDS for PostgreSQL - postgresql | upgrade
                          items:
                            type: string
                          type: array
                        enableCustomerOwnedIP:
                          description: |-
                            Specifies whether to enable a customer-owned IP address (CoIP) for an RDS
                            on Outposts DB instance.

                            A CoIP provides local or external connectivity to resources in your Outpost
                            subnets through your on-premises network. For some use cases, a CoIP can
                            provide lower latency for connections to the DB instance from outside of
                            its virtual private cloud (VPC) on your local network.

                            For more information about RDS on Outposts, see Working with Amazon RDS on
                            Amazon Web Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
                            in the Amazon RDS User Guide.

                            For more information about CoIPs, see Customer-owned IP addresses (https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing)
                            in the Amazon Web Services Outposts User Guide.
                          type: boolean
                        enableIAMDatabaseAuthentication:
                          description: |-
                            Specifies whether to enable mapping of Amazon Web Services Identity and Access
                            Management (IAM) accounts to database accounts. By default, mapping isn't
                            enabled.

                            For more information, see IAM Database Authentication for MySQL and PostgreSQL
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (Mapping Amazon Web Services IAM accounts to database
                                accounts is managed by the DB cluster.)

                              - RDS Custom
                          type: boolean
                        engine:
                          description: |-
                            The database engine to use for this DB instance.

                            Not every database engine is available in every Amazon Web Services Region.

                            Valid Values:

                              - aurora-mysql (for Aurora MySQL DB instances)

                              - aurora-postgresql (for Aurora PostgreSQL DB instances)

                              - custom-oracle-ee (for RDS Custom for Oracle DB instances)

                              - custom-oracle-ee-cdb (for RDS Custom for Oracle DB instances)

                              - custom-oracle-se2 (for RDS Custom for Oracle DB instances)

                              - custom-oracle-se2-cdb (for RDS Custom for Oracle DB instances)

                              - custom-sqlserver-ee (for RDS Custom for SQL Server DB instances)

                              - custom-sqlserver-se (for RDS Custom for SQL Server DB instances)

                              - custom-sqlserver-web (for RDS Custom for SQL Server DB instances)

                              - custom-sqlserver-dev (for RDS Custom for SQL Server DB instances)

                              - db2-ae

                              - db2-se

                              - mariadb

                              - mysql

                              - oracle-ee

                              - oracle-ee-cdb

                              - oracle-se2

                              - oracle-se2-cdb

                              - postgres

                              - sqlserver-ee

                              - sqlserver-se

                              - sqlserver-ex

                              - sqlserver-web
                          type: string
                        engineVersion:
                          description: |-
                            The version number of the database engine to use.

                            This setting doesn't apply to Amazon Aurora DB instances. The version number
                            of the database engine the DB instance uses is managed by the DB cluster.

                            For a list of valid engine versions, use the DescribeDBEngineVersions operation.

                            The following are the database engines and links to information about the
                            major and minor versions that are available with Amazon RDS. Not every database
                            engine is available for every Amazon Web Services Region.

                            # Amazon RDS Custom for Oracle

                            A custom engine version (CEV) that you have previously created. This setting
                            is required for RDS Custom for Oracle. The CEV name has the following format:
                            19.customized_string. A valid CEV name is 19.my_cev1. For more information,
                            see Creating an RDS Custom for Oracle DB instance (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-creating.html#custom-creating.create)
                            in the Amazon RDS User Guide.

                            # Amazon RDS Custom for SQL Server

                            See RDS Custom for SQL Server general requirements (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/custom-reqs-limits-MS.html)
                            in the Amazon RDS User Guide.

                            # RDS for Db2

                            For information, see Db2 on Amazon RDS versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Db2.html#Db2.Concepts.VersionMgmt)
                            in the Amazon RDS User Guide.

                            # RDS for MariaDB

                            For information, see MariaDB on Amazon RDS versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MariaDB.html#MariaDB.Concepts.VersionMgmt)
                            in the Amazon RDS User Guide.

                            # RDS for Microsoft SQL Server

                            For information, see Microsoft SQL Server versions on Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.VersionSupport)
                            in the Amazon RDS User Guide.

                            # RDS for MySQL

                            For information, see MySQL on Amazon RDS versions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_MySQL.html#MySQL.Concepts.VersionMgmt)
                            in the Amazon RDS User Guide.

                            # RDS for Oracle

                            For information, see Oracle Database Engine release notes (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.PatchComposition.html)
                            in the Amazon RDS User Guide.

                            # RDS for PostgreSQL

                            For information, see Amazon RDS for PostgreSQL versions and extensions (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_PostgreSQL.html#PostgreSQL.Concepts)
                            in the Amazon RDS User Guide.
                          type: string
                        iops:
                          description: |-
                            The amount of Provisioned IOPS (input/output operations per second) to initially
                            allocate for the DB instance. For information about valid IOPS values, see
                            Amazon RDS DB instance storage (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to Amazon Aurora DB instances. Storage is managed
                            by the DB cluster.

                            Constraints:

                              - For RDS for Db2, MariaDB, MySQL, Oracle, and PostgreSQL - Must be a
                                multiple between .5 and 50 of the storage amount for the DB instance.

                              - For RDS for SQL Server - Must be a multiple between 1 and 50 of the
                                storage amount for the DB instance.
                          format: int64
                          type: integer
                        kmsKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier for an encrypted DB instance.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
                            Web Services account, specify the key ARN or alias ARN.

                            This setting doesn't apply to Amazon Aurora DB instances. The Amazon Web
                            Services KMS key identifier is managed by the DB cluster. For more information,
                            see CreateDBCluster.

                            If StorageEncrypted is enabled, and you do not specify a value for the KmsKeyId
                            parameter, then Amazon RDS uses your default KMS key. There is a default
                            KMS key for your Amazon Web Services account. Your Amazon Web Services account
                            has a different default KMS key for each Amazon Web Services Region.

                            For Amazon RDS Custom, a KMS key is required for DB instances. For most RDS
                            engines, if you leave this parameter empty while enabling StorageEncrypted,
                            the engine uses the default KMS key. However, RDS Custom doesn't use the
                            default key when this parameter is empty. You must explicitly specify a key.
                          type: string
                        kmsKeyRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        licenseModel:
                          description: |-
                            The license model information for this DB instance.

                            License models for RDS for Db2 require additional configuration. The Bring
                            Your Own License (BYOL) model requires a custom parameter group and an Amazon
                            Web Services License Manager self-managed license. The Db2 license through
                            Amazon Web Services Marketplace model requires an Amazon Web Services Marketplace
                            subscription. For more information, see Amazon RDS for Db2 licensing options
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-licensing.html)
                            in the Amazon RDS User Guide.

                            The default for RDS for Db2 is bring-your-own-license.

                            This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.

                            Valid Values:

                              - RDS for Db2 - bring-your-own-license | marketplace-license

                              - RDS for MariaDB - general-public-license

                              - RDS for Microsoft SQL Server - license-included

                              - RDS for MySQL - general-public-license

                              - RDS for Oracle - bring-your-own-license | license-included

                              - RDS for PostgreSQL - postgresql-license
                          type: string
                        manageMasterUserPassword:
                          description: |-
                            Specifies whether to manage the master user password with Amazon Web Services
                            Secrets Manager.

                            For more information, see Password management with Amazon Web Services Secrets
                            Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
                            in the Amazon RDS User Guide.

                            Constraints:

                              - Can't manage the master user password with Amazon Web Services Secrets
                                Manager if MasterUserPassword is specified.
                          type: boolean
                        masterUserPassword:
                          description: |-
                            The password for the master user.

                            This setting doesn't apply to Amazon Aurora DB instances. The password for
                            the master user is managed by the DB cluster.

                            Constraints:

                              - Can't be specified if ManageMasterUserPassword is turned on.

                              - Can include any printable ASCII character except "/", """, or "@". For
                                RDS for Oracle, can't include the "&" (ampersand) or the "'" (single quotes)
                                character.

                            Length Constraints:

                              - RDS for Db2 - Must contain from 8 to 255 characters.

                              - RDS for MariaDB - Must contain from 8 to 41 characters.

                              - RDS for Microsoft SQL Server - Must contain from 8 to 128 characters.

                              - RDS for MySQL - Must contain from 8 to 41 characters.

                              - RDS for Oracle - Must contain from 8 to 30 characters.

                              - RDS for PostgreSQL - Must contain from 8 to 128 characters.
                          properties:
                            key:
                              description: Key is the key within the secret
                              type: string
                            name:
                              description: name is unique within a namespace to reference a secret resource.
                              type: string
                            namespace:
                              description: namespace defines the space within which the secret name must be unique.
                              type: string
                          required:
                            - key
                          type: object
                          x-kubernetes-map-type: atomic
                        masterUserSecretKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier to encrypt a secret that is automatically
                            generated and managed in Amazon Web Services Secrets Manager.

                            This setting is valid only if the master user password is managed by RDS
                            in Amazon Web Services Secrets Manager for the DB instance.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key. To use a KMS key in a different Amazon
                            Web Services account, specify the key ARN or alias ARN.

                            If you don't specify MasterUserSecretKmsKeyId, then the aws/secretsmanager
                            KMS key is used to encrypt the secret. If the secret is in a different Amazon
                            Web Services account, then you can't use the aws/secretsmanager KMS key to
                            encrypt the secret, and you must use a customer managed KMS key.

                            There is a default KMS key for your Amazon Web Services account. Your Amazon
                            Web Services account has a different default KMS key for each Amazon Web
                            Services Region.
                          type: string
                        masterUserSecretKMSKeyRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        masterUsername:
                          description: |-
                            The name for the master user.

                            This setting doesn't apply to Amazon Aurora DB instances. The name for the
                            master user is managed by the DB cluster.

                            This setting is required for RDS DB instances.

                            Constraints:

                              - Must be 1 to 16 letters, numbers, or underscores.

                              - First character must be a letter.

                              - Can't be a reserved word for the chosen database engine.
                          type: string
                        maxAllocatedStorage:
                          description: |-
                            The upper limit in gibibytes (GiB) to which Amazon RDS can automatically
                            scale the storage of the DB instance.

                            For more information about this setting, including limitations that apply
                            to it, see Managing capacity automatically with Amazon RDS storage autoscaling
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (Storage is managed by the DB cluster.)

                              - RDS Custom
                          format: int64
                          type: integer
                        monitoringInterval:
                          description: |-
                            The interval, in seconds, between points when Enhanced Monitoring metrics
                            are collected for the DB instance. To disable collection of Enhanced Monitoring
                            metrics, specify 0.

                            If MonitoringRoleArn is specified, then you must set MonitoringInterval to
                            a value other than 0.

                            This setting doesn't apply to RDS Custom DB instances.

                            Valid Values: 0 | 1 | 5 | 10 | 15 | 30 | 60

                            Default: 0
                          format: int64
                          type: integer
                        monitoringRoleARN:
                          description: |-
                            The ARN for the IAM role that permits RDS to send enhanced monitoring metrics
                            to Amazon CloudWatch Logs. For example, arn:aws:iam:123456789012:role/emaccess.
                            For information on creating a monitoring role, see Setting Up and Enabling
                            Enhanced Monitoring (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling)
                            in the Amazon RDS User Guide.

                            If MonitoringInterval is set to a value other than 0, then you must supply
                            a MonitoringRoleArn value.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        multiAZ:
                          description: |-
                            Specifies whether the DB instance is a Multi-AZ deployment. You can't set
                            the AvailabilityZone parameter if the DB instance is a Multi-AZ deployment.

                            This setting doesn't apply to the following DB instances:

                              - Amazon Aurora (DB instance Availability Zones (AZs) are managed by the
                                DB cluster.)

                              - RDS Custom
                          type: boolean
                        ncharCharacterSetName:
                          description: |-
                            The name of the NCHAR character set for the Oracle DB instance.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        networkType:
                          description: |-
                            The network type of the DB instance.

                            The network type is determined by the DBSubnetGroup specified for the DB
                            instance. A DBSubnetGroup can support only the IPv4 protocol or the IPv4
                            and the IPv6 protocols (DUAL).

                            For more information, see Working with a DB instance in a VPC (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html)
                            in the Amazon RDS User Guide.

                            Valid Values: IPV4 | DUAL
                          type: string
                        optionGroupName:
                          description: |-
                            The option group to associate the DB instance with.

                            Permanent options, such as the TDE option for Oracle Advanced Security TDE,
                            can't be removed from an option group. Also, that option group can't be removed
                            from a DB instance after it is associated with a DB instance.

                            This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
                          type: string
                        performanceInsightsEnabled:
                          description: |-
                            Specifies whether to enable Performance Insights for the DB instance. For
                            more information, see Using Amazon Performance Insights (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: boolean
                        performanceInsightsKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier for encryption of Performance
                            Insights data.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key.

                            If you don't specify a value for PerformanceInsightsKMSKeyId, then Amazon
                            RDS uses your default KMS key. There is a default KMS key for your Amazon
                            Web Services account. Your Amazon Web Services account has a different default
                            KMS key for each Amazon Web Services Region.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        performanceInsightsRetentionPeriod:
                          description: |-
                            The number of days to retain Performance Insights data.

                            This setting doesn't apply to RDS Custom DB instances.

                            Valid Values:

                              - 7

                              - month * 31, where month is a number of months from 1-23. Examples: 93
                                (3 months * 31), 341 (11 months * 31), 589 (19 months * 31)

                              - 731

                            Default: 7 days

                            If you specify a retention period that isn't valid, such as 94, Amazon RDS
                            returns an error.
                          format: int64
                          type: integer
                        port:
                          description: |-
                            The port number on which the database accepts connections.

                            This setting doesn't apply to Aurora DB instances. The port number is managed
                            by the cluster.

                            Valid Values: 1150-65535

                            Default:

                              - RDS for Db2 - 50000

                              - RDS for MariaDB - 3306

                              - RDS for Microsoft SQL Server - 1433

                              - RDS for MySQL - 3306

                              - RDS for Oracle - 1521

                              - RDS for PostgreSQL - 5432

                            Constraints:

                              - For RDS for Microsoft SQL Server, the value can't be 1234, 1434, 3260,
                                3343, 3389, 47001, or 49152-49156.
                          format: int64
                          type: integer
                        preSignedURL:
                          description: |-
                            When you are creating a read replica from one Amazon Web Services GovCloud
                            (US) Region to another or from one China Amazon Web Services Region to another,
                            the URL that contains a Signature Version 4 signed request for the CreateDBInstanceReadReplica
                            API operation in the source Amazon Web Services Region that contains the
                            source DB instance.

                            This setting applies only to Amazon Web Services GovCloud (US) Regions and
                            China Amazon Web Services Regions. It's ignored in other Amazon Web Services
                            Regions.

                            This setting applies only when replicating from a source DB instance. Source
                            DB clusters aren't supported in Amazon Web Services GovCloud (US) Regions
                            and China Amazon Web Services Regions.

                            You must specify this parameter when you create an encrypted read replica
                            from another Amazon Web Services Region by using the Amazon RDS API. Don't
                            specify PreSignedUrl when you are creating an encrypted read replica in the
                            same Amazon Web Services Region.

                            The presigned URL must be a valid request for the CreateDBInstanceReadReplica
                            API operation that can run in the source Amazon Web Services Region that
                            contains the encrypted source DB instance. The presigned URL request must
                            contain the following parameter values:

                              - DestinationRegion - The Amazon Web Services Region that the encrypted
                                read replica is created in. This Amazon Web Services Region is the same
                                one where the CreateDBInstanceReadReplica operation is called that contains
                                this presigned URL. For example, if you create an encrypted DB instance
                                in the us-west-1 Amazon Web Services Region, from a source DB instance
                                in the us-east-2 Amazon Web Services Region, then you call the CreateDBInstanceReadReplica
                                operation in the us-east-1 Amazon Web Services Region and provide a presigned
                                URL that contains a call to the CreateDBInstanceReadReplica operation
                                in the us-west-2 Amazon Web Services Region. For this example, the DestinationRegion
                                in the presigned URL must be set to the us-east-1 Amazon Web Services
                                Region.

                              - KmsKeyId - The KMS key identifier for the key to use to encrypt the
                                read replica in the destination Amazon Web Services Region. This is the
                                same identifier for both the CreateDBInstanceReadReplica operation that
                                is called in the destination Amazon Web Services Region, and the operation
                                contained in the presigned URL.

                              - SourceDBInstanceIdentifier - The DB instance identifier for the encrypted
                                DB instance to be replicated. This identifier must be in the Amazon Resource
                                Name (ARN) format for the source Amazon Web Services Region. For example,
                                if you are creating an encrypted read replica from a DB instance in the
                                us-west-2 Amazon Web Services Region, then your SourceDBInstanceIdentifier
                                looks like the following example: arn:aws:rds:us-west-2:123456789012:instance:mysql-instance1-20161115.

                            To learn how to generate a Signature Version 4 signed request, see Authenticating
                            Requests: Using Query Parameters (Amazon Web Services Signature Version 4)
                            (https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html)
                            and Signature Version 4 Signing Process (https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).

                            If you are using an Amazon Web Services SDK tool or the CLI, you can specify
                            SourceRegion (or --source-region for the CLI) instead of specifying PreSignedUrl
                            manually. Specifying SourceRegion autogenerates a presigned URL that is a
                            valid request for the operation that can run in the source Amazon Web Services
                            Region.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        preferredBackupWindow:
                          description: |-
                            The daily time range during which automated backups are created if automated
                            backups are enabled, using the BackupRetentionPeriod parameter. The default
                            is a 30-minute window selected at random from an 8-hour block of time for
                            each Amazon Web Services Region. For more information, see Backup window
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.BackupWindow)
                            in the Amazon RDS User Guide.

                            This setting doesn't apply to Amazon Aurora DB instances. The daily time
                            range for creating automated backups is managed by the DB cluster.

                            Constraints:

                              - Must be in the format hh24:mi-hh24:mi.

                              - Must be in Universal Coordinated Time (UTC).

                              - Must not conflict with the preferred maintenance window.

                              - Must be at least 30 minutes.
                          type: string
                        preferredMaintenanceWindow:
                          description: |-
                            The time range each week during which system maintenance can occur. For more
                            information, see Amazon RDS Maintenance Window (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#Concepts.DBMaintenance)
                            in the Amazon RDS User Guide.

                            The default is a 30-minute window selected at random from an 8-hour block
                            of time for each Amazon Web Services Region, occurring on a random day of
                            the week.

                            Constraints:

                              - Must be in the format ddd:hh24:mi-ddd:hh24:mi.

                              - The day values must be mon | tue | wed | thu | fri | sat | sun.

                              - Must be in Universal Coordinated Time (UTC).

                              - Must not conflict with the preferred backup window.

                              - Must be at least 30 minutes.
                          type: string
                        processorFeatures:
                          description: |-
                            The number of CPU cores and the number of threads per core for the DB instance
                            class of the DB instance.

                            This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
                          items:
                            description: |-
                              Contains the processor features of a DB instance class.

                              To specify the number of CPU cores, use the coreCount feature name for the
                              Name parameter. To specify the number of threads per core, use the threadsPerCore
                              feature name for the Name parameter.

                              You can set the processor features of the DB instance class for a DB instance
                              when you call one of the following actions:

                                - CreateDBInstance

                                - ModifyDBInstance

                                - RestoreDBInstanceFromDBSnapshot

                                - RestoreDBInstanceFromS3

                                - RestoreDBInstanceToPointInTime

                              You can view the valid processor values for a particular instance class by
                              calling the DescribeOrderableDBInstanceOptions action and specifying the
                              instance class for the DBInstanceClass parameter.

                              In addition, you can use the following actions for DB instance class processor
                              information:

                                - DescribeDBInstances

                                - DescribeDBSnapshots

                                - DescribeValidDBInstanceModifications

                              If you call DescribeDBInstances, ProcessorFeature returns non-null values
                              only if the following conditions are met:

                                - You are accessing an Oracle DB instance.

                                - Your Oracle DB instance class supports configuring the number of CPU
                                  cores and threads per core.

                                - The current number CPU cores and threads is set to a non-default value.

                              For more information, see Configuring the processor for a DB instance class
                              in RDS for Oracle (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                              in the Amazon RDS User Guide.
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        promotionTier:
                          description: |-
                            The order of priority in which an Aurora Replica is promoted to the primary
                            instance after a failure of the existing primary instance. For more information,
                            see Fault Tolerance for an Aurora DB Cluster (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html#Aurora.Managing.FaultTolerance)
                            in the Amazon Aurora User Guide.

                            This setting doesn't apply to RDS Custom DB instances.

                            Default: 1

                            Valid Values: 0 - 15
                          format: int64
                          type: integer
                        publiclyAccessible:
                          description: |-
                            Specifies whether the DB instance is publicly accessible.

                            When the DB instance is publicly accessible and you connect from outside
                            of the DB instance's virtual private cloud (VPC), its Domain Name System
                            (DNS) endpoint resolves to the public IP address. When you connect from within
                            the same VPC as the DB instance, the endpoint resolves to the private IP
                            address. Access to the DB instance is ultimately controlled by the security
                            group it uses. That public access is not permitted if the security group
                            assigned to the DB instance doesn't permit it.

                            When the DB instance isn't publicly accessible, it is an internal DB instance
                            with a DNS name that resolves to a private IP address.

                            Default: The default behavior varies depending on whether DBSubnetGroupName
                            is specified.

                            If DBSubnetGroupName isn't specified, and PubliclyAccessible isn't specified,
                            the following applies:

                              - If the default VPC in the target Region doesn’t have an internet gateway
                                attached to it, the DB instance is private.

                              - If the default VPC in the target Region has an internet gateway attached
                                to it, the DB instance is public.

                            If DBSubnetGroupName is specified, and PubliclyAccessible isn't specified,
                            the following applies:

                              - If the subnets are part of a VPC that doesn’t have an internet gateway
                                attached to it, the DB instance is private.

                              - If the subnets are part of a VPC that has an internet gateway attached
                                to it, the DB instance is public.
                          type: boolean
                        replicaMode:
                          description: |-
                            The open mode of the replica database: mounted or read-only.

                            This parameter is only supported for Oracle DB instances.

                            Mounted DB replicas are included in Oracle Database Enterprise Edition. The
                            main use case for mounted replicas is cross-Region disaster recovery. The
                            primary database doesn't use Active Data Guard to transmit information to
                            the mounted replica. Because it doesn't accept user connections, a mounted
                            replica can't serve a read-only workload.

                            You can create a combination of mounted and read-only DB replicas for the
                            same primary DB instance. For more information, see Working with Oracle Read
                            Replicas for Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.html)
                            in the Amazon RDS User Guide.

                            For RDS Custom, you must specify this parameter and set it to mounted. The
                            value won't be set by default. After replica creation, you can manage the
                            open mode manually.
                          type: string
                        sourceDBInstanceIdentifier:
                          description: |-
                            The identifier of the DB instance that will act as the source for the read
                            replica. Each DB instance can have up to 15 read replicas, with the exception
                            of Oracle and SQL Server, which can have up to five.

                            Constraints:

                              - Must be the identifier of an existing Db2, MariaDB, MySQL, Oracle, PostgreSQL,
                                or SQL Server DB instance.

                              - Can't be specified if the SourceDBClusterIdentifier parameter is also
                                specified.

                              - For the limitations of Oracle read replicas, see Version and licensing
                                considerations for RDS for Oracle replicas (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/oracle-read-replicas.limitations.html#oracle-read-replicas.limitations.versions-and-licenses)
                                in the Amazon RDS User Guide.

                              - For the limitations of SQL Server read replicas, see Read replica limitations
                                with SQL Server (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/SQLServer.ReadReplicas.html#SQLServer.ReadReplicas.Limitations)
                                in the Amazon RDS User Guide.

                              - The specified DB instance must have automatic backups enabled, that
                                is, its backup retention period must be greater than 0.

                              - If the source DB instance is in the same Amazon Web Services Region
                                as the read replica, specify a valid DB instance identifier.

                              - If the source DB instance is in a different Amazon Web Services Region
                                from the read replica, specify a valid DB instance ARN. For more information,
                                see Constructing an ARN for Amazon RDS (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing)
                                in the Amazon RDS User Guide. This doesn't apply to SQL Server or RDS
                                Custom, which don't support cross-Region replicas.
                          type: string
                        sourceRegion:
                          description: |-
                            SourceRegion is the source region where the resource exists. This is not
                            sent over the wire and is only used for presigning. This value should always
                            have the same region as the source ARN.
                          type: string
                        storageEncrypted:
                          description: |-
                            Specifes whether the DB instance is encrypted. By default, it isn't encrypted.

                            For RDS Custom DB instances, either enable this setting or leave it unset.
                            Otherwise, Amazon RDS reports an error.

                            This setting doesn't apply to Amazon Aurora DB instances. The encryption
                            for DB instances is managed by the DB cluster.
                          type: boolean
                        storageThroughput:
                          description: |-
                            The storage throughput value for the DB instance.

                            This setting applies only to the gp3 storage type.

                            This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
                          format: int64
                          type: integer
                        storageType:
                          description: |-
                            The storage type to associate with the DB instance.

                            If you specify io1, io2, or gp3, you must also include a value for the Iops
                            parameter.

                            This setting doesn't apply to Amazon Aurora DB instances. Storage is managed
                            by the DB cluster.

                            Valid Values: gp2 | gp3 | io1 | io2 | standard

                            Default: io1, if the Iops parameter is specified. Otherwise, gp2.
                          type: string
                        tags:
                          description: Tags to assign to the DB instance.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        tdeCredentialARN:
                          description: |-
                            The ARN from the key store with which to associate the instance for TDE encryption.

                            This setting doesn't apply to Amazon Aurora or RDS Custom DB instances.
                          type: string
                        tdeCredentialPassword:
                          description: |-
                            The password for the given ARN from the key store in order to access the
                            device.

                            This setting doesn't apply to RDS Custom DB instances.
                          type: string
                        timezone:
                          description: |-
                            The time zone of the DB instance. The time zone parameter is currently supported
                            only by RDS for Db2 (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/db2-time-zone)
                            and RDS for SQL Server (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone).
                          type: string
                        useDefaultProcessorFeatures:
                          description: |-
                            Specifies whether the DB instance class of the DB instance uses its default
                            processor features.

                            This setting doesn't apply to RDS Custom.
                          type: boolean
                        vpcSecurityGroupIDs:
                          description: |-
                            A list of Amazon EC2 VPC security groups to associate with this DB instance.

                            This setting doesn't apply to Amazon Aurora DB instances. The associated
                            list of EC2 VPC security groups is managed by the DB cluster.

                            Default: The default EC2 VPC security group for the DB subnet group's VPC.
                          items:
                            type: string
                          type: array
                        vpcSecurityGroupRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                      required:
                        - dbInstanceClass
                        - dbInstanceIdentifier
                        - engine
                      type: object
                    status:
                      description: DBInstanceStatus defines the observed state of DBInstance
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        activityStreamEngineNativeAuditFieldsIncluded:
                          description: |-
                            Indicates whether engine-native audit fields are included in the database
                            activity stream.
                          type: boolean
                        activityStreamKMSKeyID:
                          description: |-
                            The Amazon Web Services KMS key identifier used for encrypting messages in
                            the database activity stream. The Amazon Web Services KMS key identifier
                            is the key ARN, key ID, alias ARN, or alias name for the KMS key.
                          type: string
                        activityStreamKinesisStreamName:
                          description: |-
                            The name of the Amazon Kinesis data stream used for the database activity
                            stream.
                          type: string
                        activityStreamMode:
                          description: |-
                            The mode of the database activity stream. Database events such as a change
                            or access generate an activity stream event. RDS for Oracle always handles
                            these events asynchronously.
                          type: string
                        activityStreamPolicyStatus:
                          description: The status of the policy state of the activity stream.
                          type: string
                        activityStreamStatus:
                          description: The status of the database activity stream.
                          type: string
                        associatedRoles:
                          description: |-
                            The Amazon Web Services Identity and Access Management (IAM) roles associated
                            with the DB instance.
                          items:
                            description: |-
                              Information about an Amazon Web Services Identity and Access Management (IAM)
                              role that is associated with a DB instance.
                            properties:
                              featureName:
                                type: string
                              roleARN:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        automaticRestartTime:
                          description: The time when a stopped DB instance is restarted automatically.
                          format: date-time
                          type: string
                        automationMode:
                          description: |-
                            The automation mode of the RDS Custom DB instance: full or all paused. If
                            full, the DB instance automates monitoring and instance recovery. If all
                            paused, the instance pauses automation for the duration set by --resume-full-automation-mode-minutes.
                          type: string
                        awsBackupRecoveryPointARN:
                          description: |-
                            The Amazon Resource Name (ARN) of the recovery point in Amazon Web Services
                            Backup.
                          type: string
                        certificateDetails:
                          description: The details of the DB instance's server certificate.
                          properties:
                            cAIdentifier:
                              type: string
                            validTill:
                              format: date-time
                              type: string
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        customerOwnedIPEnabled:
                          description: |-
                            Indicates whether a customer-owned IP address (CoIP) is enabled for an RDS
                            on Outposts DB instance.

                            A CoIP provides local or external connectivity to resources in your Outpost
                            subnets through your on-premises network. For some use cases, a CoIP can
                            provide lower latency for connections to the DB instance from outside of
                            its virtual private cloud (VPC) on your local network.

                            For more information about RDS on Outposts, see Working with Amazon RDS on
                            Amazon Web Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
                            in the Amazon RDS User Guide.

                            For more information about CoIPs, see Customer-owned IP addresses (https://docs.aws.amazon.com/outposts/latest/userguide/routing.html#ip-addressing)
                            in the Amazon Web Services Outposts User Guide.
                          type: boolean
                        dbInstanceAutomatedBackupsReplications:
                          description: The list of replicated automated backups associated with the DB instance.
                          items:
                            description: |-
                              Automated backups of a DB instance replicated to another Amazon Web Services
                              Region. They consist of system backups, transaction logs, and database instance
                              properties.
                            properties:
                              dbInstanceAutomatedBackupsARN:
                                type: string
                            type: object
                          type: array
                        dbInstancePort:
                          description: |-
                            The port that the DB instance listens on. If the DB instance is part of a
                            DB cluster, this can be a different port than the DB cluster port.
                          format: int64
                          type: integer
                        dbInstanceStatus:
                          description: |-
                            The current state of this database.

                            For information about DB instance statuses, see Viewing DB instance status
                            (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/accessing-monitoring.html#Overview.DBInstance.Status)
                            in the Amazon RDS User Guide.
                          type: string
                        dbParameterGroups:
                          description: The list of DB parameter groups applied to this DB instance.
                          items:
                            description: |-
                              The status of the DB parameter group.

                              This data type is used as a response element in the following actions:

                                - CreateDBInstance

                                - CreateDBInstanceReadReplica

                                - DeleteDBInstance

                                - ModifyDBInstance

                                - RebootDBInstance

                                - RestoreDBInstanceFromDBSnapshot
                            properties:
                              dbParameterGroupName:
                                type: string
                              parameterApplyStatus:
                                type: string
                            type: object
                          type: array
                        dbSubnetGroup:
                          description: |-
                            Information about the subnet group associated with the DB instance, including
                            the name, description, and subnets in the subnet group.
                          properties:
                            dbSubnetGroupARN:
                              type: string
                            dbSubnetGroupDescription:
                              type: string
                            dbSubnetGroupName:
                              type: string
                            subnetGroupStatus:
                              type: string
                            subnets:
                              items:
                                description: |-
                                  This data type is used as a response element for the DescribeDBSubnetGroups
                                  operation.
                                properties:
                                  subnetAvailabilityZone:
                                    description: |-
                                      Contains Availability Zone information.

                                      This data type is used as an element in the OrderableDBInstanceOption data
                                      type.
                                    properties:
                                      name:
                                        type: string
                                    type: object
                                  subnetIdentifier:
                                    type: string
                                  subnetOutpost:
                                    description: |-
                                      A data type that represents an Outpost.

                                      For more information about RDS on Outposts, see Amazon RDS on Amazon Web
                                      Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
                                      in the Amazon RDS User Guide.
                                    properties:
                                      arn:
                                        type: string
                                    type: object
                                  subnetStatus:
                                    type: string
                                type: object
                              type: array
                            supportedNetworkTypes:
                              items:
                                type: string
                              type: array
                            vpcID:
                              type: string
                          type: object
                        dbSystemID:
                          description: |-
                            The Oracle system ID (Oracle SID) for a container database (CDB). The Oracle
                            SID is also the name of the CDB. This setting is only valid for RDS Custom
                            DB instances.
                          type: string
                        dbiResourceID:
                          description: |-
                            The Amazon Web Services Region-unique, immutable identifier for the DB instance.
                            This identifier is found in Amazon Web Services CloudTrail log entries whenever
                            the Amazon Web Services KMS key for the DB instance is accessed.
                          type: string
                        domainMemberships:
                          description: The Active Directory Domain membership records associated with the DB instance.
                          items:
                            description: |-
                              An Active Directory Domain membership record associated with the DB instance
                              or cluster.
                            properties:
                              domain:
                                type: string
                              fQDN:
                                type: string
                              iamRoleName:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        enabledCloudwatchLogsExports:
                          description: |-
                            A list of log types that this DB instance is configured to export to CloudWatch
                            Logs.

                            Log types vary by DB engine. For information about the log types for each
                            DB engine, see Monitoring Amazon RDS log files (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html)
                            in the Amazon RDS User Guide.
                          items:
                            type: string
                          type: array
                        endpoint:
                          description: |-
                            The connection endpoint for the DB instance.

                            The endpoint might not be shown for instances with the status of creating.
                          properties:
                            address:
                              type: string
                            hostedZoneID:
                              type: string
                            port:
                              format: int64
                              type: integer
                          type: object
                        enhancedMonitoringResourceARN:
                          description: |-
                            The Amazon Resource Name (ARN) of the Amazon CloudWatch Logs log stream that
                            receives the Enhanced Monitoring metrics data for the DB instance.
                          type: string
                        iamDatabaseAuthenticationEnabled:
                          description: |-
                            Indicates whether mapping of Amazon Web Services Identity and Access Management
                            (IAM) accounts to database accounts is enabled for the DB instance.

                            For a list of engine versions that support IAM database authentication, see
                            IAM database authentication (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RDS_Fea_Regions_DB-eng.Feature.IamDatabaseAuthentication.html)
                            in the Amazon RDS User Guide and IAM database authentication in Aurora (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.Aurora_Fea_Regions_DB-eng.Feature.IAMdbauth.html)
                            in the Amazon Aurora User Guide.
                          type: boolean
                        instanceCreateTime:
                          description: The date and time when the DB instance was created.
                          format: date-time
                          type: string
                        latestRestorableTime:
                          description: |-
                            The latest time to which a database in this DB instance can be restored with
                            point-in-time restore.
                          format: date-time
                          type: string
                        listenerEndpoint:
                          description: The listener connection endpoint for SQL Server Always On.
                          properties:
                            address:
                              type: string
                            hostedZoneID:
                              type: string
                            port:
                              format: int64
                              type: integer
                          type: object
                        masterUserSecret:
                          description: |-
                            The secret managed by RDS in Amazon Web Services Secrets Manager for the
                            master user password.

                            For more information, see Password management with Amazon Web Services Secrets
                            Manager (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-secrets-manager.html)
                            in the Amazon RDS User Guide.
                          properties:
                            kmsKeyID:
                              type: string
                            secretARN:
                              type: string
                            secretStatus:
                              type: string
                          type: object
                        optionGroupMemberships:
                          description: The list of option group memberships for this DB instance.
                          items:
                            description: Provides information on the option groups the DB instance is a member of.
                            properties:
                              optionGroupName:
                                type: string
                              status:
                                type: string
                            type: object
                          type: array
                        pendingModifiedValues:
                          description: |-
                            Information about pending changes to the DB instance. This information is
                            returned only when there are pending changes. Specific changes are identified
                            by subelements.
                          properties:
                            allocatedStorage:
                              format: int64
                              type: integer
                            automationMode:
                              type: string
                            backupRetentionPeriod:
                              format: int64
                              type: integer
                            caCertificateIdentifier:
                              type: string
                            dbInstanceClass:
                              type: string
                            dbInstanceIdentifier:
                              type: string
                            dbSubnetGroupName:
                              type: string
                            engineVersion:
                              type: string
                            iamDatabaseAuthenticationEnabled:
                              type: boolean
                            iops:
                              format: int64
                              type: integer
                            licenseModel:
                              type: string
                            masterUserPassword:
                              type: string
                            multiAZ:
                              type: boolean
                            pendingCloudwatchLogsExports:
                              description: |-
                                A list of the log types whose configuration is still pending. In other words,
                                these log types are in the process of being activated or deactivated.
                              properties:
                                logTypesToDisable:
                                  items:
                                    type: string
                                  type: array
                                logTypesToEnable:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            port:
                              format: int64
                              type: integer
                            processorFeatures:
                              items:
                                description: |-
                                  Contains the processor features of a DB instance class.

                                  To specify the number of CPU cores, use the coreCount feature name for the
                                  Name parameter. To specify the number of threads per core, use the threadsPerCore
                                  feature name for the Name parameter.

                                  You can set the processor features of the DB instance class for a DB instance
                                  when you call one of the following actions:

                                    - CreateDBInstance

                                    - ModifyDBInstance

                                    - RestoreDBInstanceFromDBSnapshot

                                    - RestoreDBInstanceFromS3

                                    - RestoreDBInstanceToPointInTime

                                  You can view the valid processor values for a particular instance class by
                                  calling the DescribeOrderableDBInstanceOptions action and specifying the
                                  instance class for the DBInstanceClass parameter.

                                  In addition, you can use the following actions for DB instance class processor
                                  information:

                                    - DescribeDBInstances

                                    - DescribeDBSnapshots

                                    - DescribeValidDBInstanceModifications

                                  If you call DescribeDBInstances, ProcessorFeature returns non-null values
                                  only if the following conditions are met:

                                    - You are accessing an Oracle DB instance.

                                    - Your Oracle DB instance class supports configuring the number of CPU
                                      cores and threads per core.

                                    - The current number CPU cores and threads is set to a non-default value.

                                  For more information, see Configuring the processor for a DB instance class
                                  in RDS for Oracle (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                                  in the Amazon RDS User Guide.
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            resumeFullAutomationModeTime:
                              format: date-time
                              type: string
                            storageThroughput:
                              format: int64
                              type: integer
                            storageType:
                              type: string
                          type: object
                        readReplicaDBClusterIdentifiers:
                          description: |-
                            The identifiers of Aurora DB clusters to which the RDS DB instance is replicated
                            as a read replica. For example, when you create an Aurora read replica of
                            an RDS for MySQL DB instance, the Aurora MySQL DB cluster for the Aurora
                            read replica is shown. This output doesn't contain information about cross-Region
                            Aurora read replicas.

                            Currently, each RDS DB instance can have only one Aurora read replica.
                          items:
                            type: string
                          type: array
                        readReplicaDBInstanceIdentifiers:
                          description: The identifiers of the read replicas associated with this DB instance.
                          items:
                            type: string
                          type: array
                        readReplicaSourceDBClusterIdentifier:
                          description: The identifier of the source DB cluster if this DB instance is a read replica.
                          type: string
                        readReplicaSourceDBInstanceIdentifier:
                          description: The identifier of the source DB instance if this DB instance is a read replica.
                          type: string
                        resumeFullAutomationModeTime:
                          description: |-
                            The number of minutes to pause the automation. When the time period ends,
                            RDS Custom resumes full automation. The minimum value is 60 (default). The
                            maximum value is 1,440.
                          format: date-time
                          type: string
                        secondaryAvailabilityZone:
                          description: |-
                            If present, specifies the name of the secondary Availability Zone for a DB
                            instance with multi-AZ support.
                          type: string
                        statusInfos:
                          description: |-
                            The status of a read replica. If the DB instance isn't a read replica, the
                            value is blank.
                          items:
                            description: Provides a list of status information for a DB instance.
                            properties:
                              message:
                                type: string
                              normal:
                                type: boolean
                              status:
                                type: string
                              statusType:
                                type: string
                            type: object
                          type: array
                        vpcSecurityGroups:
                          description: The list of Amazon EC2 VPC security groups that the DB instance belongs to.
                          items:
                            description: |-
                              This data type is used as a response element for queries on VPC security
                              group membership.
                            properties:
                              status:
                                type: string
                              vpcSecurityGroupID:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbparametergroups-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbparametergroups.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBParameterGroup
            listKind: DBParameterGroupList
            plural: dbparametergroups
            singular: dbparametergroup
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBParameterGroup is the Schema for the DBParameterGroups API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBParameterGroupSpec defines the desired state of DBParameterGroup.

                        Contains the details of an Amazon RDS DB parameter group.

                        This data type is used as a response element in the DescribeDBParameterGroups
                        action.
                      properties:
                        description:
                          description: The description for the DB parameter group.
                          type: string
                        family:
                          description: |-
                            The DB parameter group family name. A DB parameter group can be associated
                            with one and only one DB parameter group family, and can be applied only
                            to a DB instance running a database engine and engine version compatible
                            with that DB parameter group family.

                            To list all of the available parameter group families for a DB engine, use
                            the following command:

                            aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
                            --engine

                            For example, to list all of the available parameter group families for the
                            MySQL DB engine, use the following command:

                            aws rds describe-db-engine-versions --query "DBEngineVersions[].DBParameterGroupFamily"
                            --engine mysql

                            The output contains duplicates.

                            The following are the valid DB engine values:

                              - aurora-mysql

                              - aurora-postgresql

                              - db2-ae

                              - db2-se

                              - mysql

                              - oracle-ee

                              - oracle-ee-cdb

                              - oracle-se2

                              - oracle-se2-cdb

                              - postgres

                              - sqlserver-ee

                              - sqlserver-se

                              - sqlserver-ex

                              - sqlserver-web
                          type: string
                        name:
                          description: |-
                            The name of the DB parameter group.

                            Constraints:

                              - Must be 1 to 255 letters, numbers, or hyphens.

                              - First character must be a letter

                              - Can't end with a hyphen or contain two consecutive hyphens

                            This value is stored as a lowercase string.
                          type: string
                        parameterOverrides:
                          additionalProperties:
                            type: string
                          type: object
                        tags:
                          description: Tags to assign to the DB parameter group.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - description
                        - family
                        - name
                      type: object
                    status:
                      description: DBParameterGroupStatus defines the observed state of DBParameterGroup
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        parameterOverrideStatuses:
                          description: A list of Parameter values.
                          items:
                            description: |-
                              This data type is used as a request parameter in the ModifyDBParameterGroup
                              and ResetDBParameterGroup actions.

                              This data type is used as a response element in the DescribeEngineDefaultParameters
                              and DescribeDBParameters actions.
                            properties:
                              allowedValues:
                                type: string
                              applyMethod:
                                type: string
                              applyType:
                                type: string
                              dataType:
                                type: string
                              description:
                                type: string
                              isModifiable:
                                type: boolean
                              minimumEngineVersion:
                                type: string
                              parameterName:
                                type: string
                              parameterValue:
                                type: string
                              source:
                                type: string
                              supportedEngineModes:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbproxies-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbproxies.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBProxy
            listKind: DBProxyList
            plural: dbproxies
            singular: dbproxy
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBProxy is the Schema for the DBProxies API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBProxySpec defines the desired state of DBProxy.

                        The data structure representing a proxy managed by the RDS Proxy.

                        This data type is used as a response element in the DescribeDBProxies action.
                      properties:
                        auth:
                          description: The authorization mechanism that the proxy uses.
                          items:
                            description: |-
                              Specifies the details of authentication used by a proxy to log in as a specific
                              database user.
                            properties:
                              authScheme:
                                type: string
                              clientPasswordAuthType:
                                type: string
                              description:
                                type: string
                              iamAuth:
                                type: string
                              secretARN:
                                type: string
                              userName:
                                type: string
                            type: object
                          type: array
                        debugLogging:
                          description: |-
                            Specifies whether the proxy includes detailed information about SQL statements
                            in its logs. This information helps you to debug issues involving SQL behavior
                            or the performance and scalability of the proxy connections. The debug information
                            includes the text of SQL statements that you submit through the proxy. Thus,
                            only enable this setting when needed for debugging, and only when you have
                            security measures in place to safeguard any sensitive information that appears
                            in the logs.
                          type: boolean
                        engineFamily:
                          description: |-
                            The kinds of databases that the proxy can connect to. This value determines
                            which database network protocol the proxy recognizes when it interprets network
                            traffic to and from the database. For Aurora MySQL, RDS for MariaDB, and
                            RDS for MySQL databases, specify MYSQL. For Aurora PostgreSQL and RDS for
                            PostgreSQL databases, specify POSTGRESQL. For RDS for Microsoft SQL Server,
                            specify SQLSERVER.
                          type: string
                        idleClientTimeout:
                          description: |-
                            The number of seconds that a connection to the proxy can be inactive before
                            the proxy disconnects it. You can set this value higher or lower than the
                            connection timeout limit for the associated database.
                          format: int64
                          type: integer
                        name:
                          description: |-
                            The identifier for the proxy. This name must be unique for all proxies owned
                            by your Amazon Web Services account in the specified Amazon Web Services
                            Region. An identifier must begin with a letter and must contain only ASCII
                            letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive
                            hyphens.
                          type: string
                        requireTLS:
                          description: |-
                            Specifies whether Transport Layer Security (TLS) encryption is required for
                            connections to the proxy. By enabling this setting, you can enforce encrypted
                            TLS connections to the proxy.
                          type: boolean
                        roleARN:
                          description: |-
                            The Amazon Resource Name (ARN) of the IAM role that the proxy uses to access
                            secrets in Amazon Web Services Secrets Manager.
                          type: string
                        tags:
                          description: |-
                            An optional set of key-value pairs to associate arbitrary data of your choosing
                            with the proxy.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcSecurityGroupIDs:
                          description: One or more VPC security group IDs to associate with the new proxy.
                          items:
                            type: string
                          type: array
                        vpcSubnetIDs:
                          description: One or more VPC subnet IDs to associate with the new proxy.
                          items:
                            type: string
                          type: array
                      required:
                        - auth
                        - engineFamily
                        - name
                        - roleARN
                        - vpcSubnetIDs
                      type: object
                    status:
                      description: DBProxyStatus defines the observed state of DBProxy
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        createdDate:
                          description: The date and time when the proxy was first created.
                          format: date-time
                          type: string
                        endpoint:
                          description: |-
                            The endpoint that you can use to connect to the DB proxy. You include the
                            endpoint value in the connection string for a database client application.
                          type: string
                        status:
                          description: |-
                            The current status of this proxy. A status of available means the proxy is
                            ready to handle requests. Other values indicate that you must wait for the
                            proxy to be ready, or take some action to resolve an issue.
                          type: string
                        updatedDate:
                          description: The date and time when the proxy was last updated.
                          format: date-time
                          type: string
                        vpcID:
                          description: Provides the VPC ID of the DB proxy.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbsnapshots-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbsnapshots.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBSnapshot
            listKind: DBSnapshotList
            plural: dbsnapshots
            singular: dbsnapshot
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBSnapshot is the Schema for the DBSnapshots API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBSnapshotSpec defines the desired state of DBSnapshot.

                        Contains the details of an Amazon RDS DB snapshot.

                        This data type is used as a response element in the DescribeDBSnapshots action.
                      properties:
                        dbInstanceIdentifier:
                          description: |-
                            The identifier of the DB instance that you want to create the snapshot of.

                            Constraints:

                              - Must match the identifier of an existing DBInstance.
                          type: string
                        dbInstanceIdentifierRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        dbSnapshotIdentifier:
                          description: |-
                            The identifier for the DB snapshot.

                            Constraints:

                              - Can't be null, empty, or blank

                              - Must contain from 1 to 255 letters, numbers, or hyphens

                              - First character must be a letter

                              - Can't end with a hyphen or contain two consecutive hyphens

                            Example: my-snapshot-id
                          type: string
                        tags:
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - dbSnapshotIdentifier
                      type: object
                    status:
                      description: DBSnapshotStatus defines the observed state of DBSnapshot
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        allocatedStorage:
                          description: Specifies the allocated storage size in gibibytes (GiB).
                          format: int64
                          type: integer
                        availabilityZone:
                          description: |-
                            Specifies the name of the Availability Zone the DB instance was located in
                            at the time of the DB snapshot.
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        dbiResourceID:
                          description: |-
                            The identifier for the source DB instance, which can't be changed and which
                            is unique to an Amazon Web Services Region.
                          type: string
                        encrypted:
                          description: Indicates whether the DB snapshot is encrypted.
                          type: boolean
                        engine:
                          description: Specifies the name of the database engine.
                          type: string
                        iamDatabaseAuthenticationEnabled:
                          description: |-
                            Indicates whether mapping of Amazon Web Services Identity and Access Management
                            (IAM) accounts to database accounts is enabled.
                          type: boolean
                        instanceCreateTime:
                          description: |-
                            Specifies the time in Coordinated Universal Time (UTC) when the DB instance,
                            from which the snapshot was taken, was created.
                          format: date-time
                          type: string
                        iops:
                          description: |-
                            Specifies the Provisioned IOPS (I/O operations per second) value of the DB
                            instance at the time of the snapshot.
                          format: int64
                          type: integer
                        kmsKeyID:
                          description: |-
                            If Encrypted is true, the Amazon Web Services KMS key identifier for the
                            encrypted DB snapshot.

                            The Amazon Web Services KMS key identifier is the key ARN, key ID, alias
                            ARN, or alias name for the KMS key.
                          type: string
                        licenseModel:
                          description: License model information for the restored DB instance.
                          type: string
                        masterUsername:
                          description: Provides the master username for the DB snapshot.
                          type: string
                        originalSnapshotCreateTime:
                          description: |-
                            Specifies the time of the CreateDBSnapshot operation in Coordinated Universal
                            Time (UTC). Doesn't change when the snapshot is copied.
                          format: date-time
                          type: string
                        percentProgress:
                          description: The percentage of the estimated data that has been transferred.
                          format: int64
                          type: integer
                        port:
                          description: |-
                            Specifies the port that the database engine was listening on at the time
                            of the snapshot.
                          format: int64
                          type: integer
                        processorFeatures:
                          description: |-
                            The number of CPU cores and the number of threads per core for the DB instance
                            class of the DB instance when the DB snapshot was created.
                          items:
                            description: |-
                              Contains the processor features of a DB instance class.

                              To specify the number of CPU cores, use the coreCount feature name for the
                              Name parameter. To specify the number of threads per core, use the threadsPerCore
                              feature name for the Name parameter.

                              You can set the processor features of the DB instance class for a DB instance
                              when you call one of the following actions:

                                - CreateDBInstance

                                - ModifyDBInstance

                                - RestoreDBInstanceFromDBSnapshot

                                - RestoreDBInstanceFromS3

                                - RestoreDBInstanceToPointInTime

                              You can view the valid processor values for a particular instance class by
                              calling the DescribeOrderableDBInstanceOptions action and specifying the
                              instance class for the DBInstanceClass parameter.

                              In addition, you can use the following actions for DB instance class processor
                              information:

                                - DescribeDBInstances

                                - DescribeDBSnapshots

                                - DescribeValidDBInstanceModifications

                              If you call DescribeDBInstances, ProcessorFeature returns non-null values
                              only if the following conditions are met:

                                - You are accessing an Oracle DB instance.

                                - Your Oracle DB instance class supports configuring the number of CPU
                                  cores and threads per core.

                                - The current number CPU cores and threads is set to a non-default value.

                              For more information, see Configuring the processor for a DB instance class
                              in RDS for Oracle (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#USER_ConfigureProcessor)
                              in the Amazon RDS User Guide.
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        snapshotCreateTime:
                          description: |-
                            Specifies when the snapshot was taken in Coordinated Universal Time (UTC).
                            Changes for the copy when the snapshot is copied.
                          format: date-time
                          type: string
                        snapshotDatabaseTime:
                          description: |-
                            The timestamp of the most recent transaction applied to the database that
                            you're backing up. Thus, if you restore a snapshot, SnapshotDatabaseTime
                            is the most recent transaction in the restored DB instance. In contrast,
                            originalSnapshotCreateTime specifies the system time that the snapshot completed.

                            If you back up a read replica, you can determine the replica lag by comparing
                            SnapshotDatabaseTime with originalSnapshotCreateTime. For example, if originalSnapshotCreateTime
                            is two hours later than SnapshotDatabaseTime, then the replica lag is two
                            hours.
                          format: date-time
                          type: string
                        snapshotTarget:
                          description: |-
                            Specifies where manual snapshots are stored: Amazon Web Services Outposts
                            or the Amazon Web Services Region.
                          type: string
                        snapshotType:
                          description: Provides the type of the DB snapshot.
                          type: string
                        sourceDBSnapshotIdentifier:
                          description: |-
                            The DB snapshot Amazon Resource Name (ARN) that the DB snapshot was copied
                            from. It only has a value in the case of a cross-account or cross-Region
                            copy.
                          type: string
                        sourceRegion:
                          description: |-
                            The Amazon Web Services Region that the DB snapshot was created in or copied
                            from.
                          type: string
                        status:
                          description: Specifies the status of this DB snapshot.
                          type: string
                        storageThroughput:
                          description: Specifies the storage throughput for the DB snapshot.
                          format: int64
                          type: integer
                        storageType:
                          description: Specifies the storage type associated with DB snapshot.
                          type: string
                        tagList:
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        tdeCredentialARN:
                          description: The ARN from the key store with which to associate the instance for TDE encryption.
                          type: string
                        timezone:
                          description: |-
                            The time zone of the DB snapshot. In most cases, the Timezone element is
                            empty. Timezone content appears only for snapshots taken from Microsoft SQL
                            Server DB instances that were created with a time zone specified.
                          type: string
                        vpcID:
                          description: Provides the VPC ID associated with the DB snapshot.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dbsubnetgroups-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dbsubnetgroups.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: DBSubnetGroup
            listKind: DBSubnetGroupList
            plural: dbsubnetgroups
            singular: dbsubnetgroup
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DBSubnetGroup is the Schema for the DBSubnetGroups API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DBSubnetGroupSpec defines the desired state of DBSubnetGroup.

                        Contains the details of an Amazon RDS DB subnet group.

                        This data type is used as a response element in the DescribeDBSubnetGroups
                        action.
                      properties:
                        description:
                          description: The description for the DB subnet group.
                          type: string
                        name:
                          description: |-
                            The name for the DB subnet group. This value is stored as a lowercase string.

                            Constraints:

                              - Must contain no more than 255 letters, numbers, periods, underscores,
                                spaces, or hyphens.

                              - Must not be default.

                              - First character must be a letter.

                            Example: mydbsubnetgroup
                          type: string
                        subnetIDs:
                          description: The EC2 Subnet IDs for the DB subnet group.
                          items:
                            type: string
                          type: array
                        subnetRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        tags:
                          description: Tags to assign to the DB subnet group.
                          items:
                            description: |-
                              Metadata assigned to an Amazon RDS resource consisting of a key-value pair.

                              For more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)
                              in the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources
                              (https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)
                              in the Amazon Aurora User Guide.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - description
                        - name
                      type: object
                    status:
                      description: DBSubnetGroupStatus defines the observed state of DBSubnetGroup
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        subnetGroupStatus:
                          description: Provides the status of the DB subnet group.
                          type: string
                        subnets:
                          description: Contains a list of Subnet elements.
                          items:
                            description: |-
                              This data type is used as a response element for the DescribeDBSubnetGroups
                              operation.
                            properties:
                              subnetAvailabilityZone:
                                description: |-
                                  Contains Availability Zone information.

                                  This data type is used as an element in the OrderableDBInstanceOption data
                                  type.
                                properties:
                                  name:
                                    type: string
                                type: object
                              subnetIdentifier:
                                type: string
                              subnetOutpost:
                                description: |-
                                  A data type that represents an Outpost.

                                  For more information about RDS on Outposts, see Amazon RDS on Amazon Web
                                  Services Outposts (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-on-outposts.html)
                                  in the Amazon RDS User Guide.
                                properties:
                                  arn:
                                    type: string
                                type: object
                              subnetStatus:
                                type: string
                            type: object
                          type: array
                        supportedNetworkTypes:
                          description: |-
                            The network type of the DB subnet group.

                            Valid values:

                               * IPV4

                               * DUAL

                            A DBSubnetGroup can support only the IPv4 protocol or the IPv4 and the IPv6
                            protocols (DUAL).

                            For more information, see Working with a DB instance in a VPC (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.WorkingWithRDSInstanceinaVPC.html)
                            in the Amazon RDS User Guide.
                          items:
                            type: string
                          type: array
                        vpcID:
                          description: Provides the VpcId of the DB subnet group.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-fieldexports-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: fieldexports.services.k8s.aws
        spec:
          group: services.k8s.aws
          names:
            kind: FieldExport
            listKind: FieldExportList
            plural: fieldexports
            singular: fieldexport
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: FieldExport is the schema for the FieldExport API.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: FieldExportSpec defines the desired state of the FieldExport.
                      properties:
                        from:
                          description: |-
                            ResourceFieldSelector provides the values necessary to identify an individual
                            field on an individual K8s resource.
                          properties:
                            path:
                              type: string
                            resource:
                              description: |-
                                NamespacedResource provides all the values necessary to identify an ACK
                                resource of a given type (within the same namespace as the custom resource
                                containing this type).
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                name:
                                  type: string
                              required:
                                - group
                                - kind
                                - name
                              type: object
                          required:
                            - path
                            - resource
                          type: object
                        to:
                          description: |-
                            FieldExportTarget provides the values necessary to identify the
                            output path for a field export.
                          properties:
                            key:
                              description: Key overrides the default value (`<namespace>.<FieldExport-resource-name>`) for the FieldExport target
                              type: string
                            kind:
                              description: |-
                                FieldExportOutputType represents all types that can be produced by a field
                                export operation
                              enum:
                                - configmap
                                - secret
                              type: string
                            name:
                              type: string
                            namespace:
                              description: Namespace is marked as optional, so we cannot compose `NamespacedName`
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                      required:
                        - from
                        - to
                      type: object
                    status:
                      description: FieldExportStatus defines the observed status of the FieldExport.
                      properties:
                        conditions:
                          description: |-
                            A collection of `ackv1alpha1.Condition` objects that describe the various
                            recoverable states of the field CR
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                      required:
                        - conditions
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-globalclusters-rds-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: globalclusters.rds.services.k8s.aws
        spec:
          group: rds.services.k8s.aws
          names:
            kind: GlobalCluster
            listKind: GlobalClusterList
            plural: globalclusters
            singular: globalcluster
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: GlobalCluster is the Schema for the GlobalClusters API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        GlobalClusterSpec defines the desired state of GlobalCluster.

                        A data type representing an Aurora global database.
                      properties:
                        databaseName:
                          description: |-
                            The name for your database of up to 64 alphanumeric characters. If you don't
                            specify a name, Amazon Aurora doesn't create a database in the global database
                            cluster.

                            Constraints:

                              - Can't be specified if SourceDBClusterIdentifier is specified. In this
                                case, Amazon Aurora uses the database name from the source DB cluster.
                          type: string
                        deletionProtection:
                          description: |-
                            Specifies whether to enable deletion protection for the new global database
                            cluster. The global database can't be deleted when deletion protection is
                            enabled.
                          type: boolean
                        engine:
                          description: |-
                            The database engine to use for this global database cluster.

                            Valid Values: aurora-mysql | aurora-postgresql

                            Constraints:

                              - Can't be specified if SourceDBClusterIdentifier is specified. In this
                                case, Amazon Aurora uses the engine of the source DB cluster.
                          type: string
                        engineVersion:
                          description: |-
                            The engine version to use for this global database cluster.

                            Constraints:

                              - Can't be specified if SourceDBClusterIdentifier is specified. In this
                                case, Amazon Aurora uses the engine version of the source DB cluster.
                          type: string
                        globalClusterIdentifier:
                          description: |-
                            The cluster identifier for this global database cluster. This parameter is
                            stored as a lowercase string.
                          type: string
                        sourceDBClusterIdentifier:
                          description: |-
                            The Amazon Resource Name (ARN) to use as the primary cluster of the global
                            database.

                            If you provide a value for this parameter, don't specify values for the following
                            settings because Amazon Aurora uses the values from the specified source
                            DB cluster:

                              - DatabaseName

                              - Engine

                              - EngineVersion

                              - StorageEncrypted
                          type: string
                        storageEncrypted:
                          description: |-
                            Specifies whether to enable storage encryption for the new global database
                            cluster.

                            Constraints:

                              - Can't be specified if SourceDBClusterIdentifier is specified. In this
                                case, Amazon Aurora uses the setting from the source DB cluster.
                          type: boolean
                      type: object
                    status:
                      description: GlobalClusterStatus defines the observed state of GlobalCluster
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        engineLifecycleSupport:
                          description: |-
                            The life cycle type for the global cluster.

                            For more information, see CreateGlobalCluster.
                          type: string
                        failoverState:
                          description: |-
                            A data object containing all properties for the current state of an in-process
                            or pending switchover or failover process for this global cluster (Aurora
                            global database). This object is empty unless the SwitchoverGlobalCluster
                            or FailoverGlobalCluster operation was called on this global cluster.
                          properties:
                            fromDBClusterARN:
                              type: string
                            status:
                              type: string
                            toDBClusterARN:
                              type: string
                          type: object
                        globalClusterMembers:
                          description: The list of primary and secondary clusters within the global database cluster.
                          items:
                            description: |-
                              A data structure with information about any primary and secondary clusters
                              associated with a global cluster (Aurora global database).
                            properties:
                              dbClusterARN:
                                type: string
                              globalWriteForwardingStatus:
                                type: string
                              isWriter:
                                type: boolean
                              readers:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        globalClusterResourceID:
                          description: |-
                            The Amazon Web Services Region-unique, immutable identifier for the global
                            database cluster. This identifier is found in Amazon Web Services CloudTrail
                            log entries whenever the Amazon Web Services KMS key for the DB cluster is
                            accessed.
                          type: string
                        status:
                          description: Specifies the current state of this global database cluster.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: serviceaccount---schema-spec-values-serviceaccount-name
      template:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          annotations:
            eks.amazonaws.com/role-arn: ${ackIamRole.status.ackResourceMetadata.arn}
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.values.serviceAccount.name}
          namespace: ${schema.spec.namespace}
    - id: clusterrole---schema-spec-name--rds-chart
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart
        rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
              - secrets
            verbs:
              - get
              - list
              - patch
              - watch
          - apiGroups:
              - ""
            resources:
              - namespaces
            verbs:
              - get
              - list
              - watch
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - securitygroups
              - securitygroups/status
              - subnets
              - subnets/status
            verbs:
              - get
              - list
          - apiGroups:
              - kms.services.k8s.aws
            resources:
              - keys
              - keys/status
            verbs:
              - get
              - list
          - apiGroups:
              - rds.services.k8s.aws
            resources:
              - dbclusterendpoints
              - dbclusterparametergroups
              - dbclusters
              - dbclustersnapshots
              - dbinstances
              - dbparametergroups
              - dbproxies
              - dbsnapshots
              - dbsubnetgroups
              - globalclusters
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - rds.services.k8s.aws
            resources:
              - dbclusterendpoints/status
              - dbclusterparametergroups/status
              - dbclusters/status
              - dbclustersnapshots/status
              - dbinstances/status
              - dbparametergroups/status
              - dbproxies/status
              - dbsnapshots/status
              - dbsubnetgroups/status
              - globalclusters/status
            verbs:
              - get
              - patch
              - update
          - apiGroups:
              - services.k8s.aws
            resources:
              - adoptedresources
              - fieldexports
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - services.k8s.aws
            resources:
              - adoptedresources/status
              - fieldexports/status
            verbs:
              - get
              - patch
              - update
    - id: clusterrole---schema-spec-name--rds-chart-namespaces-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-namespaces-cache
        rules:
          - apiGroups:
              - ""
            resources:
              - namespaces
            verbs:
              - get
              - list
              - watch
    - id: clusterrolebinding---schema-spec-name--rds-chart-namespaces-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-namespaces-cache
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: ${schema.spec.name}-rds-chart-namespaces-cache
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: clusterrolebinding---schema-spec-name--rds-chart-rolebinding
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-rolebinding
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: ${schema.spec.name}-rds-chart
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: role---schema-spec-name--rds-chart-configmaps-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-configmaps-cache
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
            verbs:
              - get
              - list
              - watch
    - id: role---schema-spec-name--rds-chart-reader
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-reader
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - rds.services.k8s.aws
            resources:
              - dbclusters
              - dbclusterendpoints
              - dbclusterparametergroups
              - dbclustersnapshots
              - dbinstances
              - dbparametergroups
              - dbproxies
              - dbsnapshots
              - dbsubnetgroups
              - globalclusters
            verbs:
              - get
              - list
              - watch
    - id: role---schema-spec-name--rds-chart-writer
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-writer
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - rds.services.k8s.aws
            resources:
              - dbclusters
              - dbclusterendpoints
              - dbclusterparametergroups
              - dbclustersnapshots
              - dbinstances
              - dbparametergroups
              - dbproxies
              - dbsnapshots
              - dbsubnetgroups
              - globalclusters
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - rds.services.k8s.aws
            resources:
              - dbclusters
              - dbclusterendpoints
              - dbclusterparametergroups
              - dbclustersnapshots
              - dbinstances
              - dbparametergroups
              - dbproxies
              - dbsnapshots
              - dbsubnetgroups
              - globalclusters
            verbs:
              - get
              - patch
              - update
    - id: rolebinding---schema-spec-name--rds-chart-configmaps-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart-configmaps-cache
          namespace: ${schema.spec.namespace}
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: ${schema.spec.name}-rds-chart-configmaps-cache
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: deployment---schema-spec-name--rds-chart
      template:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: rds-chart
            app.kubernetes.io/version: 1.6.2
            helm.sh/chart: rds-chart-1.6.2
            k8s-app: rds-chart
          name: ${schema.spec.name}-rds-chart
          namespace: ${schema.spec.namespace}
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: ${schema.spec.name}
              app.kubernetes.io/name: rds-chart
          template:
            metadata:
              labels:
                app.kubernetes.io/instance: ${schema.spec.name}
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: rds-chart
                k8s-app: rds-chart
            spec:
              containers:
                - args:
                    - --aws-region
                    - $(AWS_REGION)
                    - --aws-endpoint-url
                    - $(AWS_ENDPOINT_URL)
                    - --log-level
                    - $(ACK_LOG_LEVEL)
                    - --resource-tags
                    - $(ACK_RESOURCE_TAGS)
                    - --watch-namespace
                    - $(ACK_WATCH_NAMESPACE)
                    - --watch-selectors
                    - $(ACK_WATCH_SELECTORS)
                    - --reconcile-resources
                    - $(RECONCILE_RESOURCES)
                    - --deletion-policy
                    - $(DELETION_POLICY)
                    - --reconcile-default-resync-seconds
                    - $(RECONCILE_DEFAULT_RESYNC_SECONDS)
                    - --reconcile-default-max-concurrent-syncs
                    - $(RECONCILE_DEFAULT_MAX_CONCURRENT_SYNCS)
                    - --feature-gates
                    - $(FEATURE_GATES)
                    - --enable-carm=true
                  command:
                    - ./bin/controller
                  env:
                    - name: ACK_SYSTEM_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: AWS_REGION
                      value: ${schema.spec.values.aws.region}
                    - name: AWS_ENDPOINT_URL
                      value: ""
                    - name: ACK_WATCH_NAMESPACE
                      value: null
                    - name: ACK_WATCH_SELECTORS
                      value: null
                    - name: RECONCILE_RESOURCES
                      value: DBCluster,DBClusterEndpoint,DBClusterParameterGroup,DBClusterSnapshot,DBInstance,DBParameterGroup,DBProxy,DBSnapshot,DBSubnetGroup,GlobalCluster
                    - name: DELETION_POLICY
                      value: delete
                    - name: LEADER_ELECTION_NAMESPACE
                      value: ""
                    - name: ACK_LOG_LEVEL
                      value: info
                    - name: ACK_RESOURCE_TAGS
                      value: services.k8s.aws/controller-version=%CONTROLLER_SERVICE%-%CONTROLLER_VERSION%,services.k8s.aws/namespace=%K8S_NAMESPACE%
                    - name: RECONCILE_DEFAULT_RESYNC_SECONDS
                      value: "36000"
                    - name: RECONCILE_DEFAULT_MAX_CONCURRENT_SYNCS
                      value: "1"
                    - name: FEATURE_GATES
                      value: ReadOnlyResources=true,ResourceAdoption=true,ServiceLevelCARM=false,TeamLevelCARM=false
                  image: ${schema.spec.values.image.repository}:${schema.spec.values.image.tag}
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    httpGet:
                      path: /healthz
                      port: 8081
                    initialDelaySeconds: 15
                    periodSeconds: 20
                  name: controller
                  ports:
                    - containerPort: 8080
                      name: http
                  readinessProbe:
                    httpGet:
                      path: /readyz
                      port: 8081
                    initialDelaySeconds: 5
                    periodSeconds: 10
                  resources:
                    limits:
                      cpu: 100m
                      memory: 128Mi
                    requests:
                      cpu: 50m
                      memory: 64Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                        - ALL
                    privileged: false
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
              dnsPolicy: ClusterFirst
              hostIPC: false
              hostNetwork: false
              hostPID: false
              nodeSelector:
                kubernetes.io/os: linux
              securityContext:
                seccompProfile:
                  type: RuntimeDefault
              serviceAccountName: ${schema.spec.values.serviceAccount.name}
              terminationGracePeriodSeconds: 10
