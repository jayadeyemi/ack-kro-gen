apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: ack-ec2-ctrl.kro.run
  namespace: kro
spec:
  schema:
    apiVersion: v1alpha1
    kind: Ec2controller
    spec:
      name: ${schema.spec.name}
      namespace: ${schema.spec.namespace}
      values:
        aws:
          accountID: ${schema.spec.values.aws.accountID}
          region: ${schema.spec.values.aws.region}
        deployment:
          containerPort: 8080
          replicas: 1
        iamRole:
          maxSessionDuration: 3600
          oidcProvider: ${schema.spec.values.iamRole.oidcProvider}
        image:
          deletePolicy: ${schema.spec.values.image.deletePolicy}
          repository: ${schema.spec.values.image.repository}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          tag: ${schema.spec.values.image.tag}
        log:
          enabled: ${schema.spec.values.log.enabled}
          level: ${schema.spec.values.log.level}
        serviceAccount:
          name: ${schema.spec.values.serviceAccount.name}
  resources:
    - id: customresourcedefinition-adoptedresources-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: adoptedresources.services.k8s.aws
        spec:
          group: services.k8s.aws
          names:
            kind: AdoptedResource
            listKind: AdoptedResourceList
            plural: adoptedresources
            singular: adoptedresource
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: AdoptedResource is the schema for the AdoptedResource API.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: AdoptedResourceSpec defines the desired state of the AdoptedResource.
                      properties:
                        aws:
                          description: AWSIdentifiers provide all unique ways to reference an AWS resource.
                          properties:
                            additionalKeys:
                              additionalProperties:
                                type: string
                              description: |-
                                AdditionalKeys represents any additional arbitrary identifiers used when
                                describing the target resource.
                              type: object
                            arn:
                              description: |-
                                ARN is the AWS Resource Name for the resource. It is a globally
                                unique identifier.
                              type: string
                            nameOrID:
                              description: |-
                                NameOrId is a user-supplied string identifier for the resource. It may
                                or may not be globally unique, depending on the type of resource.
                              type: string
                          type: object
                        kubernetes:
                          description: |-
                            ResourceWithMetadata provides the values necessary to create a
                            Kubernetes resource and override any of its metadata values.
                          properties:
                            group:
                              type: string
                            kind:
                              type: string
                            metadata:
                              description: |-
                                ObjectMeta is metadata that all persisted resources must have, which includes all objects
                                users must create.
                                It is not possible to use `metav1.ObjectMeta` inside spec, as the controller-gen
                                automatically converts this to an arbitrary string-string map.
                                https://github.com/kubernetes-sigs/controller-tools/issues/385

                                Active discussion about inclusion of this field in the spec is happening in this PR:
                                https://github.com/kubernetes-sigs/controller-tools/pull/395

                                Until this is allowed, or if it never is, we will produce a subset of the object meta
                                that contains only the fields which the user is allowed to modify in the metadata.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    Annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                generateName:
                                  description: |-
                                    GenerateName is an optional prefix, used by the server, to generate a unique
                                    name ONLY IF the Name field has not been provided.
                                    If this field is used, the name returned to the client will be different
                                    than the name passed. This value will also be combined with a unique suffix.
                                    The provided value has the same validation rules as the Name field,
                                    and may be truncated by the length of the suffix required to make the value
                                    unique on the server.

                                    If this field is specified and the generated name exists, the server will
                                    NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
                                    ServerTimeout indicating a unique name could not be found in the time allotted, and the client
                                    should retry (optionally after the time indicated in the Retry-After header).

                                    Applied only if Name is not specified.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                                  type: string
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    Map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                                name:
                                  description: |-
                                    Name must be unique within a namespace. Is required when creating resources, although
                                    some resources may allow a client to request the generation of an appropriate name
                                    automatically. Name is primarily intended for creation idempotence and configuration
                                    definition.
                                    Cannot be updated.
                                    More info: http://kubernetes.io/docs/user-guide/identifiers#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace defines the space within each name must be unique. An empty namespace is
                                    equivalent to the "default" namespace, but "default" is the canonical representation.
                                    Not all objects are required to be scoped to a namespace - the value of this field for
                                    those objects will be empty.

                                    Must be a DNS_LABEL.
                                    Cannot be updated.
                                    More info: http://kubernetes.io/docs/user-guide/namespaces
                                  type: string
                                ownerReferences:
                                  description: |-
                                    List of objects depended by this object. If ALL objects in the list have
                                    been deleted, this object will be garbage collected. If this object is managed by a controller,
                                    then an entry in this list will point to this controller, with the controller field set to true.
                                    There cannot be more than one managing controller.
                                  items:
                                    description: |-
                                      OwnerReference contains enough information to let you identify an owning
                                      object. An owning object must be in the same namespace as the dependent, or
                                      be cluster-scoped, so there is no namespace field.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      blockOwnerDeletion:
                                        description: |-
                                          If true, AND if the owner has the "foregroundDeletion" finalizer, then
                                          the owner cannot be deleted from the key-value store until this
                                          reference is removed.
                                          See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                                          for how the garbage collector interacts with this field and enforces the foreground deletion.
                                          Defaults to false.
                                          To set this field, a user needs "delete" permission of the owner,
                                          otherwise 422 (Unprocessable Entity) will be returned.
                                        type: boolean
                                      controller:
                                        description: If true, this reference points to the managing controller.
                                        type: boolean
                                      kind:
                                        description: |-
                                          Kind of the referent.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                                        type: string
                                      uid:
                                        description: |-
                                          UID of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
                                        type: string
                                    required:
                                      - apiVersion
                                      - kind
                                      - name
                                      - uid
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                          required:
                            - group
                            - kind
                          type: object
                      required:
                        - aws
                        - kubernetes
                      type: object
                    status:
                      description: AdoptedResourceStatus defines the observed status of the AdoptedResource.
                      properties:
                        conditions:
                          description: |-
                            A collection of `ackv1alpha1.Condition` objects that describe the various
                            terminal states of the adopted resource CR and its target custom resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                      required:
                        - conditions
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-capacityreservations-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: capacityreservations.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: CapacityReservation
            listKind: CapacityReservationList
            plural: capacityreservations
            singular: capacityreservation
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.capacityReservationID
                  name: ID
                  type: string
                - jsonPath: .spec.startDate
                  name: START_DATE
                  type: date
                - jsonPath: .status.state
                  name: STATE
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: CapacityReservation is the Schema for the CapacityReservations API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        CapacityReservationSpec defines the desired state of CapacityReservation.

                        Describes a Capacity Reservation.
                      properties:
                        additionalInfo:
                          description: Reserved for future use.
                          type: string
                        availabilityZone:
                          description: The Availability Zone in which to create the Capacity Reservation.
                          type: string
                        availabilityZoneID:
                          description: The ID of the Availability Zone in which to create the Capacity Reservation.
                          type: string
                        commitmentDuration:
                          description: |-
                            Required for future-dated Capacity Reservations only. To create a Capacity
                            Reservation for immediate use, omit this parameter.

                            Specify a commitment duration, in seconds, for the future-dated Capacity
                            Reservation.

                            The commitment duration is a minimum duration for which you commit to having
                            the future-dated Capacity Reservation in the active state in your account
                            after it has been delivered.

                            For more information, see Commitment duration (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-concepts.html#cr-commitment-duration).
                          format: int64
                          type: integer
                        deliveryPreference:
                          description: |-
                            Required for future-dated Capacity Reservations only. To create a Capacity
                            Reservation for immediate use, omit this parameter.

                            Indicates that the requested capacity will be delivered in addition to any
                            running instances or reserved capacity that you have in your account at the
                            requested date and time.

                            The only supported value is incremental.
                          type: string
                        ebsOptimized:
                          description: |-
                            Indicates whether the Capacity Reservation supports EBS-optimized instances.
                            This optimization provides dedicated throughput to Amazon EBS and an optimized
                            configuration stack to provide optimal I/O performance. This optimization
                            isn't available with all instance types. Additional usage charges apply when
                            using an EBS- optimized instance.
                          type: boolean
                        endDate:
                          description: |-
                            The date and time at which the Capacity Reservation expires. When a Capacity
                            Reservation expires, the reserved capacity is released and you can no longer
                            launch instances into it. The Capacity Reservation's state changes to expired
                            when it reaches its end date and time.

                            You must provide an EndDate value if EndDateType is limited. Omit EndDate
                            if EndDateType is unlimited.

                            If the EndDateType is limited, the Capacity Reservation is cancelled within
                            an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55,
                            the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55
                            on 5/31/2019.

                            If you are requesting a future-dated Capacity Reservation, you can't specify
                            an end date and time that is within the commitment duration.
                          format: date-time
                          type: string
                        endDateType:
                          description: |-
                            Indicates the way in which the Capacity Reservation ends. A Capacity Reservation
                            can have one of the following end types:

                              - unlimited - The Capacity Reservation remains active until you explicitly
                                cancel it. Do not provide an EndDate if the EndDateType is unlimited.

                              - limited - The Capacity Reservation expires automatically at a specified
                                date and time. You must provide an EndDate value if the EndDateType value
                                is limited.
                          type: string
                        ephemeralStorage:
                          description: Deprecated.
                          type: boolean
                        instanceCount:
                          description: |-
                            The number of instances for which to reserve capacity.

                            You can request future-dated Capacity Reservations for an instance count
                            with a minimum of 100 VPUs. For example, if you request a future-dated Capacity
                            Reservation for m5.xlarge instances, you must request at least 25 instances
                            (25 * m5.xlarge = 100 vCPUs).

                            Valid range: 1 - 1000
                          format: int64
                          type: integer
                        instanceMatchCriteria:
                          description: |-
                            Indicates the type of instance launches that the Capacity Reservation accepts.
                            The options include:

                              - open - The Capacity Reservation automatically matches all instances
                                that have matching attributes (instance type, platform, and Availability
                                Zone). Instances that have matching attributes run in the Capacity Reservation
                                automatically without specifying any additional parameters.

                              - targeted - The Capacity Reservation only accepts instances that have
                                matching attributes (instance type, platform, and Availability Zone),
                                and explicitly target the Capacity Reservation. This ensures that only
                                permitted instances can use the reserved capacity.

                            If you are requesting a future-dated Capacity Reservation, you must specify
                            targeted.

                            Default: open
                          type: string
                        instancePlatform:
                          description: The type of operating system for which to reserve capacity.
                          type: string
                        instanceType:
                          description: |-
                            The instance type for which to reserve capacity.

                            You can request future-dated Capacity Reservations for instance types in
                            the C, M, R, I, and T instance families only.

                            For more information, see Instance types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        outpostARN:
                          description: |-
                            Not supported for future-dated Capacity Reservations.

                            The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity
                            Reservation.

                            Regex Pattern: `^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/op-[a-f0-9]{17}$`
                          type: string
                        placementGroupARN:
                          description: |-
                            Not supported for future-dated Capacity Reservations.

                            The Amazon Resource Name (ARN) of the cluster placement group in which to
                            create the Capacity Reservation. For more information, see Capacity Reservations
                            for cluster placement groups (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cr-cpg.html)
                            in the Amazon EC2 User Guide.

                            Regex Pattern: `^arn:aws([a-z-]+)?:ec2:[a-z\d-]+:\d{12}:placement-group/^.{1,255}$`
                          type: string
                        startDate:
                          description: |-
                            Required for future-dated Capacity Reservations only. To create a Capacity
                            Reservation for immediate use, omit this parameter.

                            The date and time at which the future-dated Capacity Reservation should become
                            available for use, in the ISO8601 format in the UTC time zone (YYYY-MM-DDThh:mm:ss.sssZ).

                            You can request a future-dated Capacity Reservation between 5 and 120 days
                            in advance.
                          format: date-time
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        tenancy:
                          description: |-
                            Indicates the tenancy of the Capacity Reservation. A Capacity Reservation
                            can have one of the following tenancy settings:

                              - default - The Capacity Reservation is created on hardware that is shared
                                with other Amazon Web Services accounts.

                              - dedicated - The Capacity Reservation is created on single-tenant hardware
                                that is dedicated to a single Amazon Web Services account.
                          type: string
                      required:
                        - instanceCount
                        - instancePlatform
                        - instanceType
                      type: object
                    status:
                      description: CapacityReservationStatus defines the observed state of CapacityReservation
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        availableInstanceCount:
                          description: |-
                            The remaining capacity. Indicates the number of instances that can be launched
                            in the Capacity Reservation.
                          format: int64
                          type: integer
                        capacityAllocations:
                          description: Information about instance capacity usage.
                          items:
                            description: Information about instance capacity usage for a Capacity Reservation.
                            properties:
                              allocationType:
                                type: string
                              count:
                                format: int64
                                type: integer
                            type: object
                          type: array
                        capacityReservationFleetID:
                          description: |-
                            The ID of the Capacity Reservation Fleet to which the Capacity Reservation
                            belongs. Only valid for Capacity Reservations that were created by a Capacity
                            Reservation Fleet.
                          type: string
                        capacityReservationID:
                          description: The ID of the Capacity Reservation.
                          type: string
                        commitmentInfo:
                          description: Information about your commitment for a future-dated Capacity Reservation.
                          properties:
                            commitmentEndDate:
                              format: date-time
                              type: string
                            committedInstanceCount:
                              format: int64
                              type: integer
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        createDate:
                          description: The date and time at which the Capacity Reservation was created.
                          format: date-time
                          type: string
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the Capacity Reservation.
                          type: string
                        reservationType:
                          description: The type of Capacity Reservation.
                          type: string
                        state:
                          description: |-
                            The current state of the Capacity Reservation. A Capacity Reservation can
                            be in one of the following states:

                               * active - The capacity is available for use.

                               * expired - The Capacity Reservation expired automatically at the date
                               and time specified in your reservation request. The reserved capacity
                               is no longer available for your use.

                               * cancelled - The Capacity Reservation was canceled. The reserved capacity
                               is no longer available for your use.

                               * pending - The Capacity Reservation request was successful but the capacity
                               provisioning is still pending.

                               * failed - The Capacity Reservation request has failed. A request can
                               fail due to request parameters that are not valid, capacity constraints,
                               or instance limit constraints. You can view a failed request for 60 minutes.

                               * scheduled - (Future-dated Capacity Reservations only) The future-dated
                               Capacity Reservation request was approved and the Capacity Reservation
                               is scheduled for delivery on the requested start date.

                               * assessing - (Future-dated Capacity Reservations only) Amazon EC2 is
                               assessing your request for a future-dated Capacity Reservation.

                               * delayed - (Future-dated Capacity Reservations only) Amazon EC2 encountered
                               a delay in provisioning the requested future-dated Capacity Reservation.
                               Amazon EC2 is unable to deliver the requested capacity by the requested
                               start date and time.

                               * unsupported - (Future-dated Capacity Reservations only) Amazon EC2 can't
                               support the future-dated Capacity Reservation request due to capacity
                               constraints. You can view unsupported requests for 30 days. The Capacity
                               Reservation will not be delivered.
                          type: string
                        totalInstanceCount:
                          description: |-
                            The total number of instances for which the Capacity Reservation reserves
                            capacity.
                          format: int64
                          type: integer
                        unusedReservationBillingOwnerID:
                          description: |-
                            The ID of the Amazon Web Services account to which billing of the unused
                            capacity of the Capacity Reservation is assigned.

                            Regex Pattern: `^[0-9]{12}$`
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-dhcpoptions-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: dhcpoptions.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: DHCPOptions
            listKind: DHCPOptionsList
            plural: dhcpoptions
            singular: dhcpoptions
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.dhcpOptionsID
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: DHCPOptions is the Schema for the DHCPOptions API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        DhcpOptionsSpec defines the desired state of DhcpOptions.

                        The set of DHCP options.
                      properties:
                        dhcpConfigurations:
                          description: A DHCP configuration option.
                          items:
                            description: Describes a DHCP configuration option.
                            properties:
                              key:
                                type: string
                              values:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpc:
                          items:
                            type: string
                          type: array
                        vpcRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                      required:
                        - dhcpConfigurations
                      type: object
                    status:
                      description: DHCPOptionsStatus defines the observed state of DHCPOptions
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        dhcpOptionsID:
                          description: The ID of the set of DHCP options.
                          type: string
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the DHCP options set.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-elasticipaddresses-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: elasticipaddresses.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: ElasticIPAddress
            listKind: ElasticIPAddressList
            plural: elasticipaddresses
            singular: elasticipaddress
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.allocationID
                  name: ALLOCATION-ID
                  type: string
                - jsonPath: .status.publicIP
                  name: PUBLIC-IP
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: ElasticIPAddress is the Schema for the ElasticIPAddresses API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: ElasticIPAddressSpec defines the desired state of ElasticIPAddress.
                      properties:
                        address:
                          description: The Elastic IP address to recover or an IPv4 address from an address pool.
                          type: string
                        customerOwnedIPv4Pool:
                          description: |-
                            The ID of a customer-owned address pool. Use this parameter to let Amazon
                            EC2 select an address from the address pool. Alternatively, specify a specific
                            address from the address pool.
                          type: string
                        networkBorderGroup:
                          description: |-
                            A unique set of Availability Zones, Local Zones, or Wavelength Zones from
                            which Amazon Web Services advertises IP addresses. Use this parameter to
                            limit the IP address to this location. IP addresses cannot move between network
                            border groups.
                          type: string
                        publicIPv4Pool:
                          description: |-
                            The ID of an address pool that you own. Use this parameter to let Amazon
                            EC2 select an address from the address pool. To specify a specific address
                            from the address pool, use the Address parameter instead.
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    status:
                      description: ElasticIPAddressStatus defines the observed state of ElasticIPAddress
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        allocationID:
                          description: The ID that represents the allocation of the Elastic IP address.
                          type: string
                        carrierIP:
                          description: |-
                            The carrier IP address. This option is only available for network interfaces
                            that reside in a subnet in a Wavelength Zone.
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        customerOwnedIP:
                          description: The customer-owned IP address.
                          type: string
                        publicIP:
                          description: The Elastic IP address.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-fieldexports-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: fieldexports.services.k8s.aws
        spec:
          group: services.k8s.aws
          names:
            kind: FieldExport
            listKind: FieldExportList
            plural: fieldexports
            singular: fieldexport
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: FieldExport is the schema for the FieldExport API.
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: FieldExportSpec defines the desired state of the FieldExport.
                      properties:
                        from:
                          description: |-
                            ResourceFieldSelector provides the values necessary to identify an individual
                            field on an individual K8s resource.
                          properties:
                            path:
                              type: string
                            resource:
                              description: |-
                                NamespacedResource provides all the values necessary to identify an ACK
                                resource of a given type (within the same namespace as the custom resource
                                containing this type).
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                name:
                                  type: string
                              required:
                                - group
                                - kind
                                - name
                              type: object
                          required:
                            - path
                            - resource
                          type: object
                        to:
                          description: |-
                            FieldExportTarget provides the values necessary to identify the
                            output path for a field export.
                          properties:
                            key:
                              description: Key overrides the default value (`<namespace>.<FieldExport-resource-name>`) for the FieldExport target
                              type: string
                            kind:
                              description: |-
                                FieldExportOutputType represents all types that can be produced by a field
                                export operation
                              enum:
                                - configmap
                                - secret
                              type: string
                            name:
                              type: string
                            namespace:
                              description: Namespace is marked as optional, so we cannot compose `NamespacedName`
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                      required:
                        - from
                        - to
                      type: object
                    status:
                      description: FieldExportStatus defines the observed status of the FieldExport.
                      properties:
                        conditions:
                          description: |-
                            A collection of `ackv1alpha1.Condition` objects that describe the various
                            recoverable states of the field CR
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                      required:
                        - conditions
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-flowlogs-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: flowlogs.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: FlowLog
            listKind: FlowLogList
            plural: flowlogs
            singular: flowlog
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: FlowLog is the Schema for the FlowLogs API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        FlowLogSpec defines the desired state of FlowLog.

                        Describes a flow log.
                      properties:
                        deliverLogsPermissionARN:
                          description: |-
                            The ARN of the IAM role that allows Amazon EC2 to publish flow logs to the
                            log destination.

                            This parameter is required if the destination type is cloud-watch-logs, or
                            if the destination type is kinesis-data-firehose and the delivery stream
                            and the resources to monitor are in different accounts.
                          type: string
                        destinationOptions:
                          description: The destination options.
                          properties:
                            fileFormat:
                              type: string
                            hiveCompatiblePartitions:
                              type: boolean
                            perHourPartition:
                              type: boolean
                          type: object
                        logDestination:
                          description: |-
                            The destination for the flow log data. The meaning of this parameter depends
                            on the destination type.

                              - If the destination type is cloud-watch-logs, specify the ARN of a CloudWatch
                                Logs log group. For example: arn:aws:logs:region:account_id:log-group:my_group
                                Alternatively, use the LogGroupName parameter.

                              - If the destination type is s3, specify the ARN of an S3 bucket. For
                                example: arn:aws:s3:::my_bucket/my_subfolder/ The subfolder is optional.
                                Note that you can't use AWSLogs as a subfolder name.

                              - If the destination type is kinesis-data-firehose, specify the ARN of
                                a Kinesis Data Firehose delivery stream. For example: arn:aws:firehose:region:account_id:deliverystream:my_stream
                          type: string
                        logDestinationType:
                          description: |-
                            The type of destination for the flow log data.

                            Default: cloud-watch-logs
                          type: string
                        logFormat:
                          description: |-
                            The fields to include in the flow log record. List the fields in the order
                            in which they should appear. If you omit this parameter, the flow log is
                            created using the default format. If you specify this parameter, you must
                            include at least one field. For more information about the available fields,
                            see Flow log records (https://docs.aws.amazon.com/vpc/latest/userguide/flow-log-records.html)
                            in the Amazon VPC User Guide or Transit Gateway Flow Log records (https://docs.aws.amazon.com/vpc/latest/tgw/tgw-flow-logs.html#flow-log-records)
                            in the Amazon Web Services Transit Gateway Guide.

                            Specify the fields using the ${field-id} format, separated by spaces.
                          type: string
                        logGroupName:
                          description: |-
                            The name of a new or existing CloudWatch Logs log group where Amazon EC2
                            publishes your flow logs.

                            This parameter is valid only if the destination type is cloud-watch-logs.
                          type: string
                        maxAggregationInterval:
                          description: |-
                            The maximum interval of time during which a flow of packets is captured and
                            aggregated into a flow log record. The possible values are 60 seconds (1
                            minute) or 600 seconds (10 minutes). This parameter must be 60 seconds for
                            transit gateway resource types.

                            When a network interface is attached to a Nitro-based instance (https://docs.aws.amazon.com/ec2/latest/instancetypes/ec2-nitro-instances.html),
                            the aggregation interval is always 60 seconds or less, regardless of the
                            value that you specify.

                            Default: 600
                          format: int64
                          type: integer
                        resourceID:
                          type: string
                        resourceType:
                          description: The type of resource to monitor.
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        trafficType:
                          description: |-
                            The type of traffic to monitor (accepted traffic, rejected traffic, or all
                            traffic). This parameter is not supported for transit gateway resource types.
                            It is required for the other resource types.
                          type: string
                      required:
                        - resourceID
                        - resourceType
                      type: object
                    status:
                      description: FlowLogStatus defines the observed state of FlowLog
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        clientToken:
                          description: |-
                            Unique, case-sensitive identifier that you provide to ensure the idempotency
                            of the request.
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        flowLogID:
                          type: string
                        unsuccessful:
                          description: Information about the flow logs that could not be created successfully.
                          items:
                            description: Information about items that were not successfully processed in a batch call.
                            properties:
                              error:
                                description: |-
                                  Information about the error that occurred. For more information about errors,
                                  see Error codes (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html).
                                properties:
                                  code:
                                    type: string
                                  message:
                                    type: string
                                type: object
                              resourceID:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-instances-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: instances.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: Instance
            listKind: InstanceList
            plural: instances
            singular: instance
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.instanceID
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: Instance is the Schema for the Instances API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        InstanceSpec defines the desired state of Instance.

                        Describes an instance.
                      properties:
                        blockDeviceMappings:
                          description: |-
                            The block device mapping, which defines the EBS volumes and instance store
                            volumes to attach to the instance at launch. For more information, see Block
                            device mappings (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html)
                            in the Amazon EC2 User Guide.
                          items:
                            description: |-
                              Describes a block device mapping, which defines the EBS volumes and instance
                              store volumes to attach to an instance at launch.
                            properties:
                              deviceName:
                                type: string
                              ebs:
                                description: Describes a block device for an EBS volume.
                                properties:
                                  deleteOnTermination:
                                    type: boolean
                                  encrypted:
                                    type: boolean
                                  iops:
                                    format: int64
                                    type: integer
                                  kmsKeyID:
                                    type: string
                                  outpostARN:
                                    type: string
                                  snapshotID:
                                    type: string
                                  throughput:
                                    format: int64
                                    type: integer
                                  volumeSize:
                                    format: int64
                                    type: integer
                                  volumeType:
                                    type: string
                                type: object
                              noDevice:
                                type: string
                              virtualName:
                                type: string
                            type: object
                          type: array
                        capacityReservationSpecification:
                          description: |-
                            Information about the Capacity Reservation targeting option. If you do not
                            specify this parameter, the instance's Capacity Reservation preference defaults
                            to open, which enables it to run in any open Capacity Reservation that has
                            matching attributes (instance type, platform, Availability Zone, and tenancy).
                          properties:
                            capacityReservationPreference:
                              type: string
                            capacityReservationTarget:
                              description: Describes a target Capacity Reservation or Capacity Reservation group.
                              properties:
                                capacityReservationID:
                                  type: string
                                capacityReservationResourceGroupARN:
                                  type: string
                              type: object
                          type: object
                        cpuOptions:
                          description: |-
                            The CPU options for the instance. For more information, see Optimize CPU
                            options (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html)
                            in the Amazon EC2 User Guide.
                          properties:
                            coreCount:
                              format: int64
                              type: integer
                            threadsPerCore:
                              format: int64
                              type: integer
                          type: object
                        creditSpecification:
                          description: |-
                            The credit option for CPU usage of the burstable performance instance. Valid
                            values are standard and unlimited. To change this attribute after launch,
                            use ModifyInstanceCreditSpecification (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html).
                            For more information, see Burstable performance instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html)
                            in the Amazon EC2 User Guide.

                            Default: standard (T2 instances) or unlimited (T3/T3a/T4g instances)

                            For T3 instances with host tenancy, only standard is supported.
                          properties:
                            cpuCredits:
                              type: string
                          type: object
                        disableAPIStop:
                          description: |-
                            Indicates whether an instance is enabled for stop protection. For more information,
                            see Stop protection (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
                          type: boolean
                        disableAPITermination:
                          description: |-
                            If you set this parameter to true, you can't terminate the instance using
                            the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute
                            after launch, use ModifyInstanceAttribute (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html).
                            Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate,
                            you can terminate the instance by running the shutdown command from the instance.

                            Default: false
                          type: boolean
                        ebsOptimized:
                          description: |-
                            Indicates whether the instance is optimized for Amazon EBS I/O. This optimization
                            provides dedicated throughput to Amazon EBS and an optimized configuration
                            stack to provide optimal Amazon EBS I/O performance. This optimization isn't
                            available with all instance types. Additional usage charges apply when using
                            an EBS-optimized instance.

                            Default: false
                          type: boolean
                        elasticGPUSpecification:
                          description: |-
                            An elastic GPU to associate with the instance.

                            Amazon Elastic Graphics reached end of life on January 8, 2024.
                          items:
                            description: |-
                              Amazon Elastic Graphics reached end of life on January 8, 2024.

                              A specification for an Elastic Graphics accelerator.
                            properties:
                              type:
                                type: string
                            type: object
                          type: array
                        elasticInferenceAccelerators:
                          description: |-
                            An elastic inference accelerator to associate with the instance.

                            Amazon Elastic Inference is no longer available.
                          items:
                            description: |-
                              Amazon Elastic Inference is no longer available.

                              Describes an elastic inference accelerator.
                            properties:
                              count:
                                format: int64
                                type: integer
                              type_:
                                type: string
                            type: object
                          type: array
                        enclaveOptions:
                          description: |-
                            Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
                            For more information, see What is Amazon Web Services Nitro Enclaves? (https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html)
                            in the Amazon Web Services Nitro Enclaves User Guide.

                            You can't enable Amazon Web Services Nitro Enclaves and hibernation on the
                            same instance.
                          properties:
                            enabled:
                              type: boolean
                          type: object
                        hibernationOptions:
                          description: |-
                            Indicates whether an instance is enabled for hibernation. This parameter
                            is valid only if the instance meets the hibernation prerequisites (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-prerequisites.html).
                            For more information, see Hibernate your Amazon EC2 instance (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html)
                            in the Amazon EC2 User Guide.

                            You can't enable hibernation and Amazon Web Services Nitro Enclaves on the
                            same instance.
                          properties:
                            configured:
                              type: boolean
                          type: object
                        iamInstanceProfile:
                          description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
                          properties:
                            arn:
                              type: string
                            name:
                              type: string
                          type: object
                        imageID:
                          description: |-
                            The ID of the AMI. An AMI ID is required to launch an instance and must be
                            specified here or in a launch template.
                          type: string
                        instanceInitiatedShutdownBehavior:
                          description: |-
                            Indicates whether an instance stops or terminates when you initiate shutdown
                            from the instance (using the operating system command for system shutdown).

                            Default: stop
                          type: string
                        instanceMarketOptions:
                          description: |-
                            The market (purchasing) option for the instances.

                            For RunInstances, persistent Spot Instance requests are only supported when
                            InstanceInterruptionBehavior is set to either hibernate or stop.
                          properties:
                            marketType:
                              type: string
                            spotOptions:
                              description: The options for Spot Instances.
                              properties:
                                blockDurationMinutes:
                                  format: int64
                                  type: integer
                                instanceInterruptionBehavior:
                                  type: string
                                maxPrice:
                                  type: string
                                spotInstanceType:
                                  type: string
                                validUntil:
                                  format: date-time
                                  type: string
                              type: object
                          type: object
                        instanceType:
                          description: |-
                            The instance type. For more information, see Amazon EC2 instance types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        ipv6AddressCount:
                          description: |-
                            The number of IPv6 addresses to associate with the primary network interface.
                            Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You
                            cannot specify this option and the option to assign specific IPv6 addresses
                            in the same request. You can specify this option if you've specified a minimum
                            number of instances to launch.

                            You cannot specify this option and the network interfaces option in the same
                            request.
                          format: int64
                          type: integer
                        ipv6Addresses:
                          description: |-
                            The IPv6 addresses from the range of the subnet to associate with the primary
                            network interface. You cannot specify this option and the option to assign
                            a number of IPv6 addresses in the same request. You cannot specify this option
                            if you've specified a minimum number of instances to launch.

                            You cannot specify this option and the network interfaces option in the same
                            request.
                          items:
                            description: Describes an IPv6 address.
                            properties:
                              ipv6Address:
                                type: string
                            type: object
                          type: array
                        kernelID:
                          description: |-
                            The ID of the kernel.

                            We recommend that you use PV-GRUB instead of kernels and RAM disks. For more
                            information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        keyName:
                          description: |-
                            The name of the key pair. You can create a key pair using CreateKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html)
                            or ImportKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html).

                            If you do not specify a key pair, you can't connect to the instance unless
                            you choose an AMI that is configured to allow users another way to log in.
                          type: string
                        launchTemplate:
                          description: |-
                            The launch template. Any additional parameters that you specify for the new
                            instance overwrite the corresponding parameters included in the launch template.
                          properties:
                            launchTemplateID:
                              type: string
                            launchTemplateName:
                              type: string
                            launchTemplateRef:
                              description: Reference field for LaunchTemplateID
                              properties:
                                from:
                                  description: |-
                                    AWSResourceReference provides all the values necessary to reference another
                                    k8s resource for finding the identifier(Id/ARN/Name)
                                  properties:
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                  type: object
                              type: object
                            version:
                              type: string
                          type: object
                        licenseSpecifications:
                          description: The license configurations.
                          items:
                            description: Describes a license configuration.
                            properties:
                              licenseConfigurationARN:
                                type: string
                            type: object
                          type: array
                        maintenanceOptions:
                          description: The maintenance and recovery options for the instance.
                          properties:
                            autoRecovery:
                              type: string
                          type: object
                        maxCount:
                          description: |-
                            The maximum number of instances to launch. If you specify a value that is
                            more capacity than Amazon EC2 can launch in the target Availability Zone,
                            Amazon EC2 launches the largest possible number of instances above the specified
                            minimum count.

                            Constraints: Between 1 and the quota for the specified instance type for
                            your account for this Region. For more information, see Amazon EC2 instance
                            type quotas (https://docs.aws.amazon.com/ec2/latest/instancetypes/ec2-instance-quotas.html).
                          format: int64
                          type: integer
                        metadataOptions:
                          description: |-
                            The metadata options for the instance. For more information, see Instance
                            metadata and user data (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html).
                          properties:
                            httpEndpoint:
                              type: string
                            httpProtocolIPv6:
                              type: string
                            httpPutResponseHopLimit:
                              format: int64
                              type: integer
                            httpTokens:
                              type: string
                            instanceMetadataTags:
                              type: string
                          type: object
                        minCount:
                          description: |-
                            The minimum number of instances to launch. If you specify a value that is
                            more capacity than Amazon EC2 can provide in the target Availability Zone,
                            Amazon EC2 does not launch any instances.

                            Constraints: Between 1 and the quota for the specified instance type for
                            your account for this Region. For more information, see Amazon EC2 instance
                            type quotas (https://docs.aws.amazon.com/ec2/latest/instancetypes/ec2-instance-quotas.html).
                          format: int64
                          type: integer
                        monitoring:
                          description: Specifies whether detailed monitoring is enabled for the instance.
                          properties:
                            enabled:
                              type: boolean
                          type: object
                        networkInterfaces:
                          description: The network interfaces to associate with the instance.
                          items:
                            description: Describes a network interface.
                            properties:
                              associateCarrierIPAddress:
                                type: boolean
                              associatePublicIPAddress:
                                type: boolean
                              deleteOnTermination:
                                type: boolean
                              description:
                                type: string
                              deviceIndex:
                                format: int64
                                type: integer
                              interfaceType:
                                type: string
                              ipv4PrefixCount:
                                format: int64
                                type: integer
                              ipv4Prefixes:
                                items:
                                  description: Describes the IPv4 prefix option for a network interface.
                                  properties:
                                    ipv4Prefix:
                                      type: string
                                  type: object
                                type: array
                              ipv6AddressCount:
                                format: int64
                                type: integer
                              ipv6Addresses:
                                items:
                                  description: Describes an IPv6 address.
                                  properties:
                                    ipv6Address:
                                      type: string
                                  type: object
                                type: array
                              ipv6PrefixCount:
                                format: int64
                                type: integer
                              ipv6Prefixes:
                                items:
                                  description: Describes the IPv4 prefix option for a network interface.
                                  properties:
                                    ipv6Prefix:
                                      type: string
                                  type: object
                                type: array
                              networkCardIndex:
                                format: int64
                                type: integer
                              networkInterfaceID:
                                type: string
                              privateIPAddress:
                                type: string
                              privateIPAddresses:
                                items:
                                  description: Describes a secondary private IPv4 address for a network interface.
                                  properties:
                                    primary:
                                      type: boolean
                                    privateIPAddress:
                                      type: string
                                  type: object
                                type: array
                              secondaryPrivateIPAddressCount:
                                format: int64
                                type: integer
                              subnetID:
                                type: string
                            type: object
                          type: array
                        placement:
                          description: The placement for the instance.
                          properties:
                            affinity:
                              type: string
                            availabilityZone:
                              type: string
                            groupName:
                              type: string
                            hostID:
                              type: string
                            hostResourceGroupARN:
                              type: string
                            partitionNumber:
                              format: int64
                              type: integer
                            spreadDomain:
                              type: string
                            tenancy:
                              type: string
                          type: object
                        privateDNSNameOptions:
                          description: |-
                            The options for the instance hostname. The default values are inherited from
                            the subnet. Applies only if creating a network interface, not attaching an
                            existing one.
                          properties:
                            enableResourceNameDNSAAAARecord:
                              type: boolean
                            enableResourceNameDNSARecord:
                              type: boolean
                            hostnameType:
                              type: string
                          type: object
                        privateIPAddress:
                          description: |-
                            The primary IPv4 address. You must specify a value from the IPv4 address
                            range of the subnet.

                            Only one private IP address can be designated as primary. You can't specify
                            this option if you've specified the option to designate a private IP address
                            as the primary IP address in a network interface specification. You cannot
                            specify this option if you're launching more than one instance in the request.

                            You cannot specify this option and the network interfaces option in the same
                            request.
                          type: string
                        ramDiskID:
                          description: |-
                            The ID of the RAM disk to select. Some kernels require additional drivers
                            at launch. Check the kernel requirements for information about whether you
                            need to specify a RAM disk. To find kernel requirements, go to the Amazon
                            Web Services Resource Center and search for the kernel ID.

                            We recommend that you use PV-GRUB instead of kernels and RAM disks. For more
                            information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        securityGroupIDs:
                          description: |-
                            The IDs of the security groups. You can create a security group using CreateSecurityGroup
                            (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html).

                            If you specify a network interface, you must specify any security groups
                            as part of the network interface instead of using this parameter.
                          items:
                            type: string
                          type: array
                        securityGroups:
                          description: |-
                            [Default VPC] The names of the security groups.

                            If you specify a network interface, you must specify any security groups
                            as part of the network interface instead of using this parameter.

                            Default: Amazon EC2 uses the default security group.
                          items:
                            type: string
                          type: array
                        subnetID:
                          description: |-
                            The ID of the subnet to launch the instance into.

                            If you specify a network interface, you must specify any subnets as part
                            of the network interface instead of using this parameter.
                          type: string
                        subnetRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        userData:
                          description: |-
                            The user data to make available to the instance. User data must be base64-encoded.
                            Depending on the tool or SDK that you're using, the base64-encoding might
                            be performed for you. For more information, see Work with instance user data
                            (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-add-user-data.html).
                          type: string
                      type: object
                    status:
                      description: InstanceStatus defines the observed state of Instance
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        amiLaunchIndex:
                          description: |-
                            The AMI launch index, which can be used to find this instance in the launch
                            group.
                          format: int64
                          type: integer
                        architecture:
                          description: The architecture of the image.
                          type: string
                        bootMode:
                          description: |-
                            The boot mode that was specified by the AMI. If the value is uefi-preferred,
                            the AMI supports both UEFI and Legacy BIOS. The currentInstanceBootMode parameter
                            is the boot mode that is used to boot the instance at launch or start.

                            The operating system contained in the AMI must be configured to support the
                            specified boot mode.

                            For more information, see Boot modes (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        capacityReservationID:
                          description: The ID of the Capacity Reservation.
                          type: string
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        elasticGPUAssociations:
                          description: |-
                            Deprecated.

                            Amazon Elastic Graphics reached end of life on January 8, 2024.
                          items:
                            description: |-
                              Amazon Elastic Graphics reached end of life on January 8, 2024.

                              Describes the association between an instance and an Elastic Graphics accelerator.
                            properties:
                              elasticGPUAssociationID:
                                type: string
                              elasticGPUAssociationState:
                                type: string
                              elasticGPUAssociationTime:
                                type: string
                              elasticGPUID:
                                type: string
                            type: object
                          type: array
                        elasticInferenceAcceleratorAssociations:
                          description: |-
                            Deprecated

                            Amazon Elastic Inference is no longer available.
                          items:
                            description: |-
                              Amazon Elastic Inference is no longer available.

                              Describes the association between an instance and an elastic inference accelerator.
                            properties:
                              elasticInferenceAcceleratorARN:
                                type: string
                              elasticInferenceAcceleratorAssociationID:
                                type: string
                              elasticInferenceAcceleratorAssociationState:
                                type: string
                              elasticInferenceAcceleratorAssociationTime:
                                format: date-time
                                type: string
                            type: object
                          type: array
                        enaSupport:
                          description: Specifies whether enhanced networking with ENA is enabled.
                          type: boolean
                        hypervisor:
                          description: |-
                            The hypervisor type of the instance. The value xen is used for both Xen and
                            Nitro hypervisors.
                          type: string
                        instanceID:
                          description: The ID of the instance.
                          type: string
                        instanceLifecycle:
                          description: Indicates whether this is a Spot Instance or a Scheduled Instance.
                          type: string
                        ipv6Address:
                          description: The IPv6 address assigned to the instance.
                          type: string
                        launchTime:
                          description: |-
                            The time that the instance was last launched. To determine the time that
                            instance was first launched, see the attachment time for the primary network
                            interface.
                          format: date-time
                          type: string
                        licenses:
                          description: The license configurations for the instance.
                          items:
                            description: Describes a license configuration.
                            properties:
                              licenseConfigurationARN:
                                type: string
                            type: object
                          type: array
                        outpostARN:
                          description: The Amazon Resource Name (ARN) of the Outpost.
                          type: string
                        platform:
                          description: |-
                            The platform. This value is windows for Windows instances; otherwise, it
                            is empty.
                          type: string
                        platformDetails:
                          description: |-
                            The platform details value for the instance. For more information, see AMI
                            billing information fields (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        privateDNSName:
                          description: |-
                            [IPv4 only] The private DNS hostname name assigned to the instance. This
                            DNS hostname can only be used inside the Amazon EC2 network. This name is
                            not available until the instance enters the running state.

                            The Amazon-provided DNS server resolves Amazon-provided private DNS hostnames
                            if you've enabled DNS resolution and DNS hostnames in your VPC. If you are
                            not using the Amazon-provided DNS server in your VPC, your custom domain
                            name servers must resolve the hostname as appropriate.
                          type: string
                        productCodes:
                          description: The product codes attached to this instance, if applicable.
                          items:
                            description: Describes a product code.
                            properties:
                              productCodeID:
                                type: string
                              productCodeType:
                                type: string
                            type: object
                          type: array
                        publicDNSName:
                          description: |-
                            [IPv4 only] The public DNS name assigned to the instance. This name is not
                            available until the instance enters the running state. This name is only
                            available if you've enabled DNS hostnames for your VPC.
                          type: string
                        publicIPAddress:
                          description: |-
                            The public IPv4 address, or the Carrier IP address assigned to the instance,
                            if applicable.

                            A Carrier IP address only applies to an instance launched in a subnet associated
                            with a Wavelength Zone.
                          type: string
                        rootDeviceName:
                          description: The device name of the root device volume (for example, /dev/sda1).
                          type: string
                        rootDeviceType:
                          description: |-
                            The root device type used by the AMI. The AMI can use an EBS volume or an
                            instance store volume.
                          type: string
                        sourceDestCheck:
                          description: Indicates whether source/destination checking is enabled.
                          type: boolean
                        spotInstanceRequestID:
                          description: If the request is a Spot Instance request, the ID of the request.
                          type: string
                        sriovNetSupport:
                          description: |-
                            Specifies whether enhanced networking with the Intel 82599 Virtual Function
                            interface is enabled.
                          type: string
                        state:
                          description: The current state of the instance.
                          properties:
                            code:
                              format: int64
                              type: integer
                            name:
                              type: string
                          type: object
                        stateReason:
                          description: The reason for the most recent state transition.
                          properties:
                            code:
                              type: string
                            message:
                              type: string
                          type: object
                        stateTransitionReason:
                          description: The reason for the most recent state transition. This might be an empty string.
                          type: string
                        tpmSupport:
                          description: |-
                            If the instance is configured for NitroTPM support, the value is v2.0. For
                            more information, see NitroTPM (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        usageOperation:
                          description: |-
                            The usage operation value for the instance. For more information, see AMI
                            billing information fields (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html)
                            in the Amazon EC2 User Guide.
                          type: string
                        usageOperationUpdateTime:
                          description: The time that the usage operation was last updated.
                          format: date-time
                          type: string
                        virtualizationType:
                          description: The virtualization type of the instance.
                          type: string
                        vpcID:
                          description: The ID of the VPC in which the instance is running.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-internetgateways-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: internetgateways.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: InternetGateway
            listKind: InternetGatewayList
            plural: internetgateways
            singular: internetgateway
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.internetGatewayID
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: InternetGateway is the Schema for the InternetGateways API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        InternetGatewaySpec defines the desired state of InternetGateway.

                        Describes an internet gateway.
                      properties:
                        routeTableRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        routeTables:
                          items:
                            type: string
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpc:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: InternetGatewayStatus defines the observed state of InternetGateway
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        attachments:
                          description: Any VPCs attached to the internet gateway.
                          items:
                            description: |-
                              Describes the attachment of a VPC to an internet gateway or an egress-only
                              internet gateway.
                            properties:
                              state:
                                type: string
                              vpcID:
                                type: string
                            type: object
                          type: array
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        internetGatewayID:
                          description: The ID of the internet gateway.
                          type: string
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the internet gateway.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-launchtemplates-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: launchtemplates.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: LaunchTemplate
            listKind: LaunchTemplateList
            plural: launchtemplates
            singular: launchtemplate
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.id
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: LaunchTemplate is the Schema for the LaunchTemplates API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        LaunchTemplateSpec defines the desired state of LaunchTemplate.

                        Describes a launch template.
                      properties:
                        data:
                          description: The information for the launch template.
                          properties:
                            blockDeviceMappings:
                              items:
                                description: Describes a block device mapping.
                                properties:
                                  deviceName:
                                    type: string
                                  ebs:
                                    description: The parameters for a block device for an EBS volume.
                                    properties:
                                      deleteOnTermination:
                                        type: boolean
                                      encrypted:
                                        type: boolean
                                      iops:
                                        format: int64
                                        type: integer
                                      kmsKeyID:
                                        type: string
                                      snapshotID:
                                        type: string
                                      throughput:
                                        format: int64
                                        type: integer
                                      volumeSize:
                                        format: int64
                                        type: integer
                                      volumeType:
                                        type: string
                                    type: object
                                  noDevice:
                                    type: string
                                  virtualName:
                                    type: string
                                type: object
                              type: array
                            capacityReservationSpecification:
                              description: |-
                                Describes an instance's Capacity Reservation targeting option. You can specify
                                only one option at a time. Use the CapacityReservationPreference parameter
                                to configure the instance to run in On-Demand capacity or to run in any open
                                Capacity Reservation that has matching attributes (instance type, platform,
                                Availability Zone). Use the CapacityReservationTarget parameter to explicitly
                                target a specific Capacity Reservation or a Capacity Reservation group.
                              properties:
                                capacityReservationPreference:
                                  type: string
                                capacityReservationTarget:
                                  description: Describes a target Capacity Reservation or Capacity Reservation group.
                                  properties:
                                    capacityReservationID:
                                      type: string
                                    capacityReservationResourceGroupARN:
                                      type: string
                                  type: object
                              type: object
                            cpuOptions:
                              description: |-
                                The CPU options for the instance. Both the core count and threads per core
                                must be specified in the request.
                              properties:
                                amdSevSnp:
                                  type: string
                                coreCount:
                                  format: int64
                                  type: integer
                                threadsPerCore:
                                  format: int64
                                  type: integer
                              type: object
                            creditSpecification:
                              description: The credit option for CPU usage of a T instance.
                              properties:
                                cpuCredits:
                                  type: string
                              type: object
                            disableAPIStop:
                              type: boolean
                            disableAPITermination:
                              type: boolean
                            ebsOptimized:
                              type: boolean
                            elasticGPUSpecifications:
                              items:
                                description: |-
                                  Amazon Elastic Graphics reached end of life on January 8, 2024.

                                  A specification for an Elastic Graphics accelerator.
                                properties:
                                  type:
                                    type: string
                                type: object
                              type: array
                            elasticInferenceAccelerators:
                              items:
                                description: |-
                                  Amazon Elastic Inference is no longer available.

                                  Describes an elastic inference accelerator.
                                properties:
                                  count:
                                    format: int64
                                    type: integer
                                  type:
                                    type: string
                                type: object
                              type: array
                            enclaveOptions:
                              description: |-
                                Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
                                For more information, see What is Amazon Web Services Nitro Enclaves? (https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html)
                                in the Amazon Web Services Nitro Enclaves User Guide.
                              properties:
                                enabled:
                                  type: boolean
                              type: object
                            hibernationOptions:
                              description: |-
                                Indicates whether the instance is configured for hibernation. This parameter
                                is valid only if the instance meets the hibernation prerequisites (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-prerequisites.html).
                              properties:
                                configured:
                                  type: boolean
                              type: object
                            iamInstanceProfile:
                              description: An IAM instance profile.
                              properties:
                                arn:
                                  type: string
                                name:
                                  type: string
                              type: object
                            imageID:
                              type: string
                            instanceInitiatedShutdownBehavior:
                              type: string
                            instanceMarketOptions:
                              description: The market (purchasing) option for the instances.
                              properties:
                                marketType:
                                  type: string
                                spotOptions:
                                  description: The options for Spot Instances.
                                  properties:
                                    blockDurationMinutes:
                                      format: int64
                                      type: integer
                                    instanceInterruptionBehavior:
                                      type: string
                                    maxPrice:
                                      type: string
                                    spotInstanceType:
                                      type: string
                                    validUntil:
                                      format: date-time
                                      type: string
                                  type: object
                              type: object
                            instanceRequirements:
                              description: |-
                                The attributes for the instance types. When you specify instance attributes,
                                Amazon EC2 will identify instance types with these attributes.

                                You must specify VCpuCount and MemoryMiB. All other attributes are optional.
                                Any unspecified optional attribute is set to its default.

                                When you specify multiple attributes, you get instance types that satisfy
                                all of the specified attributes. If you specify multiple values for an attribute,
                                you get instance types that satisfy any of the specified values.

                                To limit the list of instance types from which Amazon EC2 can identify matching
                                instance types, you can use one of the following parameters, but not both
                                in the same request:

                                   * AllowedInstanceTypes - The instance types to include in the list. All
                                   other instance types are ignored, even if they match your specified attributes.

                                   * ExcludedInstanceTypes - The instance types to exclude from the list,
                                   even if they match your specified attributes.

                                If you specify InstanceRequirements, you can't specify InstanceType.

                                Attribute-based instance type selection is only supported when using Auto
                                Scaling groups, EC2 Fleet, and Spot Fleet to launch instances. If you plan
                                to use the launch template in the launch instance wizard (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-instance-wizard.html),
                                or with the RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html)
                                API or AWS::EC2::Instance (https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html)
                                Amazon Web Services CloudFormation resource, you can't specify InstanceRequirements.

                                For more information, see Specify attributes for instance type selection
                                for EC2 Fleet or Spot Fleet (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html)
                                and Spot placement score (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html)
                                in the Amazon EC2 User Guide.
                              properties:
                                acceleratorCount:
                                  description: |-
                                    The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web
                                    Services Inferentia chips) on an instance. To exclude accelerator-enabled
                                    instance types, set Max to 0.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                                acceleratorManufacturers:
                                  items:
                                    type: string
                                  type: array
                                acceleratorNames:
                                  items:
                                    type: string
                                  type: array
                                acceleratorTotalMemoryMiB:
                                  description: The minimum and maximum amount of total accelerator memory, in MiB.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                                acceleratorTypes:
                                  items:
                                    type: string
                                  type: array
                                allowedInstanceTypes:
                                  items:
                                    type: string
                                  type: array
                                bareMetal:
                                  type: string
                                baselineEBSBandwidthMbps:
                                  description: |-
                                    The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more
                                    information, see Amazon EBS–optimized instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html)
                                    in the Amazon EC2 User Guide.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                                baselinePerformanceFactors:
                                  description: |-
                                    The baseline performance to consider, using an instance family as a baseline
                                    reference. The instance family establishes the lowest acceptable level of
                                    performance. Amazon EC2 uses this baseline to guide instance type selection,
                                    but there is no guarantee that the selected instance types will always exceed
                                    the baseline for every application.

                                    Currently, this parameter only supports CPU performance as a baseline performance
                                    factor. For example, specifying c6i would use the CPU performance of the
                                    c6i family as the baseline reference.
                                  properties:
                                    cpu:
                                      description: |-
                                        The CPU performance to consider, using an instance family as the baseline
                                        reference.
                                      properties:
                                        references:
                                          items:
                                            description: |-
                                              Specify an instance family to use as the baseline reference for CPU performance.
                                              All instance types that match your specified attributes will be compared
                                              against the CPU performance of the referenced instance family, regardless
                                              of CPU manufacturer or architecture.

                                              Currently, only one instance family can be specified in the list.
                                            properties:
                                              instanceFamily:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                burstablePerformance:
                                  type: string
                                cpuManufacturers:
                                  items:
                                    type: string
                                  type: array
                                excludedInstanceTypes:
                                  items:
                                    type: string
                                  type: array
                                instanceGenerations:
                                  items:
                                    type: string
                                  type: array
                                localStorage:
                                  type: string
                                localStorageTypes:
                                  items:
                                    type: string
                                  type: array
                                maxSpotPriceAsPercentageOfOptimalOnDemandPrice:
                                  format: int64
                                  type: integer
                                memoryGiBPerVCPU:
                                  description: The minimum and maximum amount of memory per vCPU, in GiB.
                                  properties:
                                    max:
                                      type: number
                                    min:
                                      type: number
                                  type: object
                                memoryMiB:
                                  description: The minimum and maximum amount of memory, in MiB.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                                networkBandwidthGbps:
                                  description: |-
                                    The minimum and maximum amount of network bandwidth, in gigabits per second
                                    (Gbps).

                                    Setting the minimum bandwidth does not guarantee that your instance will
                                    achieve the minimum bandwidth. Amazon EC2 will identify instance types that
                                    support the specified minimum bandwidth, but the actual bandwidth of your
                                    instance might go below the specified minimum at times. For more information,
                                    see Available instance bandwidth (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth)
                                    in the Amazon EC2 User Guide.
                                  properties:
                                    max:
                                      type: number
                                    min:
                                      type: number
                                  type: object
                                networkInterfaceCount:
                                  description: The minimum and maximum number of network interfaces.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                                onDemandMaxPricePercentageOverLowestPrice:
                                  format: int64
                                  type: integer
                                requireHibernateSupport:
                                  type: boolean
                                spotMaxPricePercentageOverLowestPrice:
                                  format: int64
                                  type: integer
                                totalLocalStorageGB:
                                  description: The minimum and maximum amount of total local storage, in GB.
                                  properties:
                                    max:
                                      type: number
                                    min:
                                      type: number
                                  type: object
                                vCPUCount:
                                  description: The minimum and maximum number of vCPUs.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                    min:
                                      format: int64
                                      type: integer
                                  type: object
                              type: object
                            instanceType:
                              type: string
                            kernelID:
                              type: string
                            keyName:
                              type: string
                            licenseSpecifications:
                              items:
                                description: Describes a license configuration.
                                properties:
                                  licenseConfigurationARN:
                                    type: string
                                type: object
                              type: array
                            maintenanceOptions:
                              description: The maintenance options of your instance.
                              properties:
                                autoRecovery:
                                  type: string
                              type: object
                            metadataOptions:
                              description: |-
                                The metadata options for the instance. For more information, see Instance
                                metadata and user data (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)
                                in the Amazon EC2 User Guide.
                              properties:
                                httpEndpoint:
                                  type: string
                                httpProtocolIPv6:
                                  type: string
                                httpPutResponseHopLimit:
                                  format: int64
                                  type: integer
                                httpTokens:
                                  type: string
                                instanceMetadataTags:
                                  type: string
                              type: object
                            monitoring:
                              description: Describes the monitoring for the instance.
                              properties:
                                enabled:
                                  type: boolean
                              type: object
                            networkInterfaces:
                              items:
                                description: The parameters for a network interface.
                                properties:
                                  associateCarrierIPAddress:
                                    type: boolean
                                  associatePublicIPAddress:
                                    type: boolean
                                  deleteOnTermination:
                                    type: boolean
                                  description:
                                    type: string
                                  deviceIndex:
                                    format: int64
                                    type: integer
                                  groups:
                                    items:
                                      type: string
                                    type: array
                                  interfaceType:
                                    type: string
                                  ipv4PrefixCount:
                                    format: int64
                                    type: integer
                                  ipv4Prefixes:
                                    items:
                                      description: Describes the IPv4 prefix option for a network interface.
                                      properties:
                                        ipv4Prefix:
                                          type: string
                                      type: object
                                    type: array
                                  ipv6AddressCount:
                                    format: int64
                                    type: integer
                                  ipv6Addresses:
                                    items:
                                      description: Describes an IPv6 address.
                                      properties:
                                        ipv6Address:
                                          type: string
                                      type: object
                                    type: array
                                  ipv6PrefixCount:
                                    format: int64
                                    type: integer
                                  ipv6Prefixes:
                                    items:
                                      description: Describes the IPv4 prefix option for a network interface.
                                      properties:
                                        ipv6Prefix:
                                          type: string
                                      type: object
                                    type: array
                                  networkCardIndex:
                                    format: int64
                                    type: integer
                                  networkInterfaceID:
                                    type: string
                                  primaryIPv6:
                                    type: boolean
                                  privateIPAddress:
                                    type: string
                                  privateIPAddresses:
                                    items:
                                      description: Describes a secondary private IPv4 address for a network interface.
                                      properties:
                                        primary:
                                          type: boolean
                                        privateIPAddress:
                                          type: string
                                      type: object
                                    type: array
                                  secondaryPrivateIPAddressCount:
                                    format: int64
                                    type: integer
                                  subnetID:
                                    type: string
                                type: object
                              type: array
                            placement:
                              description: Describes the placement of an instance.
                              properties:
                                affinity:
                                  type: string
                                availabilityZone:
                                  type: string
                                groupID:
                                  type: string
                                groupName:
                                  type: string
                                hostID:
                                  type: string
                                hostResourceGroupARN:
                                  type: string
                                partitionNumber:
                                  format: int64
                                  type: integer
                                spreadDomain:
                                  type: string
                                tenancy:
                                  type: string
                              type: object
                            privateDNSNameOptions:
                              description: Describes the options for instance hostnames.
                              properties:
                                enableResourceNameDNSAAAARecord:
                                  type: boolean
                                enableResourceNameDNSARecord:
                                  type: boolean
                                hostnameType:
                                  type: string
                              type: object
                            ramDiskID:
                              type: string
                            securityGroupIDs:
                              items:
                                type: string
                              type: array
                            securityGroups:
                              items:
                                type: string
                              type: array
                            userData:
                              type: string
                          type: object
                        defaultVersion:
                          description: The version number of the default version of the launch template.
                          format: int64
                          type: integer
                        name:
                          description: |-
                            A name for the launch template.

                            Regex Pattern: `^[a-zA-Z0-9\(\)\.\-/_]+$`
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        versionDescription:
                          description: A description for the first version of the launch template.
                          type: string
                      required:
                        - data
                        - name
                      type: object
                    status:
                      description: LaunchTemplateStatus defines the observed state of LaunchTemplate
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        createTime:
                          description: The time launch template was created.
                          format: date-time
                          type: string
                        createdBy:
                          description: The principal that created the launch template.
                          type: string
                        id:
                          description: The ID of the launch template.
                          type: string
                        latestVersion:
                          description: The version number of the latest version of the launch template.
                          format: int64
                          type: integer
                        operator:
                          description: The entity that manages the launch template.
                          properties:
                            managed:
                              type: boolean
                            principal:
                              type: string
                          type: object
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-natgateways-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: natgateways.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: NATGateway
            listKind: NATGatewayList
            plural: natgateways
            singular: natgateway
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.natGatewayID
                  name: ID
                  type: string
                - jsonPath: .status.state
                  name: state
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: NATGateway is the Schema for the NATGateways API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        NatGatewaySpec defines the desired state of NatGateway.

                        Describes a NAT gateway.
                      properties:
                        allocationID:
                          description: |-
                            [Public NAT gateways only] The allocation ID of an Elastic IP address to
                            associate with the NAT gateway. You cannot specify an Elastic IP address
                            with a private NAT gateway. If the Elastic IP address is associated with
                            another resource, you must first disassociate it.
                          type: string
                        allocationRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        connectivityType:
                          description: |-
                            Indicates whether the NAT gateway supports public or private connectivity.
                            The default is public connectivity.
                          type: string
                        subnetID:
                          description: The ID of the subnet in which to create the NAT gateway.
                          type: string
                        subnetRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    status:
                      description: NATGatewayStatus defines the observed state of NATGateway
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        createTime:
                          description: The date and time the NAT gateway was created.
                          format: date-time
                          type: string
                        deleteTime:
                          description: The date and time the NAT gateway was deleted, if applicable.
                          format: date-time
                          type: string
                        failureCode:
                          description: |-
                            If the NAT gateway could not be created, specifies the error code for the
                            failure. (InsufficientFreeAddressesInSubnet | Gateway.NotAttached | InvalidAllocationID.NotFound
                            | Resource.AlreadyAssociated | InternalError | InvalidSubnetID.NotFound)
                          type: string
                        failureMessage:
                          description: |-
                            If the NAT gateway could not be created, specifies the error message for
                            the failure, that corresponds to the error code.

                               * For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free
                               addresses to create this NAT gateway"

                               * For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway
                               attached"

                               * For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx
                               could not be associated with this NAT gateway"

                               * For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx
                               is already associated"

                               * For InternalError: "Network interface eni-xxxxxxxx, created and used
                               internally by this NAT gateway is in an invalid state. Please try again."

                               * For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx
                               does not exist or could not be found."
                          type: string
                        natGatewayAddresses:
                          description: |-
                            Information about the IP addresses and network interface associated with
                            the NAT gateway.
                          items:
                            description: Describes the IP addresses and network interface associated with a NAT gateway.
                            properties:
                              allocationID:
                                type: string
                              networkInterfaceID:
                                type: string
                              privateIP:
                                type: string
                              publicIP:
                                type: string
                            type: object
                          type: array
                        natGatewayID:
                          description: The ID of the NAT gateway.
                          type: string
                        provisionedBandwidth:
                          description: |-
                            Reserved. If you need to sustain traffic greater than the documented limits
                            (https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html#vpc-limits-gateways),
                            contact Amazon Web Services Support.
                          properties:
                            provisionTime:
                              format: date-time
                              type: string
                            provisioned:
                              type: string
                            requestTime:
                              format: date-time
                              type: string
                            requested:
                              type: string
                            status:
                              type: string
                          type: object
                        state:
                          description: |-
                            The state of the NAT gateway.

                               * pending: The NAT gateway is being created and is not ready to process
                               traffic.

                               * failed: The NAT gateway could not be created. Check the failureCode
                               and failureMessage fields for the reason.

                               * available: The NAT gateway is able to process traffic. This status remains
                               until you delete the NAT gateway, and does not indicate the health of
                               the NAT gateway.

                               * deleting: The NAT gateway is in the process of being terminated and
                               may still be processing traffic.

                               * deleted: The NAT gateway has been terminated and is no longer processing
                               traffic.
                          type: string
                        vpcID:
                          description: The ID of the VPC in which the NAT gateway is located.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-networkacls-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: networkacls.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: NetworkACL
            listKind: NetworkACLList
            plural: networkacls
            singular: networkacl
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.id
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: NetworkACL is the Schema for the NetworkACLS API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        NetworkAclSpec defines the desired state of NetworkAcl.

                        Describes a network ACL.
                      properties:
                        associations:
                          items:
                            description: Describes an association between a network ACL and a subnet.
                            properties:
                              networkACLAssociationID:
                                type: string
                              networkACLID:
                                type: string
                              subnetID:
                                type: string
                              subnetRef:
                                description: Reference field for SubnetID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        entries:
                          items:
                            description: Describes an entry in a network ACL.
                            properties:
                              cidrBlock:
                                type: string
                              egress:
                                type: boolean
                              icmpTypeCode:
                                description: Describes the ICMP type and code.
                                properties:
                                  code:
                                    format: int64
                                    type: integer
                                  type_:
                                    format: int64
                                    type: integer
                                type: object
                              ipv6CIDRBlock:
                                type: string
                              portRange:
                                description: Describes a range of ports.
                                properties:
                                  from:
                                    format: int64
                                    type: integer
                                  to:
                                    format: int64
                                    type: integer
                                type: object
                              protocol:
                                type: string
                              ruleAction:
                                type: string
                              ruleNumber:
                                format: int64
                                type: integer
                            type: object
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: NetworkACLStatus defines the observed state of NetworkACL
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        id:
                          description: The ID of the network ACL.
                          type: string
                        isDefault:
                          description: Indicates whether this is the default network ACL for the VPC.
                          type: boolean
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the network ACL.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-routetables-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: routetables.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: RouteTable
            listKind: RouteTableList
            plural: routetables
            singular: routetable
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.routeTableID
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: RouteTable is the Schema for the RouteTables API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        RouteTableSpec defines the desired state of RouteTable.

                        Describes a route table.
                      properties:
                        routes:
                          items:
                            properties:
                              carrierGatewayID:
                                type: string
                              coreNetworkARN:
                                type: string
                              destinationCIDRBlock:
                                type: string
                              destinationIPv6CIDRBlock:
                                type: string
                              destinationPrefixListID:
                                type: string
                              egressOnlyInternetGatewayID:
                                type: string
                              gatewayID:
                                type: string
                              gatewayRef:
                                description: Reference field for GatewayID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                              instanceID:
                                type: string
                              localGatewayID:
                                type: string
                              natGatewayID:
                                type: string
                              natGatewayRef:
                                description: Reference field for NATGatewayID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                              networkInterfaceID:
                                type: string
                              transitGatewayID:
                                type: string
                              transitGatewayRef:
                                description: Reference field for TransitGatewayID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                              vpcEndpointID:
                                type: string
                              vpcEndpointRef:
                                description: Reference field for VPCEndpointID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                              vpcPeeringConnectionID:
                                type: string
                              vpcPeeringConnectionRef:
                                description: Reference field for VPCPeeringConnectionID
                                properties:
                                  from:
                                    description: |-
                                      AWSResourceReference provides all the values necessary to reference another
                                      k8s resource for finding the identifier(Id/ARN/Name)
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                    type: object
                                type: object
                            type: object
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: RouteTableStatus defines the observed state of RouteTable
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        associations:
                          description: The associations between the route table and your subnets or gateways.
                          items:
                            description: Describes an association between a route table and a subnet or gateway.
                            properties:
                              associationState:
                                description: |-
                                  Describes the state of an association between a route table and a subnet
                                  or gateway.
                                properties:
                                  state:
                                    type: string
                                  statusMessage:
                                    type: string
                                type: object
                              gatewayID:
                                type: string
                              main:
                                type: boolean
                              routeTableAssociationID:
                                type: string
                              routeTableID:
                                type: string
                              subnetID:
                                type: string
                            type: object
                          type: array
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the route table.
                          type: string
                        propagatingVGWs:
                          description: Any virtual private gateway (VGW) propagating routes.
                          items:
                            description: Describes a virtual private gateway propagating route.
                            properties:
                              gatewayID:
                                type: string
                            type: object
                          type: array
                        routeStatuses:
                          description: The routes in the route table.
                          items:
                            description: Describes a route in a route table.
                            properties:
                              carrierGatewayID:
                                type: string
                              coreNetworkARN:
                                type: string
                              destinationCIDRBlock:
                                type: string
                              destinationIPv6CIDRBlock:
                                type: string
                              destinationPrefixListID:
                                type: string
                              egressOnlyInternetGatewayID:
                                type: string
                              gatewayID:
                                type: string
                              instanceID:
                                type: string
                              instanceOwnerID:
                                type: string
                              localGatewayID:
                                type: string
                              natGatewayID:
                                type: string
                              networkInterfaceID:
                                type: string
                              origin:
                                type: string
                              state:
                                type: string
                              transitGatewayID:
                                type: string
                              vpcPeeringConnectionID:
                                type: string
                            type: object
                          type: array
                        routeTableID:
                          description: The ID of the route table.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-securitygroups-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: securitygroups.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: SecurityGroup
            listKind: SecurityGroupList
            plural: securitygroups
            singular: securitygroup
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.id
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: SecurityGroup is the Schema for the SecurityGroups API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        SecurityGroupSpec defines the desired state of SecurityGroup.

                        Describes a security group.
                      properties:
                        description:
                          description: |-
                            A description for the security group.

                            Constraints: Up to 255 characters in length

                            Valid characters: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
                          type: string
                        egressRules:
                          items:
                            description: Describes the permissions for a security group rule.
                            properties:
                              fromPort:
                                format: int64
                                type: integer
                              ipProtocol:
                                type: string
                              ipRanges:
                                items:
                                  description: Describes an IPv4 address range.
                                  properties:
                                    cidrIP:
                                      type: string
                                    description:
                                      type: string
                                  type: object
                                type: array
                              ipv6Ranges:
                                items:
                                  description: Describes an IPv6 address range.
                                  properties:
                                    cidrIPv6:
                                      type: string
                                    description:
                                      type: string
                                  type: object
                                type: array
                              prefixListIDs:
                                items:
                                  description: Describes a prefix list ID.
                                  properties:
                                    description:
                                      type: string
                                    prefixListID:
                                      type: string
                                  type: object
                                type: array
                              toPort:
                                format: int64
                                type: integer
                              userIDGroupPairs:
                                items:
                                  description: Describes a security group and Amazon Web Services account ID pair.
                                  properties:
                                    description:
                                      type: string
                                    groupID:
                                      type: string
                                    groupName:
                                      type: string
                                    groupRef:
                                      description: Reference field for GroupID
                                      properties:
                                        from:
                                          description: |-
                                            AWSResourceReference provides all the values necessary to reference another
                                            k8s resource for finding the identifier(Id/ARN/Name)
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                      type: object
                                    peeringStatus:
                                      type: string
                                    userID:
                                      type: string
                                    vpcID:
                                      type: string
                                    vpcPeeringConnectionID:
                                      type: string
                                    vpcRef:
                                      description: Reference field for VPCID
                                      properties:
                                        from:
                                          description: |-
                                            AWSResourceReference provides all the values necessary to reference another
                                            k8s resource for finding the identifier(Id/ARN/Name)
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                          type: array
                        ingressRules:
                          items:
                            description: Describes the permissions for a security group rule.
                            properties:
                              fromPort:
                                format: int64
                                type: integer
                              ipProtocol:
                                type: string
                              ipRanges:
                                items:
                                  description: Describes an IPv4 address range.
                                  properties:
                                    cidrIP:
                                      type: string
                                    description:
                                      type: string
                                  type: object
                                type: array
                              ipv6Ranges:
                                items:
                                  description: Describes an IPv6 address range.
                                  properties:
                                    cidrIPv6:
                                      type: string
                                    description:
                                      type: string
                                  type: object
                                type: array
                              prefixListIDs:
                                items:
                                  description: Describes a prefix list ID.
                                  properties:
                                    description:
                                      type: string
                                    prefixListID:
                                      type: string
                                  type: object
                                type: array
                              toPort:
                                format: int64
                                type: integer
                              userIDGroupPairs:
                                items:
                                  description: Describes a security group and Amazon Web Services account ID pair.
                                  properties:
                                    description:
                                      type: string
                                    groupID:
                                      type: string
                                    groupName:
                                      type: string
                                    groupRef:
                                      description: Reference field for GroupID
                                      properties:
                                        from:
                                          description: |-
                                            AWSResourceReference provides all the values necessary to reference another
                                            k8s resource for finding the identifier(Id/ARN/Name)
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                      type: object
                                    peeringStatus:
                                      type: string
                                    userID:
                                      type: string
                                    vpcID:
                                      type: string
                                    vpcPeeringConnectionID:
                                      type: string
                                    vpcRef:
                                      description: Reference field for VPCID
                                      properties:
                                        from:
                                          description: |-
                                            AWSResourceReference provides all the values necessary to reference another
                                            k8s resource for finding the identifier(Id/ARN/Name)
                                          properties:
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                      type: object
                                  type: object
                                type: array
                            type: object
                          type: array
                        name:
                          description: |-
                            The name of the security group.

                            Constraints: Up to 255 characters in length. Cannot start with sg-.

                            Valid characters: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The ID of the VPC. Required for a nondefault VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      required:
                        - description
                        - name
                      type: object
                    status:
                      description: SecurityGroupStatus defines the observed state of SecurityGroup
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        id:
                          description: The ID of the security group.
                          type: string
                        rules:
                          description: Information about security group rules.
                          items:
                            description: Describes a security group rule.
                            properties:
                              cidrIPv4:
                                type: string
                              cidrIPv6:
                                type: string
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              ipProtocol:
                                type: string
                              isEgress:
                                type: boolean
                              prefixListID:
                                type: string
                              securityGroupRuleID:
                                type: string
                              tags:
                                items:
                                  description: Describes a tag.
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                              toPort:
                                format: int64
                                type: integer
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-subnets-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: subnets.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: Subnet
            listKind: SubnetList
            plural: subnets
            singular: subnet
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.subnetID
                  name: ID
                  type: string
                - jsonPath: .status.state
                  name: state
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: Subnet is the Schema for the Subnets API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        SubnetSpec defines the desired state of Subnet.

                        Describes a subnet.
                      properties:
                        assignIPv6AddressOnCreation:
                          type: boolean
                        availabilityZone:
                          description: |-
                            The Availability Zone or Local Zone for the subnet.

                            Default: Amazon Web Services selects one for you. If you create more than
                            one subnet in your VPC, we do not necessarily select a different zone for
                            each subnet.

                            To create a subnet in a Local Zone, set this value to the Local Zone ID,
                            for example us-west-2-lax-1a. For information about the Regions that support
                            Local Zones, see Available Local Zones (https://docs.aws.amazon.com/local-zones/latest/ug/available-local-zones.html).

                            To create a subnet in an Outpost, set this value to the Availability Zone
                            for the Outpost and specify the Outpost ARN.
                          type: string
                        availabilityZoneID:
                          description: The AZ ID or the Local Zone ID of the subnet.
                          type: string
                        cidrBlock:
                          description: |-
                            The IPv4 network range for the subnet, in CIDR notation. For example, 10.0.0.0/24.
                            We modify the specified CIDR block to its canonical form; for example, if
                            you specify 100.68.0.18/18, we modify it to 100.68.0.0/18.

                            This parameter is not supported for an IPv6 only subnet.
                          type: string
                        customerOwnedIPv4Pool:
                          type: string
                        enableDNS64:
                          type: boolean
                        enableResourceNameDNSAAAARecord:
                          type: boolean
                        enableResourceNameDNSARecord:
                          type: boolean
                        hostnameType:
                          type: string
                        ipv6CIDRBlock:
                          description: |-
                            The IPv6 network range for the subnet, in CIDR notation. This parameter is
                            required for an IPv6 only subnet.
                          type: string
                        ipv6Native:
                          description: Indicates whether to create an IPv6 only subnet.
                          type: boolean
                        mapPublicIPOnLaunch:
                          type: boolean
                        outpostARN:
                          description: |-
                            The Amazon Resource Name (ARN) of the Outpost. If you specify an Outpost
                            ARN, you must also specify the Availability Zone of the Outpost subnet.
                          type: string
                        routeTableRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        routeTables:
                          items:
                            type: string
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: SubnetStatus defines the observed state of Subnet
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        availableIPAddressCount:
                          description: |-
                            The number of unused private IPv4 addresses in the subnet. The IPv4 addresses
                            for any stopped instances are considered unavailable.
                          format: int64
                          type: integer
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        defaultForAZ:
                          description: Indicates whether this is the default subnet for the Availability Zone.
                          type: boolean
                        enableLniAtDeviceIndex:
                          description: |-
                            Indicates the device position for local network interfaces in this subnet.
                            For example, 1 indicates local network interfaces in this subnet are the
                            secondary network interface (eth1).
                          format: int64
                          type: integer
                        ipv6CIDRBlockAssociationSet:
                          description: Information about the IPv6 CIDR blocks associated with the subnet.
                          items:
                            description: Describes an association between a subnet and an IPv6 CIDR block.
                            properties:
                              associationID:
                                type: string
                              ipv6CIDRBlock:
                                type: string
                              ipv6CIDRBlockState:
                                description: Describes the state of a CIDR block.
                                properties:
                                  state:
                                    type: string
                                  statusMessage:
                                    type: string
                                type: object
                            type: object
                          type: array
                        mapCustomerOwnedIPOnLaunch:
                          description: |-
                            Indicates whether a network interface created in this subnet (including a
                            network interface created by RunInstances) receives a customer-owned IPv4
                            address.
                          type: boolean
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the subnet.
                          type: string
                        privateDNSNameOptionsOnLaunch:
                          description: |-
                            The type of hostnames to assign to instances in the subnet at launch. An
                            instance hostname is based on the IPv4 address or ID of the instance.
                          properties:
                            enableResourceNameDNSAAAARecord:
                              type: boolean
                            enableResourceNameDNSARecord:
                              type: boolean
                            hostnameType:
                              type: string
                          type: object
                        state:
                          description: The current state of the subnet.
                          type: string
                        subnetID:
                          description: The ID of the subnet.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-transitgateways-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: transitgateways.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: TransitGateway
            listKind: TransitGatewayList
            plural: transitgateways
            singular: transitgateway
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.transitGatewayID
                  name: ID
                  type: string
                - jsonPath: .status.state
                  name: state
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: TransitGateway is the Schema for the TransitGateways API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        TransitGatewaySpec defines the desired state of TransitGateway.

                        Describes a transit gateway.
                      properties:
                        description:
                          description: A description of the transit gateway.
                          type: string
                        options:
                          description: The transit gateway options.
                          properties:
                            amazonSideASN:
                              format: int64
                              type: integer
                            autoAcceptSharedAttachments:
                              type: string
                            defaultRouteTableAssociation:
                              type: string
                            defaultRouteTablePropagation:
                              type: string
                            dnsSupport:
                              type: string
                            multicastSupport:
                              type: string
                            transitGatewayCIDRBlocks:
                              items:
                                type: string
                              type: array
                            vpnECMPSupport:
                              type: string
                          type: object
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    status:
                      description: TransitGatewayStatus defines the observed state of TransitGateway
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        creationTime:
                          description: The creation time.
                          format: date-time
                          type: string
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the transit gateway.
                          type: string
                        state:
                          description: The state of the transit gateway.
                          type: string
                        transitGatewayID:
                          description: The ID of the transit gateway.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-transitgatewayvpcattachments-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: transitgatewayvpcattachments.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: TransitGatewayVPCAttachment
            listKind: TransitGatewayVPCAttachmentList
            plural: transitgatewayvpcattachments
            singular: transitgatewayvpcattachment
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.id
                  name: ID
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: TransitGatewayVPCAttachment is the Schema for the TransitGatewayVPCAttachments API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        TransitGatewayVpcAttachmentSpec defines the desired state of TransitGatewayVpcAttachment.

                        Describes a VPC attachment.
                      properties:
                        options:
                          description: The VPC attachment options.
                          properties:
                            applianceModeSupport:
                              type: string
                            dnsSupport:
                              type: string
                            ipv6Support:
                              type: string
                            securityGroupReferencingSupport:
                              type: string
                          type: object
                        subnetIDs:
                          description: |-
                            The IDs of one or more subnets. You can specify only one subnet per Availability
                            Zone. You must specify at least one subnet, but we recommend that you specify
                            two subnets for better availability. The transit gateway uses one IP address
                            from each specified subnet.
                          items:
                            type: string
                          type: array
                        subnetRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        transitGatewayID:
                          description: The ID of the transit gateway.
                          type: string
                        transitGatewayRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: TransitGatewayVPCAttachmentStatus defines the observed state of TransitGatewayVPCAttachment
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        creationTime:
                          description: The creation time.
                          format: date-time
                          type: string
                        id:
                          description: The ID of the attachment.
                          type: string
                        state:
                          description: |-
                            The state of the VPC attachment. Note that the initiating state has been
                            deprecated.
                          type: string
                        vpcOwnerID:
                          description: The ID of the Amazon Web Services account that owns the VPC.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-vpcendpoints-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: vpcendpoints.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: VPCEndpoint
            listKind: VPCEndpointList
            plural: vpcendpoints
            singular: vpcendpoint
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.vpcEndpointID
                  name: ID
                  type: string
                - jsonPath: .status.state
                  name: state
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: VPCEndpoint is the Schema for the VPCEndpoints API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        VpcEndpointSpec defines the desired state of VpcEndpoint.

                        Describes a VPC endpoint.
                      properties:
                        dnsOptions:
                          description: The DNS options for the endpoint.
                          properties:
                            dnsRecordIPType:
                              type: string
                          type: object
                        ipAddressType:
                          description: The IP address type for the endpoint.
                          type: string
                        policyDocument:
                          description: |-
                            (Interface and gateway endpoints) A policy to attach to the endpoint that
                            controls access to the service. The policy must be in valid JSON format.
                            If this parameter is not specified, we attach a default policy that allows
                            full access to the service.
                          type: string
                        privateDNSEnabled:
                          description: |-
                            (Interface endpoint) Indicates whether to associate a private hosted zone
                            with the specified VPC. The private hosted zone contains a record set for
                            the default public DNS name for the service for the Region (for example,
                            kinesis.us-east-1.amazonaws.com), which resolves to the private IP addresses
                            of the endpoint network interfaces in the VPC. This enables you to make requests
                            to the default public DNS name for the service instead of the public DNS
                            names that are automatically generated by the VPC endpoint service.

                            To use a private hosted zone, you must set the following VPC attributes to
                            true: enableDnsHostnames and enableDnsSupport. Use ModifyVpcAttribute to
                            set the VPC attributes.

                            Default: true
                          type: boolean
                        routeTableIDs:
                          description: (Gateway endpoint) The route table IDs.
                          items:
                            type: string
                          type: array
                        routeTableRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        securityGroupIDs:
                          description: |-
                            (Interface endpoint) The IDs of the security groups to associate with the
                            endpoint network interfaces. If this parameter is not specified, we use the
                            default security group for the VPC.
                          items:
                            type: string
                          type: array
                        securityGroupRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        serviceName:
                          description: The name of the endpoint service.
                          type: string
                        serviceNetworkARN:
                          description: |-
                            The Amazon Resource Name (ARN) of a service network that will be associated
                            with the VPC endpoint of type service-network.
                          type: string
                          x-kubernetes-validations:
                            - message: Value is immutable once set
                              rule: self == oldSelf
                        serviceRegion:
                          description: The Region where the service is hosted. The default is the current Region.
                          type: string
                          x-kubernetes-validations:
                            - message: Value is immutable once set
                              rule: self == oldSelf
                        subnetIDs:
                          description: |-
                            (Interface and Gateway Load Balancer endpoints) The IDs of the subnets in
                            which to create endpoint network interfaces. For a Gateway Load Balancer
                            endpoint, you can specify only one subnet.
                          items:
                            type: string
                          type: array
                        subnetRefs:
                          items:
                            description: |-
                              AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                              type to provide more user friendly syntax for references using 'from' field
                              Ex:
                              APIIDRef:

                              	from:
                              	  name: my-api
                            properties:
                              from:
                                description: |-
                                  AWSResourceReference provides all the values necessary to reference another
                                  k8s resource for finding the identifier(Id/ARN/Name)
                                properties:
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                            type: object
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcEndpointType:
                          description: |-
                            The type of endpoint.

                            Default: Gateway
                          type: string
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: VPCEndpointStatus defines the observed state of VPCEndpoint
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        creationTimestamp:
                          description: The date and time that the endpoint was created.
                          format: date-time
                          type: string
                        dnsEntries:
                          description: (Interface endpoint) The DNS entries for the endpoint.
                          items:
                            description: Describes a DNS entry.
                            properties:
                              dnsName:
                                type: string
                              hostedZoneID:
                                type: string
                            type: object
                          type: array
                        groups:
                          description: |-
                            (Interface endpoint) Information about the security groups that are associated
                            with the network interface.
                          items:
                            description: Describes a security group.
                            properties:
                              groupID:
                                type: string
                              groupName:
                                type: string
                            type: object
                          type: array
                        lastError:
                          description: The last error that occurred for endpoint.
                          properties:
                            code:
                              type: string
                            message:
                              type: string
                          type: object
                        networkInterfaceIDs:
                          description: (Interface endpoint) The network interfaces for the endpoint.
                          items:
                            type: string
                          type: array
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the endpoint.
                          type: string
                        requesterManaged:
                          description: Indicates whether the endpoint is being managed by its service.
                          type: boolean
                        state:
                          description: The state of the endpoint.
                          type: string
                        vpcEndpointID:
                          description: The ID of the endpoint.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-vpcendpointserviceconfigurations-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: vpcendpointserviceconfigurations.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: VPCEndpointServiceConfiguration
            listKind: VPCEndpointServiceConfigurationList
            plural: vpcendpointserviceconfigurations
            singular: vpcendpointserviceconfiguration
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.serviceID
                  name: ServiceID
                  type: string
                - jsonPath: .status.serviceState
                  name: ServiceState
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: VPCEndpointServiceConfiguration is the Schema for the VPCEndpointServiceConfigurations API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: VpcEndpointServiceConfigurationSpec defines the desired state of VpcEndpointServiceConfiguration.
                      properties:
                        acceptanceRequired:
                          description: |-
                            Indicates whether requests from service consumers to create an endpoint to
                            your service must be accepted manually.
                          type: boolean
                        allowedPrincipals:
                          description: |-
                            The Amazon Resource Names (ARN) of the principals. Permissions are granted
                            to the principals in this list. To grant permissions to all principals, specify
                            an asterisk (*).
                          items:
                            type: string
                          type: array
                        gatewayLoadBalancerARNs:
                          description: The Amazon Resource Names (ARNs) of the Gateway Load Balancers.
                          items:
                            type: string
                          type: array
                        networkLoadBalancerARNs:
                          description: The Amazon Resource Names (ARNs) of the Network Load Balancers.
                          items:
                            type: string
                          type: array
                        privateDNSName:
                          description: |-
                            (Interface endpoint configuration) The private DNS name to assign to the
                            VPC endpoint service.
                          type: string
                        supportedIPAddressTypes:
                          description: The supported IP address types. The possible values are ipv4 and ipv6.
                          items:
                            type: string
                          type: array
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    status:
                      description: VPCEndpointServiceConfigurationStatus defines the observed state of VPCEndpointServiceConfiguration
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        availabilityZones:
                          description: The Availability Zones in which the service is available.
                          items:
                            type: string
                          type: array
                        baseEndpointDNSNames:
                          description: The DNS names for the service.
                          items:
                            type: string
                          type: array
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        managesVPCEndpoints:
                          description: |-
                            Indicates whether the service manages its VPC endpoints. Management of the
                            service VPC endpoints using the VPC endpoint API is restricted.
                          type: boolean
                        payerResponsibility:
                          description: The payer responsibility.
                          type: string
                        privateDNSNameConfiguration:
                          description: Information about the endpoint service private DNS name configuration.
                          properties:
                            name:
                              type: string
                            state:
                              type: string
                            type_:
                              type: string
                            value:
                              type: string
                          type: object
                        serviceID:
                          description: The ID of the service.
                          type: string
                        serviceName:
                          description: The name of the service.
                          type: string
                        serviceState:
                          description: The service state.
                          type: string
                        serviceType:
                          description: The type of service.
                          items:
                            description: Describes the type of service for a VPC endpoint.
                            properties:
                              serviceType:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-vpcpeeringconnections-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: vpcpeeringconnections.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: VPCPeeringConnection
            listKind: VPCPeeringConnectionList
            plural: vpcpeeringconnections
            singular: vpcpeeringconnection
          scope: Namespaced
          versions:
            - name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: VPCPeeringConnection is the Schema for the VPCPeeringConnections API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        VpcPeeringConnectionSpec defines the desired state of VpcPeeringConnection.

                        Describes a VPC peering connection.
                      properties:
                        acceptRequest:
                          type: boolean
                        accepterPeeringConnectionOptions:
                          description: The VPC peering connection options for the accepter VPC.
                          properties:
                            allowDNSResolutionFromRemoteVPC:
                              type: boolean
                            allowEgressFromLocalClassicLinkToRemoteVPC:
                              type: boolean
                            allowEgressFromLocalVPCToRemoteClassicLink:
                              type: boolean
                          type: object
                        peerOwnerID:
                          description: |-
                            The Amazon Web Services account ID of the owner of the accepter VPC.

                            Default: Your Amazon Web Services account ID
                          type: string
                        peerRegion:
                          description: |-
                            The Region code for the accepter VPC, if the accepter VPC is located in a
                            Region other than the Region in which you make the request.

                            Default: The Region in which you make the request.
                          type: string
                        peerVPCID:
                          description: |-
                            The ID of the VPC with which you are creating the VPC peering connection.
                            You must specify this parameter in the request.
                          type: string
                        peerVPCRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                        requesterPeeringConnectionOptions:
                          description: The VPC peering connection options for the requester VPC.
                          properties:
                            allowDNSResolutionFromRemoteVPC:
                              type: boolean
                            allowEgressFromLocalClassicLinkToRemoteVPC:
                              type: boolean
                            allowEgressFromLocalVPCToRemoteClassicLink:
                              type: boolean
                          type: object
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        vpcID:
                          description: The ID of the requester VPC. You must specify this parameter in the request.
                          type: string
                        vpcRef:
                          description: |-
                            AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference
                            type to provide more user friendly syntax for references using 'from' field
                            Ex:
                            APIIDRef:

                            	from:
                            	  name: my-api
                          properties:
                            from:
                              description: |-
                                AWSResourceReference provides all the values necessary to reference another
                                k8s resource for finding the identifier(Id/ARN/Name)
                              properties:
                                name:
                                  type: string
                                namespace:
                                  type: string
                              type: object
                          type: object
                      type: object
                    status:
                      description: VPCPeeringConnectionStatus defines the observed state of VPCPeeringConnection
                      properties:
                        accepterVPCInfo:
                          description: |-
                            Information about the accepter VPC. CIDR block information is only returned
                            when describing an active VPC peering connection.
                          properties:
                            cidrBlock:
                              type: string
                            cidrBlockSet:
                              items:
                                description: Describes an IPv4 CIDR block.
                                properties:
                                  cidrBlock:
                                    type: string
                                type: object
                              type: array
                            ipv6CIDRBlockSet:
                              items:
                                description: Describes an IPv6 CIDR block.
                                properties:
                                  ipv6CIDRBlock:
                                    type: string
                                type: object
                              type: array
                            ownerID:
                              type: string
                            peeringOptions:
                              description: Describes the VPC peering connection options.
                              properties:
                                allowDNSResolutionFromRemoteVPC:
                                  type: boolean
                                allowEgressFromLocalClassicLinkToRemoteVPC:
                                  type: boolean
                                allowEgressFromLocalVPCToRemoteClassicLink:
                                  type: boolean
                              type: object
                            region:
                              type: string
                            vpcID:
                              type: string
                          type: object
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        expirationTime:
                          description: The time that an unaccepted VPC peering connection will expire.
                          format: date-time
                          type: string
                        requesterVPCInfo:
                          description: |-
                            Information about the requester VPC. CIDR block information is only returned
                            when describing an active VPC peering connection.
                          properties:
                            cidrBlock:
                              type: string
                            cidrBlockSet:
                              items:
                                description: Describes an IPv4 CIDR block.
                                properties:
                                  cidrBlock:
                                    type: string
                                type: object
                              type: array
                            ipv6CIDRBlockSet:
                              items:
                                description: Describes an IPv6 CIDR block.
                                properties:
                                  ipv6CIDRBlock:
                                    type: string
                                type: object
                              type: array
                            ownerID:
                              type: string
                            peeringOptions:
                              description: Describes the VPC peering connection options.
                              properties:
                                allowDNSResolutionFromRemoteVPC:
                                  type: boolean
                                allowEgressFromLocalClassicLinkToRemoteVPC:
                                  type: boolean
                                allowEgressFromLocalVPCToRemoteClassicLink:
                                  type: boolean
                              type: object
                            region:
                              type: string
                            vpcID:
                              type: string
                          type: object
                        status:
                          description: The status of the VPC peering connection.
                          properties:
                            code:
                              type: string
                            message:
                              type: string
                          type: object
                        vpcPeeringConnectionID:
                          description: The ID of the VPC peering connection.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: customresourcedefinition-vpcs-ec2-services-k8s-aws
      template:
        apiVersion: apiextensions.k8s.io/v1
        kind: CustomResourceDefinition
        metadata:
          annotations:
            controller-gen.kubebuilder.io/version: v0.16.2
          name: vpcs.ec2.services.k8s.aws
        spec:
          group: ec2.services.k8s.aws
          names:
            kind: VPC
            listKind: VPCList
            plural: vpcs
            singular: vpc
          scope: Namespaced
          versions:
            - additionalPrinterColumns:
                - jsonPath: .status.vpcID
                  name: ID
                  type: string
                - jsonPath: .status.state
                  name: state
                  type: string
              name: v1alpha1
              schema:
                openAPIV3Schema:
                  description: VPC is the Schema for the VPCS API
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: |-
                        VpcSpec defines the desired state of Vpc.

                        Describes a VPC.
                      properties:
                        amazonProvidedIPv6CIDRBlock:
                          description: |-
                            Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for
                            the VPC. You cannot specify the range of IP addresses, or the size of the
                            CIDR block.
                          type: boolean
                        cidrBlocks:
                          items:
                            type: string
                          type: array
                        disallowSecurityGroupDefaultRules:
                          type: boolean
                        enableDNSHostnames:
                          description: The attribute value. The valid values are true or false.
                          type: boolean
                        enableDNSSupport:
                          description: The attribute value. The valid values are true or false.
                          type: boolean
                        instanceTenancy:
                          description: |-
                            The tenancy options for instances launched into the VPC. For default, instances
                            are launched with shared tenancy by default. You can launch instances with
                            any tenancy into a shared tenancy VPC. For dedicated, instances are launched
                            as dedicated tenancy instances by default. You can only launch instances
                            with a tenancy of dedicated or host into a dedicated tenancy VPC.

                            Important: The host value cannot be used with this parameter. Use the default
                            or dedicated values only.

                            Default: default
                          type: string
                        ipv4IPAMPoolID:
                          description: |-
                            The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR.
                            For more information, see What is IPAM? (https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html)
                            in the Amazon VPC IPAM User Guide.
                          type: string
                        ipv4NetmaskLength:
                          description: |-
                            The netmask length of the IPv4 CIDR you want to allocate to this VPC from
                            an Amazon VPC IP Address Manager (IPAM) pool. For more information about
                            IPAM, see What is IPAM? (https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html)
                            in the Amazon VPC IPAM User Guide.
                          format: int64
                          type: integer
                        ipv6CIDRBlock:
                          description: |-
                            The IPv6 CIDR block from the IPv6 address pool. You must also specify Ipv6Pool
                            in the request.

                            To let Amazon choose the IPv6 CIDR block for you, omit this parameter.
                          type: string
                        ipv6CIDRBlockNetworkBorderGroup:
                          description: |-
                            The name of the location from which we advertise the IPV6 CIDR block. Use
                            this parameter to limit the address to this location.

                            You must set AmazonProvidedIpv6CidrBlock to true to use this parameter.
                          type: string
                        ipv6IPAMPoolID:
                          description: |-
                            The ID of an IPv6 IPAM pool which will be used to allocate this VPC an IPv6
                            CIDR. IPAM is a VPC feature that you can use to automate your IP address
                            management workflows including assigning, tracking, troubleshooting, and
                            auditing IP addresses across Amazon Web Services Regions and accounts throughout
                            your Amazon Web Services Organization. For more information, see What is
                            IPAM? (https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html)
                            in the Amazon VPC IPAM User Guide.
                          type: string
                        ipv6NetmaskLength:
                          description: |-
                            The netmask length of the IPv6 CIDR you want to allocate to this VPC from
                            an Amazon VPC IP Address Manager (IPAM) pool. For more information about
                            IPAM, see What is IPAM? (https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html)
                            in the Amazon VPC IPAM User Guide.
                          format: int64
                          type: integer
                        ipv6Pool:
                          description: The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
                          type: string
                        tags:
                          description: |-
                            The tags. The value parameter is required, but if you don't want the tag
                            to have a value, specify the parameter with no value, and we set the value
                            to an empty string.
                          items:
                            description: Describes a tag.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                      required:
                        - cidrBlocks
                      type: object
                    status:
                      description: VPCStatus defines the observed state of VPC
                      properties:
                        ackResourceMetadata:
                          description: |-
                            All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                            that is used to contain resource sync state, account ownership,
                            constructed ARN for the resource
                          properties:
                            arn:
                              description: |-
                                ARN is the Amazon Resource Name for the resource. This is a
                                globally-unique identifier and is set only by the ACK service controller
                                once the controller has orchestrated the creation of the resource OR
                                when it has verified that an "adopted" resource (a resource where the
                                ARN annotation was set by the Kubernetes user on the CR) exists and
                                matches the supplied CR's Spec field values.
                                https://github.com/aws/aws-controllers-k8s/issues/270
                              type: string
                            ownerAccountID:
                              description: |-
                                OwnerAccountID is the AWS Account ID of the account that owns the
                                backend AWS service API resource.
                              type: string
                            region:
                              description: Region is the AWS region in which the resource exists or will exist.
                              type: string
                          required:
                            - ownerAccountID
                            - region
                          type: object
                        cidrBlockAssociationSet:
                          description: Information about the IPv4 CIDR blocks associated with the VPC.
                          items:
                            description: Describes an IPv4 CIDR block associated with a VPC.
                            properties:
                              associationID:
                                type: string
                              cidrBlock:
                                type: string
                              cidrBlockState:
                                description: Describes the state of a CIDR block.
                                properties:
                                  state:
                                    type: string
                                  statusMessage:
                                    type: string
                                type: object
                            type: object
                          type: array
                        conditions:
                          description: |-
                            All CRs managed by ACK have a common `Status.Conditions` member that
                            contains a collection of `ackv1alpha1.Condition` objects that describe
                            the various terminal states of the CR and its backend AWS service API
                            resource
                          items:
                            description: |-
                              Condition is the common struct used by all CRDs managed by ACK service
                              controllers to indicate terminal states  of the CR and its backend AWS
                              service API resource
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: A human readable message indicating details about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True, False, Unknown.
                                type: string
                              type:
                                description: Type is the type of the Condition
                                type: string
                            required:
                              - status
                              - type
                            type: object
                          type: array
                        dhcpOptionsID:
                          description: The ID of the set of DHCP options you've associated with the VPC.
                          type: string
                        ipv6CIDRBlockAssociationSet:
                          description: Information about the IPv6 CIDR blocks associated with the VPC.
                          items:
                            description: Describes an IPv6 CIDR block associated with a VPC.
                            properties:
                              associationID:
                                type: string
                              ipv6CIDRBlock:
                                type: string
                              ipv6CIDRBlockState:
                                description: Describes the state of a CIDR block.
                                properties:
                                  state:
                                    type: string
                                  statusMessage:
                                    type: string
                                type: object
                              ipv6Pool:
                                type: string
                              networkBorderGroup:
                                type: string
                            type: object
                          type: array
                        isDefault:
                          description: Indicates whether the VPC is the default VPC.
                          type: boolean
                        ownerID:
                          description: The ID of the Amazon Web Services account that owns the VPC.
                          type: string
                        securityGroupDefaultRulesExist:
                          type: boolean
                        state:
                          description: The current state of the VPC.
                          type: string
                        vpcID:
                          description: The ID of the VPC.
                          type: string
                      type: object
                  type: object
              served: true
              storage: true
              subresources:
                status: {}
    - id: serviceaccount---schema-spec-values-serviceaccount-name
      template:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          annotations:
            eks.amazonaws.com/role-arn: ${ackIamRole.status.ackResourceMetadata.arn}
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.values.serviceAccount.name}
          namespace: ${schema.spec.namespace}
    - id: clusterrole---schema-spec-name--ec2-chart
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart
        rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
              - secrets
            verbs:
              - get
              - list
              - patch
              - watch
          - apiGroups:
              - ""
            resources:
              - namespaces
            verbs:
              - get
              - list
              - watch
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - capacityreservations
              - dhcpoptions
              - elasticipaddresses
              - flowlogs
              - instances
              - internetgateways
              - launchtemplates
              - natgateways
              - networkacls
              - routetables
              - securitygroups
              - subnets
              - transitgateways
              - transitgatewayvpcattachments
              - vpcendpoints
              - vpcendpointserviceconfigurations
              - vpcpeeringconnections
              - vpcs
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - capacityreservations/status
              - dhcpoptions/status
              - elasticipaddresses/status
              - flowlogs/status
              - instances/status
              - internetgateways/status
              - launchtemplates/status
              - natgateways/status
              - networkacls/status
              - routetables/status
              - securitygroups/status
              - subnets/status
              - transitgateways/status
              - transitgatewayvpcattachments/status
              - vpcendpoints/status
              - vpcendpointserviceconfigurations/status
              - vpcpeeringconnections/status
              - vpcs/status
            verbs:
              - get
              - patch
              - update
          - apiGroups:
              - services.k8s.aws
            resources:
              - adoptedresources
              - fieldexports
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - services.k8s.aws
            resources:
              - adoptedresources/status
              - fieldexports/status
            verbs:
              - get
              - patch
              - update
    - id: clusterrole---schema-spec-name--ec2-chart-namespaces-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-namespaces-cache
        rules:
          - apiGroups:
              - ""
            resources:
              - namespaces
            verbs:
              - get
              - list
              - watch
    - id: clusterrolebinding---schema-spec-name--ec2-chart-namespaces-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-namespaces-cache
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: ${schema.spec.name}-ec2-chart-namespaces-cache
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: clusterrolebinding---schema-spec-name--ec2-chart-rolebinding
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-rolebinding
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: ${schema.spec.name}-ec2-chart
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: role---schema-spec-name--ec2-chart-configmaps-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-configmaps-cache
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - ""
            resources:
              - configmaps
            verbs:
              - get
              - list
              - watch
    - id: role---schema-spec-name--ec2-chart-reader
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-reader
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - capacityreservations
              - dhcpoptions
              - elasticipaddresses
              - flowlogs
              - instances
              - internetgateways
              - launchtemplates
              - natgateways
              - networkacls
              - routetables
              - securitygroups
              - subnets
              - transitgateways
              - transitgatewayvpcattachments
              - vpcs
              - vpcendpoints
              - vpcendpointserviceconfigurations
              - vpcpeeringconnections
            verbs:
              - get
              - list
              - watch
    - id: role---schema-spec-name--ec2-chart-writer
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          creationTimestamp: null
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-writer
          namespace: ${schema.spec.namespace}
        rules:
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - capacityreservations
              - dhcpoptions
              - elasticipaddresses
              - flowlogs
              - instances
              - internetgateways
              - launchtemplates
              - natgateways
              - networkacls
              - routetables
              - securitygroups
              - subnets
              - transitgateways
              - transitgatewayvpcattachments
              - vpcs
              - vpcendpoints
              - vpcendpointserviceconfigurations
              - vpcpeeringconnections
            verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
          - apiGroups:
              - ec2.services.k8s.aws
            resources:
              - capacityreservations
              - dhcpoptions
              - elasticipaddresses
              - flowlogs
              - instances
              - internetgateways
              - launchtemplates
              - natgateways
              - networkacls
              - routetables
              - securitygroups
              - subnets
              - transitgateways
              - transitgatewayvpcattachments
              - vpcs
              - vpcendpoints
              - vpcendpointserviceconfigurations
              - vpcpeeringconnections
            verbs:
              - get
              - patch
              - update
    - id: rolebinding---schema-spec-name--ec2-chart-configmaps-cache
      template:
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart-configmaps-cache
          namespace: ${schema.spec.namespace}
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: ${schema.spec.name}-ec2-chart-configmaps-cache
        subjects:
          - kind: ServiceAccount
            name: ${schema.spec.values.serviceAccount.name}
            namespace: ${schema.spec.namespace}
    - id: deployment---schema-spec-name--ec2-chart
      template:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          labels:
            app.kubernetes.io/instance: ${schema.spec.name}
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: ec2-chart
            app.kubernetes.io/version: 1.7.0
            helm.sh/chart: ec2-chart-1.7.0
            k8s-app: ec2-chart
          name: ${schema.spec.name}-ec2-chart
          namespace: ${schema.spec.namespace}
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/instance: ${schema.spec.name}
              app.kubernetes.io/name: ec2-chart
          template:
            metadata:
              labels:
                app.kubernetes.io/instance: ${schema.spec.name}
                app.kubernetes.io/managed-by: Helm
                app.kubernetes.io/name: ec2-chart
                k8s-app: ec2-chart
            spec:
              containers:
                - args:
                    - --aws-region
                    - $(AWS_REGION)
                    - --aws-endpoint-url
                    - $(AWS_ENDPOINT_URL)
                    - --log-level
                    - $(ACK_LOG_LEVEL)
                    - --resource-tags
                    - $(ACK_RESOURCE_TAGS)
                    - --watch-namespace
                    - $(ACK_WATCH_NAMESPACE)
                    - --watch-selectors
                    - $(ACK_WATCH_SELECTORS)
                    - --reconcile-resources
                    - $(RECONCILE_RESOURCES)
                    - --deletion-policy
                    - $(DELETION_POLICY)
                    - --reconcile-default-resync-seconds
                    - $(RECONCILE_DEFAULT_RESYNC_SECONDS)
                    - --reconcile-default-max-concurrent-syncs
                    - $(RECONCILE_DEFAULT_MAX_CONCURRENT_SYNCS)
                    - --feature-gates
                    - $(FEATURE_GATES)
                    - --enable-carm=true
                  command:
                    - ./bin/controller
                  env:
                    - name: ACK_SYSTEM_NAMESPACE
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.namespace
                    - name: AWS_REGION
                      value: ${schema.spec.values.aws.region}
                    - name: AWS_ENDPOINT_URL
                      value: ""
                    - name: ACK_WATCH_NAMESPACE
                      value: null
                    - name: ACK_WATCH_SELECTORS
                      value: null
                    - name: RECONCILE_RESOURCES
                      value: CapacityReservation,DHCPOptions,ElasticIPAddress,FlowLog,Instance,InternetGateway,LaunchTemplate,NATGateway,NetworkACL,RouteTable,SecurityGroup,Subnet,TransitGateway,TransitGatewayVPCAttachment,VPC,VPCEndpoint,VPCEndpointServiceConfiguration,VPCPeeringConnection
                    - name: DELETION_POLICY
                      value: delete
                    - name: LEADER_ELECTION_NAMESPACE
                      value: ""
                    - name: ACK_LOG_LEVEL
                      value: info
                    - name: ACK_RESOURCE_TAGS
                      value: services.k8s.aws/controller-version=%CONTROLLER_SERVICE%-%CONTROLLER_VERSION%,services.k8s.aws/namespace=%K8S_NAMESPACE%
                    - name: RECONCILE_DEFAULT_RESYNC_SECONDS
                      value: "36000"
                    - name: RECONCILE_DEFAULT_MAX_CONCURRENT_SYNCS
                      value: "1"
                    - name: FEATURE_GATES
                      value: ReadOnlyResources=true,ResourceAdoption=true,ServiceLevelCARM=false,TeamLevelCARM=false
                  image: ${schema.spec.values.image.repository}:${schema.spec.values.image.tag}
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    httpGet:
                      path: /healthz
                      port: 8081
                    initialDelaySeconds: 15
                    periodSeconds: 20
                  name: controller
                  ports:
                    - containerPort: 8080
                      name: http
                  readinessProbe:
                    httpGet:
                      path: /readyz
                      port: 8081
                    initialDelaySeconds: 5
                    periodSeconds: 10
                  resources:
                    limits:
                      cpu: 100m
                      memory: 128Mi
                    requests:
                      cpu: 50m
                      memory: 64Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                      drop:
                        - ALL
                    privileged: false
                    readOnlyRootFilesystem: true
                    runAsNonRoot: true
              dnsPolicy: ClusterFirst
              hostIPC: false
              hostNetwork: false
              hostPID: false
              nodeSelector:
                kubernetes.io/os: linux
              securityContext:
                seccompProfile:
                  type: RuntimeDefault
              serviceAccountName: ${schema.spec.values.serviceAccount.name}
              terminationGracePeriodSeconds: 10
