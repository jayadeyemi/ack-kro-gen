package placeholders

// Map template sentinels -> schema references used inside resource blocks.
var SentinelToSchema = map[string]string{
	"_NAME_":                        "${schema.spec.name}",
	"_NAMESPACE_":                   "${schema.spec.namespace}",
	"_AWS_ACCOUNT_ID_":              "${schema.spec.aws.accountID}",
	"_AWS_REGION_":                  "${schema.spec.aws.region}",
	"_AWS_ENDPOINT_URL_":            "${schema.spec.aws.endpoint_url}",
	"_AWS_SECRET_NAME_":             "${schema.spec.aws.credentials.secretName}",
	"_AWS_SECRET_KEY_":              "${schema.spec.aws.credentials.secretKey}",
	"_AWS_PROFILE_":                 "${schema.spec.aws.credentials.profile}",
	"_DELETION_POLICY_":             "${schema.spec.deletionPolicy}",
	"_IMAGE_REPOSITORY_":            "${schema.spec.image.repository}",
	"_IMAGE_TAG_":                   "${schema.spec.image.tag}",
	"_IMAGE_PULL_POLICY_":           "${schema.spec.image.pullPolicy}",
	"_IMAGE_PULL_SECRETS_":          "${schema.spec.image.pullSecrets}",
	"_DEP_REPLICAS_":                "${schema.spec.deployment.replicas}",
	"_DEP_PORT_":                    "${schema.spec.deployment.containerPort}",
	"_DEP_LABELS_":                  "${schema.spec.deployment.labels}",
	"_DEP_ANNOTATIONS_":             "${schema.spec.deployment.annotations}",
	"_DEP_NODE_SELECTOR_":           "${schema.spec.deployment.nodeSelector}",
	"_DEP_TOLERATIONS_":             "${schema.spec.deployment.tolerations}",
	"_DEP_AFFINITY_":                "${schema.spec.deployment.affinity}",
	"_DEP_PRIORITY_CLASS_":          "${schema.spec.deployment.priorityClassName}",
	"_DEP_HOST_NETWORK_":            "${schema.spec.deployment.hostNetwork}",
	"_DEP_DNS_POLICY_":              "${schema.spec.deployment.dnsPolicy}",
	"_DEP_STRATEGY_":                "${schema.spec.deployment.strategy}",
	"_DEP_EXTRA_VOLUMES_":           "${schema.spec.deployment.extraVolumes}",
	"_DEP_EXTRA_VOLUME_MOUNTS_":     "${schema.spec.deployment.extraVolumeMounts}",
	"_DEP_EXTRA_ENV_VARS_":          "${schema.spec.deployment.extraEnvVars}",
	"_RES_REQUESTS_MEMORY_":         "${schema.spec.resources.requests.memory}",
	"_RES_REQUESTS_CPU_":            "${schema.spec.resources.requests.cpu}",
	"_RES_LIMITS_MEMORY_":           "${schema.spec.resources.limits.memory}",
	"_RES_LIMITS_CPU_":              "${schema.spec.resources.limits.cpu}",
	"_ROLE_LABELS_":                 "${schema.spec.role.labels}",
	"_METRICS_SERVICE_CREATE_":      "${schema.spec.metrics.service.create}",
	"_METRICS_SERVICE_TYPE_":        "${schema.spec.metrics.service.type}",
	"_LOG_DEV_":                     "${schema.spec.log.enable_development_logging}",
	"_LOG_LEVEL_":                   "${schema.spec.log.level}",
	"_INSTALL_SCOPE_":               "${schema.spec.installScope}",
	"_WATCH_NAMESPACE_":             "${schema.spec.watchNamespace}",
	"_WATCH_SELECTORS_":             "${schema.spec.watchSelectors}",
	"_RESOURCE_TAGS_":               "${schema.spec.resourceTags}",
	"_RECONCILE_DEFAULT_RESYNC_":    "${schema.spec.reconcile.defaultResyncPeriod}",
	"_RECONCILE_RESOURCE_RESYNCS_":  "${schema.spec.reconcile.resourceResyncPeriods}",
	"_RECONCILE_DEFAULT_MAX_CONC_":  "${schema.spec.reconcile.defaultMaxConcurrentSyncs}",
	"_RECONCILE_RESOURCE_MAX_CONC_": "${schema.spec.reconcile.resourceMaxConcurrentSyncs}",
	"_RECONCILE_RESOURCES_":         "${schema.spec.reconcile.resources}",
	"_ENABLE_CARM_":                 "${schema.spec.enableCARM}",
	"_FEATURE_GATES_":               "${schema.spec.featureGates}",
	"_SA_CREATE_":                   "${schema.spec.serviceAccount.create}",
	"_SA_NAME_":                     "${schema.spec.serviceAccount.name}",
	"_SA_ANNOTATIONS_":              "${schema.spec.serviceAccount.annotations}",
	"_IRSA_ARN_":                    "${schema.spec.serviceAccount.annotations[\"eks.amazonaws.com/role-arn\"]}",
	"_LEADER_ELECTION_ENABLED_":     "${schema.spec.leaderElection.enabled}",
	"_LEADER_ELECTION_NAMESPACE_":   "${schema.spec.leaderElection.namespace}",
	// Convenience IRSA
	"_IAM_ROLE_OIDC_PROVIDER_":        "${schema.spec.iamRole.oidcProvider}",
	"_IAM_ROLE_MAX_SESSION_DURATION_": "${schema.spec.iamRole.maxSessionDuration}",
	"_IAM_ROLE_DESCRIPTION_":          "${schema.spec.iamRole.roleDescription}",
	// Known tag sentinels in templates
	"_CONTROLLER_SERVICE_": "${schema.spec.name}",
	"_CONTROLLER_VERSION_": "${schema.spec.image.tag}",
}

// Map schema references -> concrete defaults for filling ${...} when writing defaults.
var SchemaDefaults = map[string]string{
	"${schema.spec.name}":                                 "_CONTROLLER_NAME_",
	"${schema.spec.namespace}":                            "ack-system",
	"${schema.spec.aws.accountID}":                        "",
	"${schema.spec.aws.region}":                           "",
	"${schema.spec.aws.endpoint_url}":                     "",
	"${schema.spec.aws.credentials.secretName}":           "",
	"${schema.spec.aws.credentials.secretKey}":            "credentials",
	"${schema.spec.aws.credentials.profile}":              "default",
	"${schema.spec.deletionPolicy}":                       "delete",
	"${schema.spec.image.repository}":                     "_IMAGE_REPOSITORY_",
	"${schema.spec.image.tag}":                            "_IMAGE_TAG_",
	"${schema.spec.image.pullPolicy}":                     "IfNotPresent",
	"${schema.spec.image.pullSecrets}":                    "[]",
	"${schema.spec.deployment.replicas}":                  "1",
	"${schema.spec.deployment.containerPort}":             "8080",
	"${schema.spec.deployment.labels}":                    "{}",
	"${schema.spec.deployment.annotations}":               "{}",
	"${schema.spec.deployment.nodeSelector}":              `{"kubernetes.io/os":"linux"}`,
	"${schema.spec.deployment.tolerations}":               "[]",
	"${schema.spec.deployment.affinity}":                  "{}",
	"${schema.spec.deployment.priorityClassName}":         `""`,
	"${schema.spec.deployment.hostNetwork}":               "false",
	"${schema.spec.deployment.dnsPolicy}":                 "ClusterFirst",
	"${schema.spec.deployment.strategy}":                  "{}",
	"${schema.spec.deployment.extraVolumes}":              "[]",
	"${schema.spec.deployment.extraVolumeMounts}":         "[]",
	"${schema.spec.deployment.extraEnvVars}":              "[]",
	"${schema.spec.resources.requests.memory}":            "64Mi",
	"${schema.spec.resources.requests.cpu}":               "50m",
	"${schema.spec.resources.limits.memory}":              "128Mi",
	"${schema.spec.resources.limits.cpu}":                 "100m",
	"${schema.spec.role.labels}":                          "{}",
	"${schema.spec.metrics.service.create}":               "false",
	"${schema.spec.metrics.service.type}":                 "ClusterIP",
	"${schema.spec.log.enable_development_logging}":       "false",
	"${schema.spec.log.level}":                            "info",
	"${schema.spec.installScope}":                         "cluster",
	"${schema.spec.watchNamespace}":                       `""`,
	"${schema.spec.watchSelectors}":                       `""`,
	"${schema.spec.resourceTags}":                         `["services.k8s.aws/controller-version=_CONTROLLER_NAME_-_IMAGE_TAG_","services.k8s.aws/namespace=_NAMESPACE_"]`,
	"${schema.spec.reconcile.defaultResyncPeriod}":        "36000",
	"${schema.spec.reconcile.resourceResyncPeriods}":      "{}",
	"${schema.spec.reconcile.defaultMaxConcurrentSyncs}":  "1",
	"${schema.spec.reconcile.resourceMaxConcurrentSyncs}": "{}",
	"${schema.spec.reconcile.resources}":                  "[]",
	"${schema.spec.enableCARM}":                           "true",
	"${schema.spec.featureGates}":                         `{"ServiceLevelCARM":false,"TeamLevelCARM":false,"ReadOnlyResources":true,"ResourceAdoption":true}`,
	"${schema.spec.serviceAccount.create}":                "true",
	"${schema.spec.serviceAccount.name}":                  "_CONTROLLER_NAME_",
	"${schema.spec.serviceAccount.annotations}":           "{}",
	"${schema.spec.leaderElection.enabled}":               "false",
	"${schema.spec.leaderElection.namespace}":             `""`,
	// IRSA convenience
	"${schema.spec.iamRole.oidcProvider}":       "",
	"${schema.spec.iamRole.maxSessionDuration}": "3600",
	"${schema.spec.iamRole.roleDescription}":    "IRSA role for ACK _SERVICE_LOWER_ controller deployment on EKS cluster using KRO Resource Graph",
}
